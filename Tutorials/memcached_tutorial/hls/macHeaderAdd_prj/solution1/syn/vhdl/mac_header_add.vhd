-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity mac_header_add is
port (
    dataIn_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
    dataIn_TKEEP : IN STD_LOGIC_VECTOR (7 downto 0);
    dataIn_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    dataIn_TUSER : IN STD_LOGIC_VECTOR (111 downto 0);
    dataOut_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
    dataOut_TKEEP : OUT STD_LOGIC_VECTOR (7 downto 0);
    dataOut_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    dataOut_TUSER : OUT STD_LOGIC_VECTOR (111 downto 0);
    SrcMacAddress_V : IN STD_LOGIC_VECTOR (47 downto 0);
    DestMacAddress_V : IN STD_LOGIC_VECTOR (47 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    dataIn_TVALID : IN STD_LOGIC;
    dataIn_TREADY : OUT STD_LOGIC;
    dataOut_TVALID : OUT STD_LOGIC;
    dataOut_TREADY : IN STD_LOGIC );
end;


architecture behav of mac_header_add is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "mac_header_add,hls_ip_2018_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xcku040-ffva1156-2-e,HLS_INPUT_CLOCK=6.660000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=5.373200,HLS_SYN_LAT=5,HLS_SYN_TPT=2,HLS_SYN_MEM=11,HLS_SYN_DSP=0,HLS_SYN_FF=979,HLS_SYN_LUT=1299,HLS_VERSION=2018_3}";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv112_0 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal ap_rst_n_inv : STD_LOGIC;
    signal add_mac_header_U0_ap_start : STD_LOGIC;
    signal add_mac_header_U0_ap_done : STD_LOGIC;
    signal add_mac_header_U0_ap_continue : STD_LOGIC;
    signal add_mac_header_U0_ap_idle : STD_LOGIC;
    signal add_mac_header_U0_ap_ready : STD_LOGIC;
    signal add_mac_header_U0_dataFifo_V_din : STD_LOGIC_VECTOR (184 downto 0);
    signal add_mac_header_U0_dataFifo_V_write : STD_LOGIC;
    signal add_mac_header_U0_dataLenFifo_V_V_din : STD_LOGIC_VECTOR (15 downto 0);
    signal add_mac_header_U0_dataLenFifo_V_V_write : STD_LOGIC;
    signal add_mac_header_U0_start_out : STD_LOGIC;
    signal add_mac_header_U0_start_write : STD_LOGIC;
    signal add_mac_header_U0_dataIn_TREADY : STD_LOGIC;
    signal edit_len_field_U0_ap_start : STD_LOGIC;
    signal edit_len_field_U0_ap_done : STD_LOGIC;
    signal edit_len_field_U0_ap_continue : STD_LOGIC;
    signal edit_len_field_U0_ap_idle : STD_LOGIC;
    signal edit_len_field_U0_ap_ready : STD_LOGIC;
    signal edit_len_field_U0_dataFifo_V_read : STD_LOGIC;
    signal edit_len_field_U0_dataLenFifo_V_V_read : STD_LOGIC;
    signal edit_len_field_U0_dataOut_TDATA : STD_LOGIC_VECTOR (63 downto 0);
    signal edit_len_field_U0_dataOut_TVALID : STD_LOGIC;
    signal edit_len_field_U0_dataOut_TKEEP : STD_LOGIC_VECTOR (7 downto 0);
    signal edit_len_field_U0_dataOut_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal edit_len_field_U0_dataOut_TUSER : STD_LOGIC_VECTOR (111 downto 0);
    signal ap_sync_continue : STD_LOGIC;
    signal dataFifo_V_full_n : STD_LOGIC;
    signal dataFifo_V_dout : STD_LOGIC_VECTOR (184 downto 0);
    signal dataFifo_V_empty_n : STD_LOGIC;
    signal dataLenFifo_V_V_full_n : STD_LOGIC;
    signal dataLenFifo_V_V_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal dataLenFifo_V_V_empty_n : STD_LOGIC;
    signal start_for_edit_len_field_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_edit_len_field_U0_full_n : STD_LOGIC;
    signal start_for_edit_len_field_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_edit_len_field_U0_empty_n : STD_LOGIC;
    signal edit_len_field_U0_start_full_n : STD_LOGIC;
    signal edit_len_field_U0_start_write : STD_LOGIC;

    component add_mac_header IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        dataFifo_V_din : OUT STD_LOGIC_VECTOR (184 downto 0);
        dataFifo_V_full_n : IN STD_LOGIC;
        dataFifo_V_write : OUT STD_LOGIC;
        dataLenFifo_V_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        dataLenFifo_V_V_full_n : IN STD_LOGIC;
        dataLenFifo_V_V_write : OUT STD_LOGIC;
        dataIn_TVALID : IN STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        dataIn_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
        dataIn_TREADY : OUT STD_LOGIC;
        dataIn_TKEEP : IN STD_LOGIC_VECTOR (7 downto 0);
        dataIn_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        dataIn_TUSER : IN STD_LOGIC_VECTOR (111 downto 0) );
    end component;


    component edit_len_field IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        dataFifo_V_dout : IN STD_LOGIC_VECTOR (184 downto 0);
        dataFifo_V_empty_n : IN STD_LOGIC;
        dataFifo_V_read : OUT STD_LOGIC;
        dataLenFifo_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        dataLenFifo_V_V_empty_n : IN STD_LOGIC;
        dataLenFifo_V_V_read : OUT STD_LOGIC;
        dataOut_TREADY : IN STD_LOGIC;
        dataOut_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
        dataOut_TVALID : OUT STD_LOGIC;
        dataOut_TKEEP : OUT STD_LOGIC_VECTOR (7 downto 0);
        dataOut_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
        dataOut_TUSER : OUT STD_LOGIC_VECTOR (111 downto 0) );
    end component;


    component fifo_w185_d16_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (184 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (184 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w16_d4_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (15 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (15 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_edit_len_field_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    add_mac_header_U0 : component add_mac_header
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => add_mac_header_U0_ap_start,
        start_full_n => start_for_edit_len_field_U0_full_n,
        ap_done => add_mac_header_U0_ap_done,
        ap_continue => add_mac_header_U0_ap_continue,
        ap_idle => add_mac_header_U0_ap_idle,
        ap_ready => add_mac_header_U0_ap_ready,
        dataFifo_V_din => add_mac_header_U0_dataFifo_V_din,
        dataFifo_V_full_n => dataFifo_V_full_n,
        dataFifo_V_write => add_mac_header_U0_dataFifo_V_write,
        dataLenFifo_V_V_din => add_mac_header_U0_dataLenFifo_V_V_din,
        dataLenFifo_V_V_full_n => dataLenFifo_V_V_full_n,
        dataLenFifo_V_V_write => add_mac_header_U0_dataLenFifo_V_V_write,
        dataIn_TVALID => dataIn_TVALID,
        start_out => add_mac_header_U0_start_out,
        start_write => add_mac_header_U0_start_write,
        dataIn_TDATA => dataIn_TDATA,
        dataIn_TREADY => add_mac_header_U0_dataIn_TREADY,
        dataIn_TKEEP => dataIn_TKEEP,
        dataIn_TLAST => dataIn_TLAST,
        dataIn_TUSER => dataIn_TUSER);

    edit_len_field_U0 : component edit_len_field
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => edit_len_field_U0_ap_start,
        ap_done => edit_len_field_U0_ap_done,
        ap_continue => edit_len_field_U0_ap_continue,
        ap_idle => edit_len_field_U0_ap_idle,
        ap_ready => edit_len_field_U0_ap_ready,
        dataFifo_V_dout => dataFifo_V_dout,
        dataFifo_V_empty_n => dataFifo_V_empty_n,
        dataFifo_V_read => edit_len_field_U0_dataFifo_V_read,
        dataLenFifo_V_V_dout => dataLenFifo_V_V_dout,
        dataLenFifo_V_V_empty_n => dataLenFifo_V_V_empty_n,
        dataLenFifo_V_V_read => edit_len_field_U0_dataLenFifo_V_V_read,
        dataOut_TREADY => dataOut_TREADY,
        dataOut_TDATA => edit_len_field_U0_dataOut_TDATA,
        dataOut_TVALID => edit_len_field_U0_dataOut_TVALID,
        dataOut_TKEEP => edit_len_field_U0_dataOut_TKEEP,
        dataOut_TLAST => edit_len_field_U0_dataOut_TLAST,
        dataOut_TUSER => edit_len_field_U0_dataOut_TUSER);

    dataFifo_V_U : component fifo_w185_d16_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => add_mac_header_U0_dataFifo_V_din,
        if_full_n => dataFifo_V_full_n,
        if_write => add_mac_header_U0_dataFifo_V_write,
        if_dout => dataFifo_V_dout,
        if_empty_n => dataFifo_V_empty_n,
        if_read => edit_len_field_U0_dataFifo_V_read);

    dataLenFifo_V_V_U : component fifo_w16_d4_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => add_mac_header_U0_dataLenFifo_V_V_din,
        if_full_n => dataLenFifo_V_V_full_n,
        if_write => add_mac_header_U0_dataLenFifo_V_V_write,
        if_dout => dataLenFifo_V_V_dout,
        if_empty_n => dataLenFifo_V_V_empty_n,
        if_read => edit_len_field_U0_dataLenFifo_V_V_read);

    start_for_edit_len_field_U0_U : component start_for_edit_len_field_U0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_edit_len_field_U0_din,
        if_full_n => start_for_edit_len_field_U0_full_n,
        if_write => add_mac_header_U0_start_write,
        if_dout => start_for_edit_len_field_U0_dout,
        if_empty_n => start_for_edit_len_field_U0_empty_n,
        if_read => edit_len_field_U0_ap_ready);




    add_mac_header_U0_ap_continue <= ap_const_logic_1;
    add_mac_header_U0_ap_start <= ap_const_logic_1;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    ap_sync_continue <= ap_const_logic_0;
    dataIn_TREADY <= add_mac_header_U0_dataIn_TREADY;
    dataOut_TDATA <= edit_len_field_U0_dataOut_TDATA;
    dataOut_TKEEP <= edit_len_field_U0_dataOut_TKEEP;
    dataOut_TLAST <= edit_len_field_U0_dataOut_TLAST;
    dataOut_TUSER <= edit_len_field_U0_dataOut_TUSER;
    dataOut_TVALID <= edit_len_field_U0_dataOut_TVALID;
    edit_len_field_U0_ap_continue <= ap_const_logic_1;
    edit_len_field_U0_ap_start <= start_for_edit_len_field_U0_empty_n;
    edit_len_field_U0_start_full_n <= ap_const_logic_1;
    edit_len_field_U0_start_write <= ap_const_logic_0;
    start_for_edit_len_field_U0_din <= (0=>ap_const_logic_1, others=>'-');
end behav;

// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "edit_len_field.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic edit_len_field::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic edit_len_field::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<1> edit_len_field::ap_ST_iter0_fsm_state1 = "1";
const sc_lv<2> edit_len_field::ap_ST_iter1_fsm_state2 = "10";
const sc_lv<2> edit_len_field::ap_ST_iter2_fsm_state3 = "10";
const sc_lv<2> edit_len_field::ap_ST_iter1_fsm_state0 = "1";
const sc_lv<2> edit_len_field::ap_ST_iter2_fsm_state0 = "1";
const sc_lv<32> edit_len_field::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool edit_len_field::ap_const_boolean_1 = true;
const sc_lv<2> edit_len_field::ap_const_lv2_2 = "10";
const sc_lv<1> edit_len_field::ap_const_lv1_1 = "1";
const sc_lv<2> edit_len_field::ap_const_lv2_1 = "1";
const sc_lv<2> edit_len_field::ap_const_lv2_0 = "00";
const sc_lv<32> edit_len_field::ap_const_lv32_1 = "1";
const sc_lv<1> edit_len_field::ap_const_lv1_0 = "0";
const sc_lv<2> edit_len_field::ap_const_lv2_3 = "11";
const sc_lv<16> edit_len_field::ap_const_lv16_0 = "0000000000000000";
const sc_lv<112> edit_len_field::ap_const_lv112_0 = "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> edit_len_field::ap_const_lv32_40 = "1000000";
const sc_lv<32> edit_len_field::ap_const_lv32_47 = "1000111";
const sc_lv<32> edit_len_field::ap_const_lv32_48 = "1001000";
const sc_lv<32> edit_len_field::ap_const_lv32_30 = "110000";
const sc_lv<32> edit_len_field::ap_const_lv32_3F = "111111";
const sc_lv<8> edit_len_field::ap_const_lv8_8 = "1000";
const sc_lv<16> edit_len_field::ap_const_lv16_8 = "1000";
const bool edit_len_field::ap_const_boolean_0 = false;

edit_len_field::edit_len_field(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_iter0_fsm_state1);
    sensitive << ( ap_CS_iter0_fsm );

    SC_METHOD(thread_ap_CS_iter1_fsm_state0);
    sensitive << ( ap_CS_iter1_fsm );

    SC_METHOD(thread_ap_CS_iter1_fsm_state2);
    sensitive << ( ap_CS_iter1_fsm );

    SC_METHOD(thread_ap_CS_iter2_fsm_state0);
    sensitive << ( ap_CS_iter2_fsm );

    SC_METHOD(thread_ap_CS_iter2_fsm_state3);
    sensitive << ( ap_CS_iter2_fsm );

    SC_METHOD(thread_ap_block_state1_pp0_stage0_iter0);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( dataFifo_V_empty_n );
    sensitive << ( ap_predicate_op8_read_state1 );
    sensitive << ( ap_predicate_op14_read_state1 );
    sensitive << ( dataLenFifo_V_V_empty_n );
    sensitive << ( ap_predicate_op25_read_state1 );
    sensitive << ( ap_predicate_op27_read_state1 );

    SC_METHOD(thread_ap_block_state2_io);
    sensitive << ( dataOut_V_data_V_1_ack_in );
    sensitive << ( ap_predicate_op33_write_state2 );
    sensitive << ( ap_predicate_op39_write_state2 );
    sensitive << ( ap_predicate_op41_write_state2 );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state3_io);
    sensitive << ( dataOut_V_data_V_1_ack_in );
    sensitive << ( ap_predicate_op46_write_state3 );
    sensitive << ( ap_predicate_op50_write_state3 );
    sensitive << ( ap_predicate_op53_write_state3 );

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter2);
    sensitive << ( dataOut_V_data_V_1_ack_in );
    sensitive << ( dataOut_V_keep_V_1_ack_in );
    sensitive << ( dataOut_V_last_V_1_ack_in );
    sensitive << ( dataOut_V_user_V_1_ack_in );

    SC_METHOD(thread_ap_condition_521);
    sensitive << ( ap_done_reg );
    sensitive << ( dataOut_V_data_V_1_ack_in );
    sensitive << ( ap_CS_iter1_fsm_state2 );
    sensitive << ( dataOut_V_keep_V_1_ack_in );
    sensitive << ( dataOut_V_last_V_1_ack_in );
    sensitive << ( dataOut_V_user_V_1_ack_in );
    sensitive << ( ap_CS_iter2_fsm_state3 );

    SC_METHOD(thread_ap_condition_620);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_iter0_fsm_state1 );
    sensitive << ( dataFifo_V_empty_n );
    sensitive << ( grp_nbreadreq_fu_80_p3 );
    sensitive << ( ap_predicate_op8_read_state1 );
    sensitive << ( ap_predicate_op14_read_state1 );
    sensitive << ( dataLenFifo_V_V_empty_n );
    sensitive << ( ap_predicate_op25_read_state1 );
    sensitive << ( ap_predicate_op27_read_state1 );
    sensitive << ( dataOut_V_data_V_1_ack_in );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_CS_iter1_fsm_state2 );
    sensitive << ( dataOut_V_keep_V_1_ack_in );
    sensitive << ( dataOut_V_last_V_1_ack_in );
    sensitive << ( dataOut_V_user_V_1_ack_in );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_CS_iter2_fsm_state3 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( dataOut_V_data_V_1_ack_in );
    sensitive << ( dataOut_V_keep_V_1_ack_in );
    sensitive << ( dataOut_V_last_V_1_ack_in );
    sensitive << ( dataOut_V_user_V_1_ack_in );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_CS_iter2_fsm_state3 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_iter0_fsm_state1 );
    sensitive << ( ap_CS_iter1_fsm_state0 );
    sensitive << ( ap_CS_iter2_fsm_state0 );

    SC_METHOD(thread_ap_predicate_op14_read_state1);
    sensitive << ( grp_nbreadreq_fu_80_p3 );
    sensitive << ( pkt_state );

    SC_METHOD(thread_ap_predicate_op25_read_state1);
    sensitive << ( grp_nbreadreq_fu_80_p3 );
    sensitive << ( tmp_3_nbreadreq_fu_94_p3 );
    sensitive << ( pkt_state );

    SC_METHOD(thread_ap_predicate_op27_read_state1);
    sensitive << ( grp_nbreadreq_fu_80_p3 );
    sensitive << ( tmp_3_nbreadreq_fu_94_p3 );
    sensitive << ( pkt_state );

    SC_METHOD(thread_ap_predicate_op33_write_state2);
    sensitive << ( pkt_state_load_reg_235 );
    sensitive << ( tmp_2_reg_239 );

    SC_METHOD(thread_ap_predicate_op39_write_state2);
    sensitive << ( pkt_state_load_reg_235 );
    sensitive << ( tmp_1_reg_253 );

    SC_METHOD(thread_ap_predicate_op41_write_state2);
    sensitive << ( pkt_state_load_reg_235 );
    sensitive << ( tmp_reg_282 );
    sensitive << ( tmp_3_reg_286 );

    SC_METHOD(thread_ap_predicate_op46_write_state3);
    sensitive << ( pkt_state_load_reg_235_pp0_iter1_reg );
    sensitive << ( tmp_2_reg_239_pp0_iter1_reg );

    SC_METHOD(thread_ap_predicate_op50_write_state3);
    sensitive << ( pkt_state_load_reg_235_pp0_iter1_reg );
    sensitive << ( tmp_1_reg_253_pp0_iter1_reg );

    SC_METHOD(thread_ap_predicate_op53_write_state3);
    sensitive << ( pkt_state_load_reg_235_pp0_iter1_reg );
    sensitive << ( tmp_reg_282_pp0_iter1_reg );
    sensitive << ( tmp_3_reg_286_pp0_iter1_reg );

    SC_METHOD(thread_ap_predicate_op8_read_state1);
    sensitive << ( grp_nbreadreq_fu_80_p3 );
    sensitive << ( pkt_state );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_iter0_fsm_state1 );
    sensitive << ( dataFifo_V_empty_n );
    sensitive << ( ap_predicate_op8_read_state1 );
    sensitive << ( ap_predicate_op14_read_state1 );
    sensitive << ( dataLenFifo_V_V_empty_n );
    sensitive << ( ap_predicate_op25_read_state1 );
    sensitive << ( ap_predicate_op27_read_state1 );
    sensitive << ( dataOut_V_data_V_1_ack_in );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_CS_iter1_fsm_state2 );
    sensitive << ( dataOut_V_keep_V_1_ack_in );
    sensitive << ( dataOut_V_last_V_1_ack_in );
    sensitive << ( dataOut_V_user_V_1_ack_in );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_CS_iter2_fsm_state3 );

    SC_METHOD(thread_dataFifo_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_iter0_fsm_state1 );
    sensitive << ( dataFifo_V_empty_n );
    sensitive << ( ap_predicate_op8_read_state1 );
    sensitive << ( ap_predicate_op14_read_state1 );
    sensitive << ( ap_predicate_op27_read_state1 );

    SC_METHOD(thread_dataFifo_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_iter0_fsm_state1 );
    sensitive << ( dataFifo_V_empty_n );
    sensitive << ( ap_predicate_op8_read_state1 );
    sensitive << ( ap_predicate_op14_read_state1 );
    sensitive << ( dataLenFifo_V_V_empty_n );
    sensitive << ( ap_predicate_op25_read_state1 );
    sensitive << ( ap_predicate_op27_read_state1 );
    sensitive << ( dataOut_V_data_V_1_ack_in );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_CS_iter1_fsm_state2 );
    sensitive << ( dataOut_V_keep_V_1_ack_in );
    sensitive << ( dataOut_V_last_V_1_ack_in );
    sensitive << ( dataOut_V_user_V_1_ack_in );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_CS_iter2_fsm_state3 );

    SC_METHOD(thread_dataLenFifo_V_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_iter0_fsm_state1 );
    sensitive << ( dataLenFifo_V_V_empty_n );
    sensitive << ( ap_predicate_op25_read_state1 );

    SC_METHOD(thread_dataLenFifo_V_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_iter0_fsm_state1 );
    sensitive << ( dataFifo_V_empty_n );
    sensitive << ( ap_predicate_op8_read_state1 );
    sensitive << ( ap_predicate_op14_read_state1 );
    sensitive << ( dataLenFifo_V_V_empty_n );
    sensitive << ( ap_predicate_op25_read_state1 );
    sensitive << ( ap_predicate_op27_read_state1 );
    sensitive << ( dataOut_V_data_V_1_ack_in );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_CS_iter1_fsm_state2 );
    sensitive << ( dataOut_V_keep_V_1_ack_in );
    sensitive << ( dataOut_V_last_V_1_ack_in );
    sensitive << ( dataOut_V_user_V_1_ack_in );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_CS_iter2_fsm_state3 );

    SC_METHOD(thread_dataOut_TDATA);
    sensitive << ( dataOut_V_data_V_1_data_out );

    SC_METHOD(thread_dataOut_TDATA_blk_n);
    sensitive << ( ap_predicate_op33_write_state2 );
    sensitive << ( ap_predicate_op39_write_state2 );
    sensitive << ( ap_predicate_op41_write_state2 );
    sensitive << ( ap_CS_iter1_fsm_state2 );
    sensitive << ( ap_predicate_op46_write_state3 );
    sensitive << ( ap_predicate_op50_write_state3 );
    sensitive << ( ap_predicate_op53_write_state3 );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( dataOut_V_data_V_1_state );

    SC_METHOD(thread_dataOut_TKEEP);
    sensitive << ( dataOut_V_keep_V_1_data_out );

    SC_METHOD(thread_dataOut_TLAST);
    sensitive << ( dataOut_V_last_V_1_data_out );

    SC_METHOD(thread_dataOut_TUSER);
    sensitive << ( dataOut_V_user_V_1_data_out );

    SC_METHOD(thread_dataOut_TVALID);
    sensitive << ( dataOut_V_user_V_1_state );

    SC_METHOD(thread_dataOut_V_data_V_1_ack_in);
    sensitive << ( dataOut_V_data_V_1_state );

    SC_METHOD(thread_dataOut_V_data_V_1_ack_out);
    sensitive << ( dataOut_TREADY );

    SC_METHOD(thread_dataOut_V_data_V_1_data_in);
    sensitive << ( ap_predicate_op33_write_state2 );
    sensitive << ( ap_predicate_op39_write_state2 );
    sensitive << ( ap_predicate_op41_write_state2 );
    sensitive << ( sendWord_data_V_1_reg_243 );
    sensitive << ( sendWord_data_V_reg_290 );
    sensitive << ( p_Result_s_fu_226_p4 );
    sensitive << ( ap_condition_521 );

    SC_METHOD(thread_dataOut_V_data_V_1_data_out);
    sensitive << ( dataOut_V_data_V_1_payload_A );
    sensitive << ( dataOut_V_data_V_1_payload_B );
    sensitive << ( dataOut_V_data_V_1_sel );

    SC_METHOD(thread_dataOut_V_data_V_1_load_A);
    sensitive << ( dataOut_V_data_V_1_sel_wr );
    sensitive << ( dataOut_V_data_V_1_state_cmp_full );

    SC_METHOD(thread_dataOut_V_data_V_1_load_B);
    sensitive << ( dataOut_V_data_V_1_sel_wr );
    sensitive << ( dataOut_V_data_V_1_state_cmp_full );

    SC_METHOD(thread_dataOut_V_data_V_1_sel);
    sensitive << ( dataOut_V_data_V_1_sel_rd );

    SC_METHOD(thread_dataOut_V_data_V_1_state_cmp_full);
    sensitive << ( dataOut_V_data_V_1_state );

    SC_METHOD(thread_dataOut_V_data_V_1_vld_in);
    sensitive << ( ap_done_reg );
    sensitive << ( dataOut_V_data_V_1_ack_in );
    sensitive << ( ap_predicate_op33_write_state2 );
    sensitive << ( ap_predicate_op39_write_state2 );
    sensitive << ( ap_predicate_op41_write_state2 );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_CS_iter1_fsm_state2 );
    sensitive << ( dataOut_V_keep_V_1_ack_in );
    sensitive << ( dataOut_V_last_V_1_ack_in );
    sensitive << ( dataOut_V_user_V_1_ack_in );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_CS_iter2_fsm_state3 );

    SC_METHOD(thread_dataOut_V_data_V_1_vld_out);
    sensitive << ( dataOut_V_data_V_1_state );

    SC_METHOD(thread_dataOut_V_keep_V_1_ack_in);
    sensitive << ( dataOut_V_keep_V_1_state );

    SC_METHOD(thread_dataOut_V_keep_V_1_ack_out);
    sensitive << ( dataOut_TREADY );

    SC_METHOD(thread_dataOut_V_keep_V_1_data_out);
    sensitive << ( dataOut_V_keep_V_1_payload_A );
    sensitive << ( dataOut_V_keep_V_1_payload_B );
    sensitive << ( dataOut_V_keep_V_1_sel );

    SC_METHOD(thread_dataOut_V_keep_V_1_load_A);
    sensitive << ( dataOut_V_keep_V_1_sel_wr );
    sensitive << ( dataOut_V_keep_V_1_state_cmp_full );

    SC_METHOD(thread_dataOut_V_keep_V_1_load_B);
    sensitive << ( dataOut_V_keep_V_1_sel_wr );
    sensitive << ( dataOut_V_keep_V_1_state_cmp_full );

    SC_METHOD(thread_dataOut_V_keep_V_1_sel);
    sensitive << ( dataOut_V_keep_V_1_sel_rd );

    SC_METHOD(thread_dataOut_V_keep_V_1_state_cmp_full);
    sensitive << ( dataOut_V_keep_V_1_state );

    SC_METHOD(thread_dataOut_V_keep_V_1_vld_in);
    sensitive << ( ap_done_reg );
    sensitive << ( dataOut_V_data_V_1_ack_in );
    sensitive << ( ap_predicate_op33_write_state2 );
    sensitive << ( ap_predicate_op39_write_state2 );
    sensitive << ( ap_predicate_op41_write_state2 );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_CS_iter1_fsm_state2 );
    sensitive << ( dataOut_V_keep_V_1_ack_in );
    sensitive << ( dataOut_V_last_V_1_ack_in );
    sensitive << ( dataOut_V_user_V_1_ack_in );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_CS_iter2_fsm_state3 );

    SC_METHOD(thread_dataOut_V_keep_V_1_vld_out);
    sensitive << ( dataOut_V_keep_V_1_state );

    SC_METHOD(thread_dataOut_V_last_V_1_ack_in);
    sensitive << ( dataOut_V_last_V_1_state );

    SC_METHOD(thread_dataOut_V_last_V_1_ack_out);
    sensitive << ( dataOut_TREADY );

    SC_METHOD(thread_dataOut_V_last_V_1_data_in);
    sensitive << ( ap_predicate_op33_write_state2 );
    sensitive << ( ap_predicate_op39_write_state2 );
    sensitive << ( ap_predicate_op41_write_state2 );
    sensitive << ( sendWord_last_V_2_reg_248 );
    sensitive << ( sendWord_last_V_1_reg_257 );
    sensitive << ( sendWord_last_V_reg_295 );
    sensitive << ( ap_condition_521 );

    SC_METHOD(thread_dataOut_V_last_V_1_data_out);
    sensitive << ( dataOut_V_last_V_1_payload_A );
    sensitive << ( dataOut_V_last_V_1_payload_B );
    sensitive << ( dataOut_V_last_V_1_sel );

    SC_METHOD(thread_dataOut_V_last_V_1_load_A);
    sensitive << ( dataOut_V_last_V_1_sel_wr );
    sensitive << ( dataOut_V_last_V_1_state_cmp_full );

    SC_METHOD(thread_dataOut_V_last_V_1_load_B);
    sensitive << ( dataOut_V_last_V_1_sel_wr );
    sensitive << ( dataOut_V_last_V_1_state_cmp_full );

    SC_METHOD(thread_dataOut_V_last_V_1_sel);
    sensitive << ( dataOut_V_last_V_1_sel_rd );

    SC_METHOD(thread_dataOut_V_last_V_1_state_cmp_full);
    sensitive << ( dataOut_V_last_V_1_state );

    SC_METHOD(thread_dataOut_V_last_V_1_vld_in);
    sensitive << ( ap_done_reg );
    sensitive << ( dataOut_V_data_V_1_ack_in );
    sensitive << ( ap_predicate_op33_write_state2 );
    sensitive << ( ap_predicate_op39_write_state2 );
    sensitive << ( ap_predicate_op41_write_state2 );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_CS_iter1_fsm_state2 );
    sensitive << ( dataOut_V_keep_V_1_ack_in );
    sensitive << ( dataOut_V_last_V_1_ack_in );
    sensitive << ( dataOut_V_user_V_1_ack_in );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_CS_iter2_fsm_state3 );

    SC_METHOD(thread_dataOut_V_last_V_1_vld_out);
    sensitive << ( dataOut_V_last_V_1_state );

    SC_METHOD(thread_dataOut_V_user_V_1_ack_in);
    sensitive << ( dataOut_V_user_V_1_state );

    SC_METHOD(thread_dataOut_V_user_V_1_ack_out);
    sensitive << ( dataOut_TREADY );

    SC_METHOD(thread_dataOut_V_user_V_1_data_out);
    sensitive << ( dataOut_V_user_V_1_sel );

    SC_METHOD(thread_dataOut_V_user_V_1_sel);
    sensitive << ( dataOut_V_user_V_1_sel_rd );

    SC_METHOD(thread_dataOut_V_user_V_1_vld_in);
    sensitive << ( ap_done_reg );
    sensitive << ( dataOut_V_data_V_1_ack_in );
    sensitive << ( ap_predicate_op33_write_state2 );
    sensitive << ( ap_predicate_op39_write_state2 );
    sensitive << ( ap_predicate_op41_write_state2 );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_CS_iter1_fsm_state2 );
    sensitive << ( dataOut_V_keep_V_1_ack_in );
    sensitive << ( dataOut_V_last_V_1_ack_in );
    sensitive << ( dataOut_V_user_V_1_ack_in );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_CS_iter2_fsm_state3 );

    SC_METHOD(thread_dataOut_V_user_V_1_vld_out);
    sensitive << ( dataOut_V_user_V_1_state );

    SC_METHOD(thread_grp_fu_135_p3);
    sensitive << ( dataFifo_V_dout );

    SC_METHOD(thread_grp_nbreadreq_fu_80_p3);
    sensitive << ( dataFifo_V_empty_n );

    SC_METHOD(thread_p_Result_s_fu_226_p4);
    sensitive << ( tmp_6_reg_262 );
    sensitive << ( p_Result_6_i_reg_277 );
    sensitive << ( tmp_4_fu_219_p3 );

    SC_METHOD(thread_sendWord_data_V_1_fu_156_p1);
    sensitive << ( dataFifo_V_dout );

    SC_METHOD(thread_sendWord_data_V_fu_202_p1);
    sensitive << ( dataFifo_V_dout );

    SC_METHOD(thread_tmp_3_nbreadreq_fu_94_p3);
    sensitive << ( dataLenFifo_V_V_empty_n );

    SC_METHOD(thread_tmp_4_fu_219_p3);
    sensitive << ( tmp_6_i_reg_267 );
    sensitive << ( tmp_4_i_fu_212_p3 );

    SC_METHOD(thread_tmp_4_i_fu_212_p3);
    sensitive << ( tmp_7_reg_272 );

    SC_METHOD(thread_tmp_6_fu_166_p1);
    sensitive << ( dataFifo_V_dout );

    SC_METHOD(thread_tmp_6_i_fu_170_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_iter0_fsm_state1 );
    sensitive << ( dataFifo_V_empty_n );
    sensitive << ( grp_nbreadreq_fu_80_p3 );
    sensitive << ( ap_predicate_op8_read_state1 );
    sensitive << ( ap_predicate_op14_read_state1 );
    sensitive << ( dataLenFifo_V_V_empty_n );
    sensitive << ( ap_predicate_op25_read_state1 );
    sensitive << ( ap_predicate_op27_read_state1 );
    sensitive << ( dataOut_V_data_V_1_ack_in );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_CS_iter1_fsm_state2 );
    sensitive << ( dataOut_V_keep_V_1_ack_in );
    sensitive << ( dataOut_V_last_V_1_ack_in );
    sensitive << ( dataOut_V_user_V_1_ack_in );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( pkt_state );
    sensitive << ( dataLen_V_1 );

    SC_METHOD(thread_tmp_7_fu_176_p1);
    sensitive << ( dataLen_V_1 );

    SC_METHOD(thread_ap_NS_iter0_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_iter0_fsm );
    sensitive << ( dataFifo_V_empty_n );
    sensitive << ( ap_predicate_op8_read_state1 );
    sensitive << ( ap_predicate_op14_read_state1 );
    sensitive << ( dataLenFifo_V_V_empty_n );
    sensitive << ( ap_predicate_op25_read_state1 );
    sensitive << ( ap_predicate_op27_read_state1 );
    sensitive << ( dataOut_V_data_V_1_ack_in );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_CS_iter1_fsm_state2 );
    sensitive << ( dataOut_V_keep_V_1_ack_in );
    sensitive << ( dataOut_V_last_V_1_ack_in );
    sensitive << ( dataOut_V_user_V_1_ack_in );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_CS_iter2_fsm_state3 );

    SC_METHOD(thread_ap_NS_iter1_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_iter0_fsm_state1 );
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( dataFifo_V_empty_n );
    sensitive << ( ap_predicate_op8_read_state1 );
    sensitive << ( ap_predicate_op14_read_state1 );
    sensitive << ( dataLenFifo_V_V_empty_n );
    sensitive << ( ap_predicate_op25_read_state1 );
    sensitive << ( ap_predicate_op27_read_state1 );
    sensitive << ( dataOut_V_data_V_1_ack_in );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_CS_iter1_fsm_state2 );
    sensitive << ( dataOut_V_keep_V_1_ack_in );
    sensitive << ( dataOut_V_last_V_1_ack_in );
    sensitive << ( dataOut_V_user_V_1_ack_in );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_CS_iter2_fsm_state3 );

    SC_METHOD(thread_ap_NS_iter2_fsm);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_iter2_fsm );
    sensitive << ( dataOut_V_data_V_1_ack_in );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_CS_iter1_fsm_state2 );
    sensitive << ( dataOut_V_keep_V_1_ack_in );
    sensitive << ( dataOut_V_last_V_1_ack_in );
    sensitive << ( dataOut_V_user_V_1_ack_in );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_CS_iter2_fsm_state3 );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_iter0_fsm = "1";
    ap_CS_iter1_fsm = "01";
    ap_CS_iter2_fsm = "01";
    dataOut_V_data_V_1_sel_rd = SC_LOGIC_0;
    dataOut_V_data_V_1_sel_wr = SC_LOGIC_0;
    dataOut_V_data_V_1_state = "00";
    dataOut_V_keep_V_1_sel_rd = SC_LOGIC_0;
    dataOut_V_keep_V_1_sel_wr = SC_LOGIC_0;
    dataOut_V_keep_V_1_state = "00";
    dataOut_V_last_V_1_sel_rd = SC_LOGIC_0;
    dataOut_V_last_V_1_sel_wr = SC_LOGIC_0;
    dataOut_V_last_V_1_state = "00";
    dataOut_V_user_V_1_sel_rd = SC_LOGIC_0;
    dataOut_V_user_V_1_state = "00";
    pkt_state = "00";
    dataLen_V_1 = "0000000000000000";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "edit_len_field_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, dataFifo_V_dout, "(port)dataFifo_V_dout");
    sc_trace(mVcdFile, dataFifo_V_empty_n, "(port)dataFifo_V_empty_n");
    sc_trace(mVcdFile, dataFifo_V_read, "(port)dataFifo_V_read");
    sc_trace(mVcdFile, dataLenFifo_V_V_dout, "(port)dataLenFifo_V_V_dout");
    sc_trace(mVcdFile, dataLenFifo_V_V_empty_n, "(port)dataLenFifo_V_V_empty_n");
    sc_trace(mVcdFile, dataLenFifo_V_V_read, "(port)dataLenFifo_V_V_read");
    sc_trace(mVcdFile, dataOut_TREADY, "(port)dataOut_TREADY");
    sc_trace(mVcdFile, dataOut_TDATA, "(port)dataOut_TDATA");
    sc_trace(mVcdFile, dataOut_TVALID, "(port)dataOut_TVALID");
    sc_trace(mVcdFile, dataOut_TKEEP, "(port)dataOut_TKEEP");
    sc_trace(mVcdFile, dataOut_TLAST, "(port)dataOut_TLAST");
    sc_trace(mVcdFile, dataOut_TUSER, "(port)dataOut_TUSER");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_iter0_fsm, "ap_CS_iter0_fsm");
    sc_trace(mVcdFile, ap_CS_iter0_fsm_state1, "ap_CS_iter0_fsm_state1");
    sc_trace(mVcdFile, ap_CS_iter1_fsm, "ap_CS_iter1_fsm");
    sc_trace(mVcdFile, ap_CS_iter1_fsm_state0, "ap_CS_iter1_fsm_state0");
    sc_trace(mVcdFile, ap_CS_iter2_fsm, "ap_CS_iter2_fsm");
    sc_trace(mVcdFile, ap_CS_iter2_fsm_state0, "ap_CS_iter2_fsm_state0");
    sc_trace(mVcdFile, grp_nbreadreq_fu_80_p3, "grp_nbreadreq_fu_80_p3");
    sc_trace(mVcdFile, ap_predicate_op8_read_state1, "ap_predicate_op8_read_state1");
    sc_trace(mVcdFile, ap_predicate_op14_read_state1, "ap_predicate_op14_read_state1");
    sc_trace(mVcdFile, tmp_3_nbreadreq_fu_94_p3, "tmp_3_nbreadreq_fu_94_p3");
    sc_trace(mVcdFile, ap_predicate_op25_read_state1, "ap_predicate_op25_read_state1");
    sc_trace(mVcdFile, ap_predicate_op27_read_state1, "ap_predicate_op27_read_state1");
    sc_trace(mVcdFile, ap_block_state1_pp0_stage0_iter0, "ap_block_state1_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter1, "ap_block_state2_pp0_stage0_iter1");
    sc_trace(mVcdFile, dataOut_V_data_V_1_ack_in, "dataOut_V_data_V_1_ack_in");
    sc_trace(mVcdFile, pkt_state_load_reg_235, "pkt_state_load_reg_235");
    sc_trace(mVcdFile, tmp_2_reg_239, "tmp_2_reg_239");
    sc_trace(mVcdFile, ap_predicate_op33_write_state2, "ap_predicate_op33_write_state2");
    sc_trace(mVcdFile, tmp_1_reg_253, "tmp_1_reg_253");
    sc_trace(mVcdFile, ap_predicate_op39_write_state2, "ap_predicate_op39_write_state2");
    sc_trace(mVcdFile, tmp_reg_282, "tmp_reg_282");
    sc_trace(mVcdFile, tmp_3_reg_286, "tmp_3_reg_286");
    sc_trace(mVcdFile, ap_predicate_op41_write_state2, "ap_predicate_op41_write_state2");
    sc_trace(mVcdFile, ap_block_state2_io, "ap_block_state2_io");
    sc_trace(mVcdFile, ap_CS_iter1_fsm_state2, "ap_CS_iter1_fsm_state2");
    sc_trace(mVcdFile, dataOut_V_keep_V_1_ack_in, "dataOut_V_keep_V_1_ack_in");
    sc_trace(mVcdFile, dataOut_V_last_V_1_ack_in, "dataOut_V_last_V_1_ack_in");
    sc_trace(mVcdFile, dataOut_V_user_V_1_ack_in, "dataOut_V_user_V_1_ack_in");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter2, "ap_block_state3_pp0_stage0_iter2");
    sc_trace(mVcdFile, pkt_state_load_reg_235_pp0_iter1_reg, "pkt_state_load_reg_235_pp0_iter1_reg");
    sc_trace(mVcdFile, tmp_2_reg_239_pp0_iter1_reg, "tmp_2_reg_239_pp0_iter1_reg");
    sc_trace(mVcdFile, ap_predicate_op46_write_state3, "ap_predicate_op46_write_state3");
    sc_trace(mVcdFile, tmp_1_reg_253_pp0_iter1_reg, "tmp_1_reg_253_pp0_iter1_reg");
    sc_trace(mVcdFile, ap_predicate_op50_write_state3, "ap_predicate_op50_write_state3");
    sc_trace(mVcdFile, tmp_reg_282_pp0_iter1_reg, "tmp_reg_282_pp0_iter1_reg");
    sc_trace(mVcdFile, tmp_3_reg_286_pp0_iter1_reg, "tmp_3_reg_286_pp0_iter1_reg");
    sc_trace(mVcdFile, ap_predicate_op53_write_state3, "ap_predicate_op53_write_state3");
    sc_trace(mVcdFile, ap_block_state3_io, "ap_block_state3_io");
    sc_trace(mVcdFile, ap_CS_iter2_fsm_state3, "ap_CS_iter2_fsm_state3");
    sc_trace(mVcdFile, dataOut_V_data_V_1_data_in, "dataOut_V_data_V_1_data_in");
    sc_trace(mVcdFile, dataOut_V_data_V_1_data_out, "dataOut_V_data_V_1_data_out");
    sc_trace(mVcdFile, dataOut_V_data_V_1_vld_in, "dataOut_V_data_V_1_vld_in");
    sc_trace(mVcdFile, dataOut_V_data_V_1_vld_out, "dataOut_V_data_V_1_vld_out");
    sc_trace(mVcdFile, dataOut_V_data_V_1_ack_out, "dataOut_V_data_V_1_ack_out");
    sc_trace(mVcdFile, dataOut_V_data_V_1_payload_A, "dataOut_V_data_V_1_payload_A");
    sc_trace(mVcdFile, dataOut_V_data_V_1_payload_B, "dataOut_V_data_V_1_payload_B");
    sc_trace(mVcdFile, dataOut_V_data_V_1_sel_rd, "dataOut_V_data_V_1_sel_rd");
    sc_trace(mVcdFile, dataOut_V_data_V_1_sel_wr, "dataOut_V_data_V_1_sel_wr");
    sc_trace(mVcdFile, dataOut_V_data_V_1_sel, "dataOut_V_data_V_1_sel");
    sc_trace(mVcdFile, dataOut_V_data_V_1_load_A, "dataOut_V_data_V_1_load_A");
    sc_trace(mVcdFile, dataOut_V_data_V_1_load_B, "dataOut_V_data_V_1_load_B");
    sc_trace(mVcdFile, dataOut_V_data_V_1_state, "dataOut_V_data_V_1_state");
    sc_trace(mVcdFile, dataOut_V_data_V_1_state_cmp_full, "dataOut_V_data_V_1_state_cmp_full");
    sc_trace(mVcdFile, dataOut_V_keep_V_1_data_out, "dataOut_V_keep_V_1_data_out");
    sc_trace(mVcdFile, dataOut_V_keep_V_1_vld_in, "dataOut_V_keep_V_1_vld_in");
    sc_trace(mVcdFile, dataOut_V_keep_V_1_vld_out, "dataOut_V_keep_V_1_vld_out");
    sc_trace(mVcdFile, dataOut_V_keep_V_1_ack_out, "dataOut_V_keep_V_1_ack_out");
    sc_trace(mVcdFile, dataOut_V_keep_V_1_payload_A, "dataOut_V_keep_V_1_payload_A");
    sc_trace(mVcdFile, dataOut_V_keep_V_1_payload_B, "dataOut_V_keep_V_1_payload_B");
    sc_trace(mVcdFile, dataOut_V_keep_V_1_sel_rd, "dataOut_V_keep_V_1_sel_rd");
    sc_trace(mVcdFile, dataOut_V_keep_V_1_sel_wr, "dataOut_V_keep_V_1_sel_wr");
    sc_trace(mVcdFile, dataOut_V_keep_V_1_sel, "dataOut_V_keep_V_1_sel");
    sc_trace(mVcdFile, dataOut_V_keep_V_1_load_A, "dataOut_V_keep_V_1_load_A");
    sc_trace(mVcdFile, dataOut_V_keep_V_1_load_B, "dataOut_V_keep_V_1_load_B");
    sc_trace(mVcdFile, dataOut_V_keep_V_1_state, "dataOut_V_keep_V_1_state");
    sc_trace(mVcdFile, dataOut_V_keep_V_1_state_cmp_full, "dataOut_V_keep_V_1_state_cmp_full");
    sc_trace(mVcdFile, dataOut_V_last_V_1_data_in, "dataOut_V_last_V_1_data_in");
    sc_trace(mVcdFile, dataOut_V_last_V_1_data_out, "dataOut_V_last_V_1_data_out");
    sc_trace(mVcdFile, dataOut_V_last_V_1_vld_in, "dataOut_V_last_V_1_vld_in");
    sc_trace(mVcdFile, dataOut_V_last_V_1_vld_out, "dataOut_V_last_V_1_vld_out");
    sc_trace(mVcdFile, dataOut_V_last_V_1_ack_out, "dataOut_V_last_V_1_ack_out");
    sc_trace(mVcdFile, dataOut_V_last_V_1_payload_A, "dataOut_V_last_V_1_payload_A");
    sc_trace(mVcdFile, dataOut_V_last_V_1_payload_B, "dataOut_V_last_V_1_payload_B");
    sc_trace(mVcdFile, dataOut_V_last_V_1_sel_rd, "dataOut_V_last_V_1_sel_rd");
    sc_trace(mVcdFile, dataOut_V_last_V_1_sel_wr, "dataOut_V_last_V_1_sel_wr");
    sc_trace(mVcdFile, dataOut_V_last_V_1_sel, "dataOut_V_last_V_1_sel");
    sc_trace(mVcdFile, dataOut_V_last_V_1_load_A, "dataOut_V_last_V_1_load_A");
    sc_trace(mVcdFile, dataOut_V_last_V_1_load_B, "dataOut_V_last_V_1_load_B");
    sc_trace(mVcdFile, dataOut_V_last_V_1_state, "dataOut_V_last_V_1_state");
    sc_trace(mVcdFile, dataOut_V_last_V_1_state_cmp_full, "dataOut_V_last_V_1_state_cmp_full");
    sc_trace(mVcdFile, dataOut_V_user_V_1_data_out, "dataOut_V_user_V_1_data_out");
    sc_trace(mVcdFile, dataOut_V_user_V_1_vld_in, "dataOut_V_user_V_1_vld_in");
    sc_trace(mVcdFile, dataOut_V_user_V_1_vld_out, "dataOut_V_user_V_1_vld_out");
    sc_trace(mVcdFile, dataOut_V_user_V_1_ack_out, "dataOut_V_user_V_1_ack_out");
    sc_trace(mVcdFile, dataOut_V_user_V_1_sel_rd, "dataOut_V_user_V_1_sel_rd");
    sc_trace(mVcdFile, dataOut_V_user_V_1_sel, "dataOut_V_user_V_1_sel");
    sc_trace(mVcdFile, dataOut_V_user_V_1_state, "dataOut_V_user_V_1_state");
    sc_trace(mVcdFile, pkt_state, "pkt_state");
    sc_trace(mVcdFile, dataLen_V_1, "dataLen_V_1");
    sc_trace(mVcdFile, dataOut_TDATA_blk_n, "dataOut_TDATA_blk_n");
    sc_trace(mVcdFile, dataFifo_V_blk_n, "dataFifo_V_blk_n");
    sc_trace(mVcdFile, dataLenFifo_V_V_blk_n, "dataLenFifo_V_V_blk_n");
    sc_trace(mVcdFile, reg_143, "reg_143");
    sc_trace(mVcdFile, sendWord_data_V_1_fu_156_p1, "sendWord_data_V_1_fu_156_p1");
    sc_trace(mVcdFile, sendWord_data_V_1_reg_243, "sendWord_data_V_1_reg_243");
    sc_trace(mVcdFile, grp_fu_135_p3, "grp_fu_135_p3");
    sc_trace(mVcdFile, sendWord_last_V_2_reg_248, "sendWord_last_V_2_reg_248");
    sc_trace(mVcdFile, sendWord_last_V_1_reg_257, "sendWord_last_V_1_reg_257");
    sc_trace(mVcdFile, tmp_6_fu_166_p1, "tmp_6_fu_166_p1");
    sc_trace(mVcdFile, tmp_6_reg_262, "tmp_6_reg_262");
    sc_trace(mVcdFile, tmp_6_i_fu_170_p2, "tmp_6_i_fu_170_p2");
    sc_trace(mVcdFile, tmp_6_i_reg_267, "tmp_6_i_reg_267");
    sc_trace(mVcdFile, tmp_7_fu_176_p1, "tmp_7_fu_176_p1");
    sc_trace(mVcdFile, tmp_7_reg_272, "tmp_7_reg_272");
    sc_trace(mVcdFile, p_Result_6_i_reg_277, "p_Result_6_i_reg_277");
    sc_trace(mVcdFile, sendWord_data_V_fu_202_p1, "sendWord_data_V_fu_202_p1");
    sc_trace(mVcdFile, sendWord_data_V_reg_290, "sendWord_data_V_reg_290");
    sc_trace(mVcdFile, sendWord_last_V_reg_295, "sendWord_last_V_reg_295");
    sc_trace(mVcdFile, p_Result_s_fu_226_p4, "p_Result_s_fu_226_p4");
    sc_trace(mVcdFile, tmp_4_i_fu_212_p3, "tmp_4_i_fu_212_p3");
    sc_trace(mVcdFile, tmp_4_fu_219_p3, "tmp_4_fu_219_p3");
    sc_trace(mVcdFile, ap_NS_iter0_fsm, "ap_NS_iter0_fsm");
    sc_trace(mVcdFile, ap_NS_iter1_fsm, "ap_NS_iter1_fsm");
    sc_trace(mVcdFile, ap_NS_iter2_fsm, "ap_NS_iter2_fsm");
    sc_trace(mVcdFile, ap_condition_521, "ap_condition_521");
    sc_trace(mVcdFile, ap_condition_620, "ap_condition_620");
#endif

    }
}

edit_len_field::~edit_len_field() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void edit_len_field::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_iter0_fsm = ap_ST_iter0_fsm_state1;
    } else {
        ap_CS_iter0_fsm = ap_NS_iter0_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_iter1_fsm = ap_ST_iter1_fsm_state0;
    } else {
        ap_CS_iter1_fsm = ap_NS_iter1_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_iter2_fsm = ap_ST_iter2_fsm_state0;
    } else {
        ap_CS_iter2_fsm = ap_NS_iter2_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
                    !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        dataOut_V_data_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, dataOut_V_data_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, dataOut_V_data_V_1_vld_out.read()))) {
            dataOut_V_data_V_1_sel_rd =  (sc_logic) (~dataOut_V_data_V_1_sel_rd.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        dataOut_V_data_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, dataOut_V_data_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, dataOut_V_data_V_1_ack_in.read()))) {
            dataOut_V_data_V_1_sel_wr =  (sc_logic) (~dataOut_V_data_V_1_sel_wr.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        dataOut_V_data_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_data_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, dataOut_V_data_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(dataOut_V_data_V_1_state.read(), ap_const_lv2_3)) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_data_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, dataOut_V_data_V_1_state.read())))) {
            dataOut_V_data_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, dataOut_V_data_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(dataOut_V_data_V_1_state.read(), ap_const_lv2_3)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, dataOut_V_data_V_1_state.read())))) {
            dataOut_V_data_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, dataOut_V_data_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, dataOut_V_data_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, dataOut_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, dataOut_V_data_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(dataOut_V_data_V_1_state.read(), ap_const_lv2_3) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, dataOut_V_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_data_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, dataOut_V_data_V_1_ack_out.read()))))) {
            dataOut_V_data_V_1_state = ap_const_lv2_3;
        } else {
            dataOut_V_data_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        dataOut_V_keep_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, dataOut_V_keep_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, dataOut_V_keep_V_1_vld_out.read()))) {
            dataOut_V_keep_V_1_sel_rd =  (sc_logic) (~dataOut_V_keep_V_1_sel_rd.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        dataOut_V_keep_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, dataOut_V_keep_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, dataOut_V_keep_V_1_ack_in.read()))) {
            dataOut_V_keep_V_1_sel_wr =  (sc_logic) (~dataOut_V_keep_V_1_sel_wr.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        dataOut_V_keep_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_keep_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, dataOut_V_keep_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, dataOut_V_keep_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_keep_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, dataOut_V_keep_V_1_state.read())))) {
            dataOut_V_keep_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, dataOut_V_keep_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, dataOut_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, dataOut_V_keep_V_1_state.read())))) {
            dataOut_V_keep_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, dataOut_V_keep_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, dataOut_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, dataOut_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, dataOut_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, dataOut_V_keep_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, dataOut_V_keep_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_keep_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_keep_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, dataOut_V_keep_V_1_ack_out.read()))))) {
            dataOut_V_keep_V_1_state = ap_const_lv2_3;
        } else {
            dataOut_V_keep_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        dataOut_V_last_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, dataOut_V_last_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, dataOut_V_last_V_1_vld_out.read()))) {
            dataOut_V_last_V_1_sel_rd =  (sc_logic) (~dataOut_V_last_V_1_sel_rd.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        dataOut_V_last_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, dataOut_V_last_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, dataOut_V_last_V_1_ack_in.read()))) {
            dataOut_V_last_V_1_sel_wr =  (sc_logic) (~dataOut_V_last_V_1_sel_wr.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        dataOut_V_last_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, dataOut_V_last_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, dataOut_V_last_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, dataOut_V_last_V_1_state.read())))) {
            dataOut_V_last_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, dataOut_V_last_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, dataOut_V_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, dataOut_V_last_V_1_state.read())))) {
            dataOut_V_last_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, dataOut_V_last_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, dataOut_V_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, dataOut_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, dataOut_V_last_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, dataOut_V_last_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, dataOut_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_last_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, dataOut_V_last_V_1_ack_out.read()))))) {
            dataOut_V_last_V_1_state = ap_const_lv2_3;
        } else {
            dataOut_V_last_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        dataOut_V_user_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, dataOut_V_user_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, dataOut_V_user_V_1_vld_out.read()))) {
            dataOut_V_user_V_1_sel_rd =  (sc_logic) (~dataOut_V_user_V_1_sel_rd.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        dataOut_V_user_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_user_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, dataOut_V_user_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, dataOut_V_user_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_user_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, dataOut_V_user_V_1_state.read())))) {
            dataOut_V_user_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, dataOut_V_user_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_user_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, dataOut_V_user_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_user_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, dataOut_V_user_V_1_state.read())))) {
            dataOut_V_user_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, dataOut_V_user_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, dataOut_V_user_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, dataOut_V_user_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, dataOut_V_user_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, dataOut_V_user_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, dataOut_V_user_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_user_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_user_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, dataOut_V_user_V_1_ack_out.read()))))) {
            dataOut_V_user_V_1_state = ap_const_lv2_3;
        } else {
            dataOut_V_user_V_1_state = ap_const_lv2_2;
        }
    }
    if (esl_seteq<1,1,1>(ap_condition_620.read(), ap_const_boolean_1)) {
        if ((esl_seteq<1,2,2>(pkt_state.read(), ap_const_lv2_0) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_nbreadreq_fu_94_p3.read()))) {
            pkt_state = ap_const_lv2_1;
        } else if (esl_seteq<1,2,2>(pkt_state.read(), ap_const_lv2_1)) {
            pkt_state = ap_const_lv2_2;
        } else if ((esl_seteq<1,2,2>(pkt_state.read(), ap_const_lv2_2) && 
                    esl_seteq<1,1,1>(ap_const_lv1_1, grp_fu_135_p3.read()))) {
            pkt_state = ap_const_lv2_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && esl_seteq<1,1,1>(grp_nbreadreq_fu_80_p3.read(), ap_const_lv1_1) && esl_seteq<1,2,2>(pkt_state.read(), ap_const_lv2_0) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_nbreadreq_fu_94_p3.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, dataFifo_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op8_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dataFifo_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op14_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dataLenFifo_V_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op25_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dataFifo_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op27_read_state1.read())) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read())) || ((esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_user_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()))))) {
        dataLen_V_1 = dataLenFifo_V_V_dout.read();
        sendWord_data_V_reg_290 = sendWord_data_V_fu_202_p1.read();
        sendWord_last_V_reg_295 = dataFifo_V_dout.read().range(72, 72);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, dataOut_V_data_V_1_load_A.read())) {
        dataOut_V_data_V_1_payload_A = dataOut_V_data_V_1_data_in.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, dataOut_V_data_V_1_load_B.read())) {
        dataOut_V_data_V_1_payload_B = dataOut_V_data_V_1_data_in.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, dataOut_V_keep_V_1_load_A.read())) {
        dataOut_V_keep_V_1_payload_A = reg_143.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, dataOut_V_keep_V_1_load_B.read())) {
        dataOut_V_keep_V_1_payload_B = reg_143.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, dataOut_V_last_V_1_load_A.read())) {
        dataOut_V_last_V_1_payload_A = dataOut_V_last_V_1_data_in.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, dataOut_V_last_V_1_load_B.read())) {
        dataOut_V_last_V_1_payload_B = dataOut_V_last_V_1_data_in.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && esl_seteq<1,1,1>(grp_nbreadreq_fu_80_p3.read(), ap_const_lv1_1) && esl_seteq<1,2,2>(pkt_state.read(), ap_const_lv2_1) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, dataFifo_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op8_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dataFifo_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op14_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dataLenFifo_V_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op25_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dataFifo_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op27_read_state1.read())) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read())) || ((esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_user_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()))))) {
        p_Result_6_i_reg_277 = dataFifo_V_dout.read().range(63, 48);
        sendWord_last_V_1_reg_257 = dataFifo_V_dout.read().range(72, 72);
        tmp_6_i_reg_267 = tmp_6_i_fu_170_p2.read();
        tmp_6_reg_262 = tmp_6_fu_166_p1.read();
        tmp_7_reg_272 = tmp_7_fu_176_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, dataFifo_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op8_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dataFifo_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op14_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dataLenFifo_V_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op25_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dataFifo_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op27_read_state1.read())) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read())) || ((esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_user_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()))))) {
        pkt_state_load_reg_235 = pkt_state.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || ((esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_user_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()))))) {
        pkt_state_load_reg_235_pp0_iter1_reg = pkt_state_load_reg_235.read();
        tmp_1_reg_253_pp0_iter1_reg = tmp_1_reg_253.read();
        tmp_2_reg_239_pp0_iter1_reg = tmp_2_reg_239.read();
        tmp_3_reg_286_pp0_iter1_reg = tmp_3_reg_286.read();
        tmp_reg_282_pp0_iter1_reg = tmp_reg_282.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
  esl_seteq<1,2,2>(pkt_state.read(), ap_const_lv2_2) && 
  esl_seteq<1,1,1>(grp_nbreadreq_fu_80_p3.read(), ap_const_lv1_1) && 
  !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, dataFifo_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op8_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dataFifo_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op14_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dataLenFifo_V_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op25_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dataFifo_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op27_read_state1.read())) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read())) || ((esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_user_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read())))) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
  esl_seteq<1,1,1>(grp_nbreadreq_fu_80_p3.read(), ap_const_lv1_1) && 
  esl_seteq<1,2,2>(pkt_state.read(), ap_const_lv2_1) && 
  !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, dataFifo_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op8_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dataFifo_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op14_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dataLenFifo_V_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op25_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dataFifo_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op27_read_state1.read())) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read())) || ((esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_user_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read())))) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
  esl_seteq<1,1,1>(grp_nbreadreq_fu_80_p3.read(), ap_const_lv1_1) && 
  esl_seteq<1,2,2>(pkt_state.read(), ap_const_lv2_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_nbreadreq_fu_94_p3.read()) && 
  !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, dataFifo_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op8_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dataFifo_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op14_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dataLenFifo_V_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op25_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dataFifo_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op27_read_state1.read())) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read())) || ((esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_user_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read())))))) {
        reg_143 = dataFifo_V_dout.read().range(71, 64);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && esl_seteq<1,2,2>(pkt_state.read(), ap_const_lv2_2) && esl_seteq<1,1,1>(grp_nbreadreq_fu_80_p3.read(), ap_const_lv1_1) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, dataFifo_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op8_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dataFifo_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op14_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dataLenFifo_V_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op25_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dataFifo_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op27_read_state1.read())) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read())) || ((esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_user_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()))))) {
        sendWord_data_V_1_reg_243 = sendWord_data_V_1_fu_156_p1.read();
        sendWord_last_V_2_reg_248 = dataFifo_V_dout.read().range(72, 72);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && esl_seteq<1,2,2>(pkt_state.read(), ap_const_lv2_1) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, dataFifo_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op8_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dataFifo_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op14_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dataLenFifo_V_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op25_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dataFifo_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op27_read_state1.read())) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read())) || ((esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_user_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()))))) {
        tmp_1_reg_253 =  (sc_lv<1>) (dataFifo_V_empty_n.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && esl_seteq<1,2,2>(pkt_state.read(), ap_const_lv2_2) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, dataFifo_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op8_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dataFifo_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op14_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dataLenFifo_V_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op25_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dataFifo_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op27_read_state1.read())) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read())) || ((esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_user_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()))))) {
        tmp_2_reg_239 =  (sc_lv<1>) (dataFifo_V_empty_n.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && esl_seteq<1,1,1>(grp_nbreadreq_fu_80_p3.read(), ap_const_lv1_1) && esl_seteq<1,2,2>(pkt_state.read(), ap_const_lv2_0) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, dataFifo_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op8_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dataFifo_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op14_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dataLenFifo_V_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op25_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dataFifo_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op27_read_state1.read())) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read())) || ((esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_user_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()))))) {
        tmp_3_reg_286 =  (sc_lv<1>) (dataLenFifo_V_V_empty_n.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && esl_seteq<1,2,2>(pkt_state.read(), ap_const_lv2_0) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, dataFifo_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op8_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dataFifo_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op14_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dataLenFifo_V_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op25_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dataFifo_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op27_read_state1.read())) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read())) || ((esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_user_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()))))) {
        tmp_reg_282 =  (sc_lv<1>) (dataFifo_V_empty_n.read());
    }
}

void edit_len_field::thread_ap_CS_iter0_fsm_state1() {
    ap_CS_iter0_fsm_state1 = ap_CS_iter0_fsm.read()[0];
}

void edit_len_field::thread_ap_CS_iter1_fsm_state0() {
    ap_CS_iter1_fsm_state0 = ap_CS_iter1_fsm.read()[0];
}

void edit_len_field::thread_ap_CS_iter1_fsm_state2() {
    ap_CS_iter1_fsm_state2 = ap_CS_iter1_fsm.read()[1];
}

void edit_len_field::thread_ap_CS_iter2_fsm_state0() {
    ap_CS_iter2_fsm_state0 = ap_CS_iter2_fsm.read()[0];
}

void edit_len_field::thread_ap_CS_iter2_fsm_state3() {
    ap_CS_iter2_fsm_state3 = ap_CS_iter2_fsm.read()[1];
}

void edit_len_field::thread_ap_block_state1_pp0_stage0_iter0() {
    ap_block_state1_pp0_stage0_iter0 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, dataFifo_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op8_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dataFifo_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op14_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dataLenFifo_V_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op25_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dataFifo_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op27_read_state1.read())) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void edit_len_field::thread_ap_block_state2_io() {
    ap_block_state2_io = ((esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_data_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op33_write_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_data_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op39_write_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_data_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op41_write_state2.read())));
}

void edit_len_field::thread_ap_block_state2_pp0_stage0_iter1() {
    ap_block_state2_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void edit_len_field::thread_ap_block_state3_io() {
    ap_block_state3_io = ((esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_data_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op46_write_state3.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_data_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op50_write_state3.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_data_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op53_write_state3.read())));
}

void edit_len_field::thread_ap_block_state3_pp0_stage0_iter2() {
    ap_block_state3_pp0_stage0_iter2 = (esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_user_V_1_ack_in.read()));
}

void edit_len_field::thread_ap_condition_521() {
    ap_condition_521 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || ((esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_user_V_1_ack_in.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()))));
}

void edit_len_field::thread_ap_condition_620() {
    ap_condition_620 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && esl_seteq<1,1,1>(grp_nbreadreq_fu_80_p3.read(), ap_const_lv1_1) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, dataFifo_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op8_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dataFifo_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op14_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dataLenFifo_V_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op25_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dataFifo_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op27_read_state1.read())) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read())) || ((esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_user_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()))));
}

void edit_len_field::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
         !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void edit_len_field::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void edit_len_field::thread_ap_predicate_op14_read_state1() {
    ap_predicate_op14_read_state1 = (esl_seteq<1,1,1>(grp_nbreadreq_fu_80_p3.read(), ap_const_lv1_1) && esl_seteq<1,2,2>(pkt_state.read(), ap_const_lv2_1));
}

void edit_len_field::thread_ap_predicate_op25_read_state1() {
    ap_predicate_op25_read_state1 = (esl_seteq<1,1,1>(grp_nbreadreq_fu_80_p3.read(), ap_const_lv1_1) && esl_seteq<1,2,2>(pkt_state.read(), ap_const_lv2_0) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_nbreadreq_fu_94_p3.read()));
}

void edit_len_field::thread_ap_predicate_op27_read_state1() {
    ap_predicate_op27_read_state1 = (esl_seteq<1,1,1>(grp_nbreadreq_fu_80_p3.read(), ap_const_lv1_1) && esl_seteq<1,2,2>(pkt_state.read(), ap_const_lv2_0) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_nbreadreq_fu_94_p3.read()));
}

void edit_len_field::thread_ap_predicate_op33_write_state2() {
    ap_predicate_op33_write_state2 = (esl_seteq<1,2,2>(ap_const_lv2_2, pkt_state_load_reg_235.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_reg_239.read()));
}

void edit_len_field::thread_ap_predicate_op39_write_state2() {
    ap_predicate_op39_write_state2 = (esl_seteq<1,2,2>(ap_const_lv2_1, pkt_state_load_reg_235.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_reg_253.read()));
}

void edit_len_field::thread_ap_predicate_op41_write_state2() {
    ap_predicate_op41_write_state2 = (esl_seteq<1,2,2>(ap_const_lv2_0, pkt_state_load_reg_235.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_282.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_reg_286.read()));
}

void edit_len_field::thread_ap_predicate_op46_write_state3() {
    ap_predicate_op46_write_state3 = (esl_seteq<1,2,2>(ap_const_lv2_2, pkt_state_load_reg_235_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_reg_239_pp0_iter1_reg.read()));
}

void edit_len_field::thread_ap_predicate_op50_write_state3() {
    ap_predicate_op50_write_state3 = (esl_seteq<1,2,2>(ap_const_lv2_1, pkt_state_load_reg_235_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_reg_253_pp0_iter1_reg.read()));
}

void edit_len_field::thread_ap_predicate_op53_write_state3() {
    ap_predicate_op53_write_state3 = (esl_seteq<1,2,2>(ap_const_lv2_0, pkt_state_load_reg_235_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_282_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_reg_286_pp0_iter1_reg.read()));
}

void edit_len_field::thread_ap_predicate_op8_read_state1() {
    ap_predicate_op8_read_state1 = (esl_seteq<1,2,2>(pkt_state.read(), ap_const_lv2_2) && esl_seteq<1,1,1>(grp_nbreadreq_fu_80_p3.read(), ap_const_lv1_1));
}

void edit_len_field::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, dataFifo_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op8_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dataFifo_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op14_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dataLenFifo_V_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op25_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dataFifo_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op27_read_state1.read())) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read())) || ((esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_user_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()))))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void edit_len_field::thread_dataFifo_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op27_read_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op14_read_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op8_read_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read())))) {
        dataFifo_V_blk_n = dataFifo_V_empty_n.read();
    } else {
        dataFifo_V_blk_n = ap_const_logic_1;
    }
}

void edit_len_field::thread_dataFifo_V_read() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op8_read_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, dataFifo_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op8_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dataFifo_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op14_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dataLenFifo_V_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op25_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dataFifo_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op27_read_state1.read())) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read())) || ((esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_user_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read())))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op14_read_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, dataFifo_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op8_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dataFifo_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op14_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dataLenFifo_V_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op25_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dataFifo_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op27_read_state1.read())) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read())) || ((esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_user_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read())))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op27_read_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, dataFifo_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op8_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dataFifo_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op14_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dataLenFifo_V_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op25_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dataFifo_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op27_read_state1.read())) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read())) || ((esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_user_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read())))))) {
        dataFifo_V_read = ap_const_logic_1;
    } else {
        dataFifo_V_read = ap_const_logic_0;
    }
}

void edit_len_field::thread_dataLenFifo_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op25_read_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()))) {
        dataLenFifo_V_V_blk_n = dataLenFifo_V_V_empty_n.read();
    } else {
        dataLenFifo_V_V_blk_n = ap_const_logic_1;
    }
}

void edit_len_field::thread_dataLenFifo_V_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op25_read_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, dataFifo_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op8_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dataFifo_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op14_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dataLenFifo_V_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op25_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dataFifo_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op27_read_state1.read())) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read())) || ((esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_user_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()))))) {
        dataLenFifo_V_V_read = ap_const_logic_1;
    } else {
        dataLenFifo_V_V_read = ap_const_logic_0;
    }
}

void edit_len_field::thread_dataOut_TDATA() {
    dataOut_TDATA = dataOut_V_data_V_1_data_out.read();
}

void edit_len_field::thread_dataOut_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op41_write_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read())) || 
         (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op53_write_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read())) || 
         (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op39_write_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read())) || 
         (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op50_write_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read())) || 
         (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op33_write_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read())) || 
         (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op46_write_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read())))) {
        dataOut_TDATA_blk_n = dataOut_V_data_V_1_state.read()[1];
    } else {
        dataOut_TDATA_blk_n = ap_const_logic_1;
    }
}

void edit_len_field::thread_dataOut_TKEEP() {
    dataOut_TKEEP = dataOut_V_keep_V_1_data_out.read();
}

void edit_len_field::thread_dataOut_TLAST() {
    dataOut_TLAST = dataOut_V_last_V_1_data_out.read();
}

void edit_len_field::thread_dataOut_TUSER() {
    dataOut_TUSER = dataOut_V_user_V_1_data_out.read();
}

void edit_len_field::thread_dataOut_TVALID() {
    dataOut_TVALID = dataOut_V_user_V_1_state.read()[0];
}

void edit_len_field::thread_dataOut_V_data_V_1_ack_in() {
    dataOut_V_data_V_1_ack_in = dataOut_V_data_V_1_state.read()[1];
}

void edit_len_field::thread_dataOut_V_data_V_1_ack_out() {
    dataOut_V_data_V_1_ack_out = dataOut_TREADY.read();
}

void edit_len_field::thread_dataOut_V_data_V_1_data_in() {
    if (esl_seteq<1,1,1>(ap_condition_521.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op41_write_state2.read())) {
            dataOut_V_data_V_1_data_in = sendWord_data_V_reg_290.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op39_write_state2.read())) {
            dataOut_V_data_V_1_data_in = p_Result_s_fu_226_p4.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op33_write_state2.read())) {
            dataOut_V_data_V_1_data_in = sendWord_data_V_1_reg_243.read();
        } else {
            dataOut_V_data_V_1_data_in = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        dataOut_V_data_V_1_data_in = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void edit_len_field::thread_dataOut_V_data_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, dataOut_V_data_V_1_sel.read())) {
        dataOut_V_data_V_1_data_out = dataOut_V_data_V_1_payload_B.read();
    } else {
        dataOut_V_data_V_1_data_out = dataOut_V_data_V_1_payload_A.read();
    }
}

void edit_len_field::thread_dataOut_V_data_V_1_load_A() {
    dataOut_V_data_V_1_load_A = (dataOut_V_data_V_1_state_cmp_full.read() & ~dataOut_V_data_V_1_sel_wr.read());
}

void edit_len_field::thread_dataOut_V_data_V_1_load_B() {
    dataOut_V_data_V_1_load_B = (dataOut_V_data_V_1_sel_wr.read() & dataOut_V_data_V_1_state_cmp_full.read());
}

void edit_len_field::thread_dataOut_V_data_V_1_sel() {
    dataOut_V_data_V_1_sel = dataOut_V_data_V_1_sel_rd.read();
}

void edit_len_field::thread_dataOut_V_data_V_1_state_cmp_full() {
    dataOut_V_data_V_1_state_cmp_full =  (sc_logic) ((!dataOut_V_data_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(dataOut_V_data_V_1_state.read() != ap_const_lv2_1))[0];
}

void edit_len_field::thread_dataOut_V_data_V_1_vld_in() {
    if (((esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op33_write_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
          !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || ((esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_user_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read())))) || 
         (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op39_write_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
          !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || ((esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_user_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read())))) || 
         (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op41_write_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
          !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || ((esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_user_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read())))))) {
        dataOut_V_data_V_1_vld_in = ap_const_logic_1;
    } else {
        dataOut_V_data_V_1_vld_in = ap_const_logic_0;
    }
}

void edit_len_field::thread_dataOut_V_data_V_1_vld_out() {
    dataOut_V_data_V_1_vld_out = dataOut_V_data_V_1_state.read()[0];
}

void edit_len_field::thread_dataOut_V_keep_V_1_ack_in() {
    dataOut_V_keep_V_1_ack_in = dataOut_V_keep_V_1_state.read()[1];
}

void edit_len_field::thread_dataOut_V_keep_V_1_ack_out() {
    dataOut_V_keep_V_1_ack_out = dataOut_TREADY.read();
}

void edit_len_field::thread_dataOut_V_keep_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, dataOut_V_keep_V_1_sel.read())) {
        dataOut_V_keep_V_1_data_out = dataOut_V_keep_V_1_payload_B.read();
    } else {
        dataOut_V_keep_V_1_data_out = dataOut_V_keep_V_1_payload_A.read();
    }
}

void edit_len_field::thread_dataOut_V_keep_V_1_load_A() {
    dataOut_V_keep_V_1_load_A = (dataOut_V_keep_V_1_state_cmp_full.read() & ~dataOut_V_keep_V_1_sel_wr.read());
}

void edit_len_field::thread_dataOut_V_keep_V_1_load_B() {
    dataOut_V_keep_V_1_load_B = (dataOut_V_keep_V_1_sel_wr.read() & dataOut_V_keep_V_1_state_cmp_full.read());
}

void edit_len_field::thread_dataOut_V_keep_V_1_sel() {
    dataOut_V_keep_V_1_sel = dataOut_V_keep_V_1_sel_rd.read();
}

void edit_len_field::thread_dataOut_V_keep_V_1_state_cmp_full() {
    dataOut_V_keep_V_1_state_cmp_full =  (sc_logic) ((!dataOut_V_keep_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(dataOut_V_keep_V_1_state.read() != ap_const_lv2_1))[0];
}

void edit_len_field::thread_dataOut_V_keep_V_1_vld_in() {
    if (((esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op33_write_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
          !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || ((esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_user_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read())))) || 
         (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op39_write_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
          !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || ((esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_user_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read())))) || 
         (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op41_write_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
          !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || ((esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_user_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read())))))) {
        dataOut_V_keep_V_1_vld_in = ap_const_logic_1;
    } else {
        dataOut_V_keep_V_1_vld_in = ap_const_logic_0;
    }
}

void edit_len_field::thread_dataOut_V_keep_V_1_vld_out() {
    dataOut_V_keep_V_1_vld_out = dataOut_V_keep_V_1_state.read()[0];
}

void edit_len_field::thread_dataOut_V_last_V_1_ack_in() {
    dataOut_V_last_V_1_ack_in = dataOut_V_last_V_1_state.read()[1];
}

void edit_len_field::thread_dataOut_V_last_V_1_ack_out() {
    dataOut_V_last_V_1_ack_out = dataOut_TREADY.read();
}

void edit_len_field::thread_dataOut_V_last_V_1_data_in() {
    if (esl_seteq<1,1,1>(ap_condition_521.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op41_write_state2.read())) {
            dataOut_V_last_V_1_data_in = sendWord_last_V_reg_295.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op39_write_state2.read())) {
            dataOut_V_last_V_1_data_in = sendWord_last_V_1_reg_257.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op33_write_state2.read())) {
            dataOut_V_last_V_1_data_in = sendWord_last_V_2_reg_248.read();
        } else {
            dataOut_V_last_V_1_data_in =  (sc_lv<1>) ("X");
        }
    } else {
        dataOut_V_last_V_1_data_in =  (sc_lv<1>) ("X");
    }
}

void edit_len_field::thread_dataOut_V_last_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, dataOut_V_last_V_1_sel.read())) {
        dataOut_V_last_V_1_data_out = dataOut_V_last_V_1_payload_B.read();
    } else {
        dataOut_V_last_V_1_data_out = dataOut_V_last_V_1_payload_A.read();
    }
}

void edit_len_field::thread_dataOut_V_last_V_1_load_A() {
    dataOut_V_last_V_1_load_A = (dataOut_V_last_V_1_state_cmp_full.read() & ~dataOut_V_last_V_1_sel_wr.read());
}

void edit_len_field::thread_dataOut_V_last_V_1_load_B() {
    dataOut_V_last_V_1_load_B = (dataOut_V_last_V_1_sel_wr.read() & dataOut_V_last_V_1_state_cmp_full.read());
}

void edit_len_field::thread_dataOut_V_last_V_1_sel() {
    dataOut_V_last_V_1_sel = dataOut_V_last_V_1_sel_rd.read();
}

void edit_len_field::thread_dataOut_V_last_V_1_state_cmp_full() {
    dataOut_V_last_V_1_state_cmp_full =  (sc_logic) ((!dataOut_V_last_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(dataOut_V_last_V_1_state.read() != ap_const_lv2_1))[0];
}

void edit_len_field::thread_dataOut_V_last_V_1_vld_in() {
    if (((esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op33_write_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
          !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || ((esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_user_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read())))) || 
         (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op39_write_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
          !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || ((esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_user_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read())))) || 
         (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op41_write_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
          !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || ((esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_user_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read())))))) {
        dataOut_V_last_V_1_vld_in = ap_const_logic_1;
    } else {
        dataOut_V_last_V_1_vld_in = ap_const_logic_0;
    }
}

void edit_len_field::thread_dataOut_V_last_V_1_vld_out() {
    dataOut_V_last_V_1_vld_out = dataOut_V_last_V_1_state.read()[0];
}

void edit_len_field::thread_dataOut_V_user_V_1_ack_in() {
    dataOut_V_user_V_1_ack_in = dataOut_V_user_V_1_state.read()[1];
}

void edit_len_field::thread_dataOut_V_user_V_1_ack_out() {
    dataOut_V_user_V_1_ack_out = dataOut_TREADY.read();
}

void edit_len_field::thread_dataOut_V_user_V_1_data_out() {
    dataOut_V_user_V_1_data_out = ap_const_lv112_0;
}

void edit_len_field::thread_dataOut_V_user_V_1_sel() {
    dataOut_V_user_V_1_sel = dataOut_V_user_V_1_sel_rd.read();
}

void edit_len_field::thread_dataOut_V_user_V_1_vld_in() {
    if (((esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op33_write_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
          !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || ((esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_user_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read())))) || 
         (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op39_write_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
          !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || ((esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_user_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read())))) || 
         (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op41_write_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
          !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || ((esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_user_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read())))))) {
        dataOut_V_user_V_1_vld_in = ap_const_logic_1;
    } else {
        dataOut_V_user_V_1_vld_in = ap_const_logic_0;
    }
}

void edit_len_field::thread_dataOut_V_user_V_1_vld_out() {
    dataOut_V_user_V_1_vld_out = dataOut_V_user_V_1_state.read()[0];
}

void edit_len_field::thread_grp_fu_135_p3() {
    grp_fu_135_p3 = dataFifo_V_dout.read().range(72, 72);
}

void edit_len_field::thread_grp_nbreadreq_fu_80_p3() {
    grp_nbreadreq_fu_80_p3 =  (sc_lv<1>) (dataFifo_V_empty_n.read());
}

void edit_len_field::thread_p_Result_s_fu_226_p4() {
    p_Result_s_fu_226_p4 = esl_concat<32,32>(esl_concat<16,16>(p_Result_6_i_reg_277.read(), tmp_4_fu_219_p3.read()), tmp_6_reg_262.read());
}

void edit_len_field::thread_sendWord_data_V_1_fu_156_p1() {
    sendWord_data_V_1_fu_156_p1 = dataFifo_V_dout.read().range(64-1, 0);
}

void edit_len_field::thread_sendWord_data_V_fu_202_p1() {
    sendWord_data_V_fu_202_p1 = dataFifo_V_dout.read().range(64-1, 0);
}

void edit_len_field::thread_tmp_3_nbreadreq_fu_94_p3() {
    tmp_3_nbreadreq_fu_94_p3 =  (sc_lv<1>) (dataLenFifo_V_V_empty_n.read());
}

void edit_len_field::thread_tmp_4_fu_219_p3() {
    tmp_4_fu_219_p3 = (!tmp_6_i_reg_267.read()[0].is_01())? sc_lv<16>(): ((tmp_6_i_reg_267.read()[0].to_bool())? ap_const_lv16_8: tmp_4_i_fu_212_p3.read());
}

void edit_len_field::thread_tmp_4_i_fu_212_p3() {
    tmp_4_i_fu_212_p3 = esl_concat<8,8>(tmp_7_reg_272.read(), ap_const_lv8_8);
}

void edit_len_field::thread_tmp_6_fu_166_p1() {
    tmp_6_fu_166_p1 = dataFifo_V_dout.read().range(32-1, 0);
}

void edit_len_field::thread_tmp_6_i_fu_170_p2() {
    tmp_6_i_fu_170_p2 = (!dataLen_V_1.read().is_01() || !ap_const_lv16_0.is_01())? sc_lv<1>(): sc_lv<1>(dataLen_V_1.read() == ap_const_lv16_0);
}

void edit_len_field::thread_tmp_7_fu_176_p1() {
    tmp_7_fu_176_p1 = dataLen_V_1.read().range(8-1, 0);
}

void edit_len_field::thread_ap_NS_iter0_fsm() {
    switch (ap_CS_iter0_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_iter0_fsm = ap_ST_iter0_fsm_state1;
break;
        default : 
            ap_NS_iter0_fsm =  (sc_lv<1>) ("X");
            break;
    }
}

void edit_len_field::thread_ap_NS_iter1_fsm() {
    switch (ap_CS_iter1_fsm.read().to_uint64()) {
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || ((esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_user_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()))) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, dataFifo_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op8_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dataFifo_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op14_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dataLenFifo_V_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op25_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dataFifo_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op27_read_state1.read())) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            } else if ((!(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || ((esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_user_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()))) && (esl_seteq<1,1,1>(ap_CS_iter0_fsm_state1.read(), ap_const_logic_0) || 
  (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
   (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || 
    (esl_seteq<1,1,1>(ap_const_logic_0, dataFifo_V_empty_n.read()) && 
     esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op8_read_state1.read())) || 
    (esl_seteq<1,1,1>(ap_const_logic_0, dataFifo_V_empty_n.read()) && 
     esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op14_read_state1.read())) || 
    (esl_seteq<1,1,1>(ap_const_logic_0, dataLenFifo_V_V_empty_n.read()) && 
     esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op25_read_state1.read())) || 
    (esl_seteq<1,1,1>(ap_const_logic_0, dataFifo_V_empty_n.read()) && 
     esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op27_read_state1.read())) || 
    esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))))) {
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state0;
            } else {
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            }
            break;
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, dataFifo_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op8_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dataFifo_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op14_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dataLenFifo_V_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op25_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dataFifo_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op27_read_state1.read())) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read())) || ((esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_user_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()))))) {
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            } else {
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state0;
            }
            break;
        default : 
            ap_NS_iter1_fsm =  (sc_lv<2>) ("XX");
            break;
    }
}

void edit_len_field::thread_ap_NS_iter2_fsm() {
    switch (ap_CS_iter2_fsm.read().to_uint64()) {
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) && esl_seteq<1,1,1>(ap_block_state2_io.read(), ap_const_boolean_0))) {
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state3;
            } else if ((!(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) && ((esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read())) || 
  esl_seteq<1,1,1>(ap_CS_iter1_fsm_state2.read(), ap_const_logic_0)))) {
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state0;
            } else {
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state3;
            }
            break;
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || ((esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, dataOut_V_user_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()))))) {
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state3;
            } else {
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state0;
            }
            break;
        default : 
            ap_NS_iter2_fsm =  (sc_lv<2>) ("XX");
            break;
    }
}

}


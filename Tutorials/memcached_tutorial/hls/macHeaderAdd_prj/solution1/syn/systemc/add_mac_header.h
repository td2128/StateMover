// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _add_mac_header_HH_
#define _add_mac_header_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct add_mac_header : public sc_module {
    // Port declarations 22
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<185> > dataFifo_V_din;
    sc_in< sc_logic > dataFifo_V_full_n;
    sc_out< sc_logic > dataFifo_V_write;
    sc_out< sc_lv<16> > dataLenFifo_V_V_din;
    sc_in< sc_logic > dataLenFifo_V_V_full_n;
    sc_out< sc_logic > dataLenFifo_V_V_write;
    sc_in< sc_logic > dataIn_TVALID;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_in< sc_lv<64> > dataIn_TDATA;
    sc_out< sc_logic > dataIn_TREADY;
    sc_in< sc_lv<8> > dataIn_TKEEP;
    sc_in< sc_lv<1> > dataIn_TLAST;
    sc_in< sc_lv<112> > dataIn_TUSER;


    // Module declarations
    add_mac_header(sc_module_name name);
    SC_HAS_PROCESS(add_mac_header);

    ~add_mac_header();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<2> > ap_CS_iter0_fsm;
    sc_signal< sc_logic > ap_CS_iter0_fsm_state1;
    sc_signal< sc_lv<2> > ap_CS_iter1_fsm;
    sc_signal< sc_logic > ap_CS_iter1_fsm_state0;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_logic > ap_CS_iter0_fsm_state2;
    sc_signal< sc_lv<1> > mw_writeLast_load_reg_1202;
    sc_signal< sc_lv<2> > mw_state_load_reg_1211;
    sc_signal< sc_lv<1> > tmp_7_reg_1255;
    sc_signal< bool > ap_predicate_op123_write_state2;
    sc_signal< sc_lv<1> > or_cond_i_reg_1311;
    sc_signal< bool > ap_predicate_op125_write_state2;
    sc_signal< sc_lv<1> > tmp_5_reg_1383;
    sc_signal< bool > ap_predicate_op128_read_state2;
    sc_signal< bool > ap_predicate_op142_write_state2;
    sc_signal< sc_lv<1> > mw_writeLast_load_reg_1202_pp0_iter0_reg;
    sc_signal< sc_lv<2> > mw_state_load_reg_1211_pp0_iter0_reg;
    sc_signal< sc_lv<1> > tmp_6_reg_1315;
    sc_signal< sc_lv<1> > tmp_6_reg_1315_pp0_iter0_reg;
    sc_signal< bool > ap_predicate_op179_write_state3;
    sc_signal< sc_lv<1> > tmp_36_i_reg_520;
    sc_signal< sc_lv<1> > dataLenW_loc_2_i_reg_478;
    sc_signal< sc_lv<1> > tmp_37_i_reg_1392;
    sc_signal< bool > ap_predicate_op180_write_state3;
    sc_signal< bool > ap_predicate_op182_write_state3;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< sc_logic > ap_CS_iter1_fsm_state3;
    sc_signal< bool > ap_block_state2_pp0_stage1_iter0;
    sc_signal< sc_lv<1> > mw_writeLast;
    sc_signal< sc_lv<64> > mw_prevWord_data_V;
    sc_signal< sc_lv<8> > mw_prevWord_keep_V;
    sc_signal< sc_lv<2> > mw_state;
    sc_signal< sc_lv<64> > headWord_data_V;
    sc_signal< sc_lv<8> > headWord_keep_V;
    sc_signal< sc_lv<1> > headWord_last_V;
    sc_signal< sc_lv<16> > dataLen_V;
    sc_signal< sc_lv<1> > dataLenW;
    sc_signal< sc_lv<48> > srcMacAddress_V_r;
    sc_signal< sc_logic > dataIn_TDATA_blk_n;
    sc_signal< sc_lv<2> > mw_state_load_load_fu_809_p1;
    sc_signal< sc_lv<1> > grp_nbreadreq_fu_148_p6;
    sc_signal< sc_logic > dataFifo_V_blk_n;
    sc_signal< sc_logic > dataLenFifo_V_V_blk_n;
    sc_signal< sc_lv<16> > tmp_V_reg_324;
    sc_signal< bool > ap_predicate_op15_read_state1;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0;
    sc_signal< sc_lv<8> > p_Val2_1_reg_1206;
    sc_signal< sc_lv<64> > tmp_data_V_4_reg_1259;
    sc_signal< sc_lv<16> > tmp_15_fu_838_p1;
    sc_signal< sc_lv<16> > tmp_15_reg_1270;
    sc_signal< sc_lv<2> > tmp_16_fu_842_p1;
    sc_signal< sc_lv<2> > tmp_16_reg_1275;
    sc_signal< sc_lv<1> > tmp_17_reg_1280;
    sc_signal< sc_lv<1> > or_cond_i_fu_920_p2;
    sc_signal< sc_lv<16> > grp_fu_687_p2;
    sc_signal< sc_lv<1> > tmp_5_i_fu_932_p2;
    sc_signal< sc_lv<1> > tmp_8_i_fu_938_p2;
    sc_signal< sc_lv<1> > tmp_10_i_fu_944_p2;
    sc_signal< sc_lv<1> > tmp_14_i_fu_950_p2;
    sc_signal< sc_lv<1> > tmp_18_i_fu_956_p2;
    sc_signal< sc_lv<1> > tmp_22_i_fu_962_p2;
    sc_signal< sc_lv<1> > tmp_26_i_fu_968_p2;
    sc_signal< sc_lv<1> > tmp_30_i_fu_974_p2;
    sc_signal< sc_lv<16> > grp_fu_699_p2;
    sc_signal< sc_lv<16> > grp_fu_711_p2;
    sc_signal< sc_lv<16> > grp_fu_723_p2;
    sc_signal< sc_lv<16> > grp_fu_735_p2;
    sc_signal< sc_lv<16> > grp_fu_747_p2;
    sc_signal< sc_lv<16> > grp_fu_759_p2;
    sc_signal< sc_lv<16> > grp_fu_771_p2;
    sc_signal< sc_lv<16> > tmp_14_fu_1030_p1;
    sc_signal< sc_lv<16> > tmp_14_reg_1387;
    sc_signal< sc_lv<1> > tmp_37_i_fu_1115_p2;
    sc_signal< sc_lv<1> > ap_phi_mux_tmp_36_i_phi_fu_524_p32;
    sc_signal< sc_lv<1> > ap_phi_mux_dataLenW_loc_2_i_phi_fu_483_p32;
    sc_signal< sc_lv<16> > ap_phi_mux_dataLen_V_loc_15_i_phi_fu_192_p18;
    sc_signal< sc_lv<16> > ap_phi_reg_pp0_iter0_dataLen_V_loc_15_i_reg_189;
    sc_signal< sc_lv<1> > tmp_6_i_fu_860_p2;
    sc_signal< sc_lv<1> > tmp_i_fu_866_p2;
    sc_signal< sc_lv<1> > tmp_12_i_fu_872_p2;
    sc_signal< sc_lv<1> > tmp_16_i_fu_878_p2;
    sc_signal< sc_lv<1> > tmp_20_i_fu_884_p2;
    sc_signal< sc_lv<1> > tmp_24_i_fu_890_p2;
    sc_signal< sc_lv<1> > tmp_28_i_fu_896_p2;
    sc_signal< sc_lv<1> > tmp_32_i_fu_902_p2;
    sc_signal< sc_lv<1> > ap_phi_reg_pp0_iter0_mw_state_flag_1_i_reg_213;
    sc_signal< sc_lv<2> > ap_phi_reg_pp0_iter0_mw_state_new_1_i_reg_268;
    sc_signal< sc_lv<16> > ap_phi_reg_pp0_iter0_tmp_V_reg_324;
    sc_signal< sc_lv<1> > ap_phi_reg_pp0_iter0_dataLenW_flag_2_i_reg_367;
    sc_signal< sc_lv<1> > ap_phi_reg_pp0_iter0_dataLenW_new_2_i_reg_422;
    sc_signal< sc_lv<1> > ap_phi_reg_pp0_iter0_dataLenW_loc_2_i_reg_478;
    sc_signal< sc_lv<1> > ap_phi_reg_pp0_iter0_tmp_36_i_reg_520;
    sc_signal< sc_lv<1> > ap_phi_reg_pp0_iter0_p_0455_2_3_i_reg_564;
    sc_signal< sc_lv<1> > ap_phi_mux_mw_state_flag_2_i_phi_fu_620_p6;
    sc_signal< sc_lv<1> > ap_phi_reg_pp0_iter0_mw_state_flag_2_i_reg_617;
    sc_signal< sc_lv<2> > ap_phi_mux_mw_state_new_2_i_phi_fu_635_p6;
    sc_signal< sc_lv<2> > ap_phi_reg_pp0_iter0_mw_state_new_2_i_reg_632;
    sc_signal< sc_lv<1> > ap_phi_mux_dataLenW_flag_4_i_phi_fu_649_p6;
    sc_signal< sc_lv<1> > ap_phi_reg_pp0_iter0_dataLenW_flag_4_i_reg_646;
    sc_signal< sc_lv<1> > ap_phi_mux_dataLenW_new_4_i_phi_fu_664_p6;
    sc_signal< sc_lv<1> > ap_phi_reg_pp0_iter0_dataLenW_new_4_i_reg_661;
    sc_signal< sc_lv<185> > tmp_343_fu_1012_p5;
    sc_signal< sc_lv<185> > tmp_123_fu_1096_p5;
    sc_signal< sc_lv<185> > tmp_fu_1145_p5;
    sc_signal< sc_lv<185> > tmp_233_fu_1189_p5;
    sc_signal< sc_lv<48> > p_Val2_3_fu_1062_p1;
    sc_signal< sc_lv<1> > tmp_35_i_fu_914_p2;
    sc_signal< sc_lv<1> > dataLenW_load_not_i_fu_908_p2;
    sc_signal< sc_lv<1> > tmp_last_V_4_fu_995_p2;
    sc_signal< sc_lv<6> > grp_fu_792_p4;
    sc_signal< sc_lv<48> > grp_fu_783_p4;
    sc_signal< sc_lv<73> > tmp_44_i_fu_1000_p6;
    sc_signal< sc_lv<16> > tmp_13_fu_1082_p1;
    sc_signal< sc_lv<48> > p_Result_2_i_fu_1072_p4;
    sc_signal< sc_lv<73> > tmp_42_i_fu_1086_p4;
    sc_signal< sc_lv<73> > tmp_39_i_fu_1133_p5;
    sc_signal< sc_lv<32> > p_Result_4_i_fu_1168_p4;
    sc_signal< sc_lv<73> > tmp_43_i_fu_1178_p5;
    sc_signal< sc_lv<2> > ap_NS_iter0_fsm;
    sc_signal< sc_lv<2> > ap_NS_iter1_fsm;
    sc_signal< bool > ap_condition_859;
    sc_signal< bool > ap_condition_863;
    sc_signal< bool > ap_condition_867;
    sc_signal< bool > ap_condition_871;
    sc_signal< bool > ap_condition_875;
    sc_signal< bool > ap_condition_879;
    sc_signal< bool > ap_condition_882;
    sc_signal< bool > ap_condition_184;
    sc_signal< bool > ap_condition_887;
    sc_signal< bool > ap_condition_894;
    sc_signal< bool > ap_condition_144;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<2> ap_ST_iter0_fsm_state1;
    static const sc_lv<2> ap_ST_iter0_fsm_state2;
    static const sc_lv<2> ap_ST_iter1_fsm_state3;
    static const sc_lv<2> ap_ST_iter1_fsm_state0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<16> ap_const_lv16_1;
    static const sc_lv<16> ap_const_lv16_2;
    static const sc_lv<16> ap_const_lv16_3;
    static const sc_lv<16> ap_const_lv16_4;
    static const sc_lv<16> ap_const_lv16_5;
    static const sc_lv<16> ap_const_lv16_6;
    static const sc_lv<16> ap_const_lv16_7;
    static const sc_lv<16> ap_const_lv16_8;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_3F;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<8> ap_const_lv8_7F;
    static const sc_lv<8> ap_const_lv8_3F;
    static const sc_lv<8> ap_const_lv8_1F;
    static const sc_lv<8> ap_const_lv8_F;
    static const sc_lv<8> ap_const_lv8_7;
    static const sc_lv<8> ap_const_lv8_3;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<16> ap_const_lv16_2D;
    static const sc_lv<185> ap_const_lv185_lc_1;
    static const sc_lv<32> ap_const_lv32_48;
    static const sc_lv<32> ap_const_lv32_30;
    static const sc_lv<32> ap_const_lv32_5F;
    static const sc_lv<9> ap_const_lv9_FF;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<32> ap_const_lv32_2F;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_iter0_fsm_state1();
    void thread_ap_CS_iter0_fsm_state2();
    void thread_ap_CS_iter1_fsm_state0();
    void thread_ap_CS_iter1_fsm_state3();
    void thread_ap_block_state1_pp0_stage0_iter0();
    void thread_ap_block_state2_pp0_stage1_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_condition_144();
    void thread_ap_condition_184();
    void thread_ap_condition_859();
    void thread_ap_condition_863();
    void thread_ap_condition_867();
    void thread_ap_condition_871();
    void thread_ap_condition_875();
    void thread_ap_condition_879();
    void thread_ap_condition_882();
    void thread_ap_condition_887();
    void thread_ap_condition_894();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_phi_mux_dataLenW_flag_4_i_phi_fu_649_p6();
    void thread_ap_phi_mux_dataLenW_loc_2_i_phi_fu_483_p32();
    void thread_ap_phi_mux_dataLenW_new_4_i_phi_fu_664_p6();
    void thread_ap_phi_mux_dataLen_V_loc_15_i_phi_fu_192_p18();
    void thread_ap_phi_mux_mw_state_flag_2_i_phi_fu_620_p6();
    void thread_ap_phi_mux_mw_state_new_2_i_phi_fu_635_p6();
    void thread_ap_phi_mux_tmp_36_i_phi_fu_524_p32();
    void thread_ap_phi_reg_pp0_iter0_dataLenW_flag_4_i_reg_646();
    void thread_ap_phi_reg_pp0_iter0_dataLenW_new_4_i_reg_661();
    void thread_ap_phi_reg_pp0_iter0_dataLen_V_loc_15_i_reg_189();
    void thread_ap_phi_reg_pp0_iter0_mw_state_flag_2_i_reg_617();
    void thread_ap_phi_reg_pp0_iter0_mw_state_new_2_i_reg_632();
    void thread_ap_predicate_op123_write_state2();
    void thread_ap_predicate_op125_write_state2();
    void thread_ap_predicate_op128_read_state2();
    void thread_ap_predicate_op142_write_state2();
    void thread_ap_predicate_op15_read_state1();
    void thread_ap_predicate_op179_write_state3();
    void thread_ap_predicate_op180_write_state3();
    void thread_ap_predicate_op182_write_state3();
    void thread_ap_ready();
    void thread_dataFifo_V_blk_n();
    void thread_dataFifo_V_din();
    void thread_dataFifo_V_write();
    void thread_dataIn_TDATA_blk_n();
    void thread_dataIn_TREADY();
    void thread_dataLenFifo_V_V_blk_n();
    void thread_dataLenFifo_V_V_din();
    void thread_dataLenFifo_V_V_write();
    void thread_dataLenW_load_not_i_fu_908_p2();
    void thread_grp_fu_687_p2();
    void thread_grp_fu_699_p2();
    void thread_grp_fu_711_p2();
    void thread_grp_fu_723_p2();
    void thread_grp_fu_735_p2();
    void thread_grp_fu_747_p2();
    void thread_grp_fu_759_p2();
    void thread_grp_fu_771_p2();
    void thread_grp_fu_783_p4();
    void thread_grp_fu_792_p4();
    void thread_grp_nbreadreq_fu_148_p6();
    void thread_internal_ap_ready();
    void thread_mw_state_load_load_fu_809_p1();
    void thread_or_cond_i_fu_920_p2();
    void thread_p_Result_2_i_fu_1072_p4();
    void thread_p_Result_4_i_fu_1168_p4();
    void thread_p_Val2_3_fu_1062_p1();
    void thread_real_start();
    void thread_start_out();
    void thread_start_write();
    void thread_tmp_10_i_fu_944_p2();
    void thread_tmp_123_fu_1096_p5();
    void thread_tmp_12_i_fu_872_p2();
    void thread_tmp_13_fu_1082_p1();
    void thread_tmp_14_fu_1030_p1();
    void thread_tmp_14_i_fu_950_p2();
    void thread_tmp_15_fu_838_p1();
    void thread_tmp_16_fu_842_p1();
    void thread_tmp_16_i_fu_878_p2();
    void thread_tmp_18_i_fu_956_p2();
    void thread_tmp_20_i_fu_884_p2();
    void thread_tmp_22_i_fu_962_p2();
    void thread_tmp_233_fu_1189_p5();
    void thread_tmp_24_i_fu_890_p2();
    void thread_tmp_26_i_fu_968_p2();
    void thread_tmp_28_i_fu_896_p2();
    void thread_tmp_30_i_fu_974_p2();
    void thread_tmp_32_i_fu_902_p2();
    void thread_tmp_343_fu_1012_p5();
    void thread_tmp_35_i_fu_914_p2();
    void thread_tmp_37_i_fu_1115_p2();
    void thread_tmp_39_i_fu_1133_p5();
    void thread_tmp_42_i_fu_1086_p4();
    void thread_tmp_43_i_fu_1178_p5();
    void thread_tmp_44_i_fu_1000_p6();
    void thread_tmp_5_i_fu_932_p2();
    void thread_tmp_6_i_fu_860_p2();
    void thread_tmp_8_i_fu_938_p2();
    void thread_tmp_fu_1145_p5();
    void thread_tmp_i_fu_866_p2();
    void thread_tmp_last_V_4_fu_995_p2();
    void thread_ap_NS_iter0_fsm();
    void thread_ap_NS_iter1_fsm();
};

}

using namespace ap_rtl;

#endif

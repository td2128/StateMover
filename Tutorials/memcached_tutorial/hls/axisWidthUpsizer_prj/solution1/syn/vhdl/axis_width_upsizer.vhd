-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity axis_width_upsizer is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    data_in_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
    data_in_TVALID : IN STD_LOGIC;
    data_in_TREADY : OUT STD_LOGIC;
    data_in_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    data_out_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
    data_out_TVALID : OUT STD_LOGIC;
    data_out_TREADY : IN STD_LOGIC;
    data_out_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    data_out_TKEEP : OUT STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of axis_width_upsizer is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "axis_width_upsizer,hls_ip_2018_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcku040-ffva1156-2-e,HLS_INPUT_CLOCK=6.660000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=1.671000,HLS_SYN_LAT=2,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=305,HLS_SYN_LUT=310,HLS_VERSION=2018_3}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv8_3F : STD_LOGIC_VECTOR (7 downto 0) := "00111111";
    constant ap_const_lv8_1F : STD_LOGIC_VECTOR (7 downto 0) := "00011111";
    constant ap_const_lv8_F : STD_LOGIC_VECTOR (7 downto 0) := "00001111";
    constant ap_const_lv8_7 : STD_LOGIC_VECTOR (7 downto 0) := "00000111";
    constant ap_const_lv8_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000011";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";

    signal ap_rst_n_inv : STD_LOGIC;
    signal data_out_V_data_V_1_data_out : STD_LOGIC_VECTOR (63 downto 0);
    signal data_out_V_data_V_1_vld_in : STD_LOGIC;
    signal data_out_V_data_V_1_vld_out : STD_LOGIC;
    signal data_out_V_data_V_1_ack_in : STD_LOGIC;
    signal data_out_V_data_V_1_ack_out : STD_LOGIC;
    signal data_out_V_data_V_1_payload_A : STD_LOGIC_VECTOR (63 downto 0);
    signal data_out_V_data_V_1_payload_B : STD_LOGIC_VECTOR (63 downto 0);
    signal data_out_V_data_V_1_sel_rd : STD_LOGIC := '0';
    signal data_out_V_data_V_1_sel_wr : STD_LOGIC := '0';
    signal data_out_V_data_V_1_sel : STD_LOGIC;
    signal data_out_V_data_V_1_load_A : STD_LOGIC;
    signal data_out_V_data_V_1_load_B : STD_LOGIC;
    signal data_out_V_data_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal data_out_V_data_V_1_state_cmp_full : STD_LOGIC;
    signal data_out_V_last_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal data_out_V_last_V_1_vld_in : STD_LOGIC;
    signal data_out_V_last_V_1_vld_out : STD_LOGIC;
    signal data_out_V_last_V_1_ack_in : STD_LOGIC;
    signal data_out_V_last_V_1_ack_out : STD_LOGIC;
    signal data_out_V_last_V_1_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal data_out_V_last_V_1_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal data_out_V_last_V_1_sel_rd : STD_LOGIC := '0';
    signal data_out_V_last_V_1_sel_wr : STD_LOGIC := '0';
    signal data_out_V_last_V_1_sel : STD_LOGIC;
    signal data_out_V_last_V_1_load_A : STD_LOGIC;
    signal data_out_V_last_V_1_load_B : STD_LOGIC;
    signal data_out_V_last_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal data_out_V_last_V_1_state_cmp_full : STD_LOGIC;
    signal data_out_V_keep_V_1_data_out : STD_LOGIC_VECTOR (7 downto 0);
    signal data_out_V_keep_V_1_vld_in : STD_LOGIC;
    signal data_out_V_keep_V_1_vld_out : STD_LOGIC;
    signal data_out_V_keep_V_1_ack_in : STD_LOGIC;
    signal data_out_V_keep_V_1_ack_out : STD_LOGIC;
    signal data_out_V_keep_V_1_payload_A : STD_LOGIC_VECTOR (7 downto 0);
    signal data_out_V_keep_V_1_payload_B : STD_LOGIC_VECTOR (7 downto 0);
    signal data_out_V_keep_V_1_sel_rd : STD_LOGIC := '0';
    signal data_out_V_keep_V_1_sel_wr : STD_LOGIC := '0';
    signal data_out_V_keep_V_1_sel : STD_LOGIC;
    signal data_out_V_keep_V_1_load_A : STD_LOGIC;
    signal data_out_V_keep_V_1_load_B : STD_LOGIC;
    signal data_out_V_keep_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal data_out_V_keep_V_1_state_cmp_full : STD_LOGIC;
    signal counter_V : STD_LOGIC_VECTOR (2 downto 0) := "000";
    signal send_word_data_V : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal data_in_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal tmp_nbreadreq_fu_108_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_out_TDATA_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal tmp_reg_393 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_445 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal tmp_reg_393_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_445_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_predicate_op44_write_state2 : BOOLEAN;
    signal ap_block_state2_io : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_predicate_op56_write_state3 : BOOLEAN;
    signal ap_block_state3_io : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal tmp_last_V_reg_397 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_7_fu_219_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal t_V_load_fu_211_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Result_6_fu_237_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_5_fu_255_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_4_fu_273_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_3_fu_291_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_2_fu_309_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_1_fu_327_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_s_fu_345_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal or_cond_fu_369_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_phi_reg_pp0_iter0_tmp_keep_V_reg_139 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_tmp_keep_V_reg_139 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_tmp_data_V_1_reg_179 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter1_tmp_data_V_1_reg_179 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_7_fu_375_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal tmp_5_fu_363_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_334 : BOOLEAN;
    signal ap_condition_368 : BOOLEAN;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    data_out_V_data_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                data_out_V_data_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((data_out_V_data_V_1_ack_out = ap_const_logic_1) and (data_out_V_data_V_1_vld_out = ap_const_logic_1))) then 
                                        data_out_V_data_V_1_sel_rd <= not(data_out_V_data_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    data_out_V_data_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                data_out_V_data_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((data_out_V_data_V_1_ack_in = ap_const_logic_1) and (data_out_V_data_V_1_vld_in = ap_const_logic_1))) then 
                                        data_out_V_data_V_1_sel_wr <= not(data_out_V_data_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    data_out_V_data_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                data_out_V_data_V_1_state <= ap_const_lv2_0;
            else
                if ((((data_out_V_data_V_1_state = ap_const_lv2_2) and (data_out_V_data_V_1_vld_in = ap_const_logic_0)) or ((data_out_V_data_V_1_state = ap_const_lv2_3) and (data_out_V_data_V_1_vld_in = ap_const_logic_0) and (data_out_V_data_V_1_ack_out = ap_const_logic_1)))) then 
                    data_out_V_data_V_1_state <= ap_const_lv2_2;
                elsif ((((data_out_V_data_V_1_state = ap_const_lv2_1) and (data_out_V_data_V_1_ack_out = ap_const_logic_0)) or ((data_out_V_data_V_1_state = ap_const_lv2_3) and (data_out_V_data_V_1_ack_out = ap_const_logic_0) and (data_out_V_data_V_1_vld_in = ap_const_logic_1)))) then 
                    data_out_V_data_V_1_state <= ap_const_lv2_1;
                elsif (((not(((data_out_V_data_V_1_vld_in = ap_const_logic_0) and (data_out_V_data_V_1_ack_out = ap_const_logic_1))) and not(((data_out_V_data_V_1_ack_out = ap_const_logic_0) and (data_out_V_data_V_1_vld_in = ap_const_logic_1))) and (data_out_V_data_V_1_state = ap_const_lv2_3)) or ((data_out_V_data_V_1_state = ap_const_lv2_1) and (data_out_V_data_V_1_ack_out = ap_const_logic_1)) or ((data_out_V_data_V_1_state = ap_const_lv2_2) and (data_out_V_data_V_1_vld_in = ap_const_logic_1)))) then 
                    data_out_V_data_V_1_state <= ap_const_lv2_3;
                else 
                    data_out_V_data_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    data_out_V_keep_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                data_out_V_keep_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((data_out_V_keep_V_1_ack_out = ap_const_logic_1) and (data_out_V_keep_V_1_vld_out = ap_const_logic_1))) then 
                                        data_out_V_keep_V_1_sel_rd <= not(data_out_V_keep_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    data_out_V_keep_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                data_out_V_keep_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((data_out_V_keep_V_1_ack_in = ap_const_logic_1) and (data_out_V_keep_V_1_vld_in = ap_const_logic_1))) then 
                                        data_out_V_keep_V_1_sel_wr <= not(data_out_V_keep_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    data_out_V_keep_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                data_out_V_keep_V_1_state <= ap_const_lv2_0;
            else
                if ((((data_out_V_keep_V_1_state = ap_const_lv2_2) and (data_out_V_keep_V_1_vld_in = ap_const_logic_0)) or ((data_out_V_keep_V_1_state = ap_const_lv2_3) and (data_out_V_keep_V_1_vld_in = ap_const_logic_0) and (data_out_V_keep_V_1_ack_out = ap_const_logic_1)))) then 
                    data_out_V_keep_V_1_state <= ap_const_lv2_2;
                elsif ((((data_out_V_keep_V_1_state = ap_const_lv2_1) and (data_out_V_keep_V_1_ack_out = ap_const_logic_0)) or ((data_out_V_keep_V_1_state = ap_const_lv2_3) and (data_out_V_keep_V_1_ack_out = ap_const_logic_0) and (data_out_V_keep_V_1_vld_in = ap_const_logic_1)))) then 
                    data_out_V_keep_V_1_state <= ap_const_lv2_1;
                elsif (((not(((data_out_V_keep_V_1_vld_in = ap_const_logic_0) and (data_out_V_keep_V_1_ack_out = ap_const_logic_1))) and not(((data_out_V_keep_V_1_ack_out = ap_const_logic_0) and (data_out_V_keep_V_1_vld_in = ap_const_logic_1))) and (data_out_V_keep_V_1_state = ap_const_lv2_3)) or ((data_out_V_keep_V_1_state = ap_const_lv2_1) and (data_out_V_keep_V_1_ack_out = ap_const_logic_1)) or ((data_out_V_keep_V_1_state = ap_const_lv2_2) and (data_out_V_keep_V_1_vld_in = ap_const_logic_1)))) then 
                    data_out_V_keep_V_1_state <= ap_const_lv2_3;
                else 
                    data_out_V_keep_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    data_out_V_last_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                data_out_V_last_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((data_out_V_last_V_1_ack_out = ap_const_logic_1) and (data_out_V_last_V_1_vld_out = ap_const_logic_1))) then 
                                        data_out_V_last_V_1_sel_rd <= not(data_out_V_last_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    data_out_V_last_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                data_out_V_last_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((data_out_V_last_V_1_ack_in = ap_const_logic_1) and (data_out_V_last_V_1_vld_in = ap_const_logic_1))) then 
                                        data_out_V_last_V_1_sel_wr <= not(data_out_V_last_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    data_out_V_last_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                data_out_V_last_V_1_state <= ap_const_lv2_0;
            else
                if ((((data_out_V_last_V_1_state = ap_const_lv2_2) and (data_out_V_last_V_1_vld_in = ap_const_logic_0)) or ((data_out_V_last_V_1_state = ap_const_lv2_3) and (data_out_V_last_V_1_vld_in = ap_const_logic_0) and (data_out_V_last_V_1_ack_out = ap_const_logic_1)))) then 
                    data_out_V_last_V_1_state <= ap_const_lv2_2;
                elsif ((((data_out_V_last_V_1_state = ap_const_lv2_3) and (data_out_V_last_V_1_ack_out = ap_const_logic_0) and (data_out_V_last_V_1_vld_in = ap_const_logic_1)) or ((data_out_V_last_V_1_state = ap_const_lv2_1) and (data_out_V_last_V_1_ack_out = ap_const_logic_0)))) then 
                    data_out_V_last_V_1_state <= ap_const_lv2_1;
                elsif ((((data_out_V_last_V_1_state = ap_const_lv2_2) and (data_out_V_last_V_1_vld_in = ap_const_logic_1)) or (not(((data_out_V_last_V_1_vld_in = ap_const_logic_0) and (data_out_V_last_V_1_ack_out = ap_const_logic_1))) and not(((data_out_V_last_V_1_ack_out = ap_const_logic_0) and (data_out_V_last_V_1_vld_in = ap_const_logic_1))) and (data_out_V_last_V_1_state = ap_const_lv2_3)) or ((data_out_V_last_V_1_state = ap_const_lv2_1) and (data_out_V_last_V_1_ack_out = ap_const_logic_1)))) then 
                    data_out_V_last_V_1_state <= ap_const_lv2_3;
                else 
                    data_out_V_last_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_tmp_data_V_1_reg_179_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_334)) then
                if (((tmp_nbreadreq_fu_108_p4 = ap_const_lv1_1) and (t_V_load_fu_211_p1 = ap_const_lv3_0))) then 
                    ap_phi_reg_pp0_iter1_tmp_data_V_1_reg_179 <= p_Result_1_fu_327_p5;
                elsif (((tmp_nbreadreq_fu_108_p4 = ap_const_lv1_1) and (t_V_load_fu_211_p1 = ap_const_lv3_1))) then 
                    ap_phi_reg_pp0_iter1_tmp_data_V_1_reg_179 <= p_Result_2_fu_309_p5;
                elsif (((tmp_nbreadreq_fu_108_p4 = ap_const_lv1_1) and (t_V_load_fu_211_p1 = ap_const_lv3_2))) then 
                    ap_phi_reg_pp0_iter1_tmp_data_V_1_reg_179 <= p_Result_3_fu_291_p5;
                elsif (((tmp_nbreadreq_fu_108_p4 = ap_const_lv1_1) and (t_V_load_fu_211_p1 = ap_const_lv3_3))) then 
                    ap_phi_reg_pp0_iter1_tmp_data_V_1_reg_179 <= p_Result_4_fu_273_p5;
                elsif (((tmp_nbreadreq_fu_108_p4 = ap_const_lv1_1) and (t_V_load_fu_211_p1 = ap_const_lv3_4))) then 
                    ap_phi_reg_pp0_iter1_tmp_data_V_1_reg_179 <= p_Result_5_fu_255_p5;
                elsif (((tmp_nbreadreq_fu_108_p4 = ap_const_lv1_1) and (t_V_load_fu_211_p1 = ap_const_lv3_5))) then 
                    ap_phi_reg_pp0_iter1_tmp_data_V_1_reg_179 <= p_Result_6_fu_237_p5;
                elsif (((tmp_nbreadreq_fu_108_p4 = ap_const_lv1_1) and (t_V_load_fu_211_p1 = ap_const_lv3_6))) then 
                    ap_phi_reg_pp0_iter1_tmp_data_V_1_reg_179 <= p_Result_7_fu_219_p5;
                elsif (((tmp_nbreadreq_fu_108_p4 = ap_const_lv1_1) and (t_V_load_fu_211_p1 = ap_const_lv3_7))) then 
                    ap_phi_reg_pp0_iter1_tmp_data_V_1_reg_179 <= p_Result_s_fu_345_p5;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_tmp_data_V_1_reg_179 <= ap_phi_reg_pp0_iter0_tmp_data_V_1_reg_179;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_tmp_keep_V_reg_139_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_334)) then
                if (((tmp_nbreadreq_fu_108_p4 = ap_const_lv1_1) and (t_V_load_fu_211_p1 = ap_const_lv3_0))) then 
                    ap_phi_reg_pp0_iter1_tmp_keep_V_reg_139 <= ap_const_lv8_1;
                elsif (((tmp_nbreadreq_fu_108_p4 = ap_const_lv1_1) and (t_V_load_fu_211_p1 = ap_const_lv3_1))) then 
                    ap_phi_reg_pp0_iter1_tmp_keep_V_reg_139 <= ap_const_lv8_3;
                elsif (((tmp_nbreadreq_fu_108_p4 = ap_const_lv1_1) and (t_V_load_fu_211_p1 = ap_const_lv3_2))) then 
                    ap_phi_reg_pp0_iter1_tmp_keep_V_reg_139 <= ap_const_lv8_7;
                elsif (((tmp_nbreadreq_fu_108_p4 = ap_const_lv1_1) and (t_V_load_fu_211_p1 = ap_const_lv3_3))) then 
                    ap_phi_reg_pp0_iter1_tmp_keep_V_reg_139 <= ap_const_lv8_F;
                elsif (((tmp_nbreadreq_fu_108_p4 = ap_const_lv1_1) and (t_V_load_fu_211_p1 = ap_const_lv3_4))) then 
                    ap_phi_reg_pp0_iter1_tmp_keep_V_reg_139 <= ap_const_lv8_1F;
                elsif (((tmp_nbreadreq_fu_108_p4 = ap_const_lv1_1) and (t_V_load_fu_211_p1 = ap_const_lv3_5))) then 
                    ap_phi_reg_pp0_iter1_tmp_keep_V_reg_139 <= ap_const_lv8_3F;
                elsif (((tmp_nbreadreq_fu_108_p4 = ap_const_lv1_1) and (t_V_load_fu_211_p1 = ap_const_lv3_6))) then 
                    ap_phi_reg_pp0_iter1_tmp_keep_V_reg_139 <= ap_const_lv8_7F;
                elsif (((tmp_nbreadreq_fu_108_p4 = ap_const_lv1_1) and (t_V_load_fu_211_p1 = ap_const_lv3_7))) then 
                    ap_phi_reg_pp0_iter1_tmp_keep_V_reg_139 <= ap_const_lv8_FF;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_tmp_keep_V_reg_139 <= ap_phi_reg_pp0_iter0_tmp_keep_V_reg_139;
                end if;
            end if; 
        end if;
    end process;

    counter_V_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_368)) then
                if ((or_cond_fu_369_p2 = ap_const_lv1_1)) then 
                    counter_V <= ap_const_lv3_0;
                elsif ((or_cond_fu_369_p2 = ap_const_lv1_0)) then 
                    counter_V <= tmp_7_fu_375_p2;
                end if;
            end if; 
        end if;
    end process;

    send_word_data_V_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_368)) then
                if ((t_V_load_fu_211_p1 = ap_const_lv3_7)) then 
                    send_word_data_V <= p_Result_s_fu_345_p5;
                elsif ((t_V_load_fu_211_p1 = ap_const_lv3_0)) then 
                    send_word_data_V <= p_Result_1_fu_327_p5;
                elsif ((t_V_load_fu_211_p1 = ap_const_lv3_1)) then 
                    send_word_data_V <= p_Result_2_fu_309_p5;
                elsif ((t_V_load_fu_211_p1 = ap_const_lv3_2)) then 
                    send_word_data_V <= p_Result_3_fu_291_p5;
                elsif ((t_V_load_fu_211_p1 = ap_const_lv3_3)) then 
                    send_word_data_V <= p_Result_4_fu_273_p5;
                elsif ((t_V_load_fu_211_p1 = ap_const_lv3_4)) then 
                    send_word_data_V <= p_Result_5_fu_255_p5;
                elsif ((t_V_load_fu_211_p1 = ap_const_lv3_5)) then 
                    send_word_data_V <= p_Result_6_fu_237_p5;
                elsif ((t_V_load_fu_211_p1 = ap_const_lv3_6)) then 
                    send_word_data_V <= p_Result_7_fu_219_p5;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((data_out_V_data_V_1_load_A = ap_const_logic_1)) then
                data_out_V_data_V_1_payload_A <= ap_phi_reg_pp0_iter1_tmp_data_V_1_reg_179;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((data_out_V_data_V_1_load_B = ap_const_logic_1)) then
                data_out_V_data_V_1_payload_B <= ap_phi_reg_pp0_iter1_tmp_data_V_1_reg_179;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((data_out_V_keep_V_1_load_A = ap_const_logic_1)) then
                data_out_V_keep_V_1_payload_A <= ap_phi_reg_pp0_iter1_tmp_keep_V_reg_139;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((data_out_V_keep_V_1_load_B = ap_const_logic_1)) then
                data_out_V_keep_V_1_payload_B <= ap_phi_reg_pp0_iter1_tmp_keep_V_reg_139;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((data_out_V_last_V_1_load_A = ap_const_logic_1)) then
                data_out_V_last_V_1_payload_A <= tmp_last_V_reg_397;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((data_out_V_last_V_1_load_B = ap_const_logic_1)) then
                data_out_V_last_V_1_payload_B <= tmp_last_V_reg_397;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_nbreadreq_fu_108_p4 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                or_cond_reg_445 <= or_cond_fu_369_p2;
                tmp_last_V_reg_397 <= data_in_TLAST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                or_cond_reg_445_pp0_iter1_reg <= or_cond_reg_445;
                tmp_reg_393 <= tmp_nbreadreq_fu_108_p4;
                tmp_reg_393_pp0_iter1_reg <= tmp_reg_393;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(data_in_TVALID, data_out_V_data_V_1_ack_in, data_out_V_last_V_1_ack_in, data_out_V_keep_V_1_ack_in, tmp_nbreadreq_fu_108_p4, ap_enable_reg_pp0_iter2)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((data_out_V_last_V_1_ack_in = ap_const_logic_0) or (data_out_V_data_V_1_ack_in = ap_const_logic_0) or (data_out_V_keep_V_1_ack_in = ap_const_logic_0))) or ((tmp_nbreadreq_fu_108_p4 = ap_const_lv1_1) and (data_in_TVALID = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(data_in_TVALID, data_out_V_data_V_1_ack_in, data_out_V_last_V_1_ack_in, data_out_V_keep_V_1_ack_in, tmp_nbreadreq_fu_108_p4, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_block_state2_io, ap_block_state3_io)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state3_io) or (data_out_V_last_V_1_ack_in = ap_const_logic_0) or (data_out_V_data_V_1_ack_in = ap_const_logic_0) or (data_out_V_keep_V_1_ack_in = ap_const_logic_0))) or ((ap_const_boolean_1 = ap_block_state2_io) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((tmp_nbreadreq_fu_108_p4 = ap_const_lv1_1) and (data_in_TVALID = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(data_in_TVALID, data_out_V_data_V_1_ack_in, data_out_V_last_V_1_ack_in, data_out_V_keep_V_1_ack_in, tmp_nbreadreq_fu_108_p4, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_block_state2_io, ap_block_state3_io)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state3_io) or (data_out_V_last_V_1_ack_in = ap_const_logic_0) or (data_out_V_data_V_1_ack_in = ap_const_logic_0) or (data_out_V_keep_V_1_ack_in = ap_const_logic_0))) or ((ap_const_boolean_1 = ap_block_state2_io) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((tmp_nbreadreq_fu_108_p4 = ap_const_lv1_1) and (data_in_TVALID = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_1)));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(data_in_TVALID, tmp_nbreadreq_fu_108_p4)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((tmp_nbreadreq_fu_108_p4 = ap_const_lv1_1) and (data_in_TVALID = ap_const_logic_0));
    end process;


    ap_block_state2_io_assign_proc : process(data_out_V_data_V_1_ack_in, ap_predicate_op44_write_state2)
    begin
                ap_block_state2_io <= ((ap_predicate_op44_write_state2 = ap_const_boolean_1) and (data_out_V_data_V_1_ack_in = ap_const_logic_0));
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_io_assign_proc : process(data_out_V_data_V_1_ack_in, ap_predicate_op56_write_state3)
    begin
                ap_block_state3_io <= ((ap_predicate_op56_write_state3 = ap_const_boolean_1) and (data_out_V_data_V_1_ack_in = ap_const_logic_0));
    end process;


    ap_block_state3_pp0_stage0_iter2_assign_proc : process(data_out_V_data_V_1_ack_in, data_out_V_last_V_1_ack_in, data_out_V_keep_V_1_ack_in)
    begin
                ap_block_state3_pp0_stage0_iter2 <= ((data_out_V_last_V_1_ack_in = ap_const_logic_0) or (data_out_V_data_V_1_ack_in = ap_const_logic_0) or (data_out_V_keep_V_1_ack_in = ap_const_logic_0));
    end process;


    ap_condition_334_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
                ap_condition_334 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_368_assign_proc : process(ap_CS_fsm_pp0_stage0, tmp_nbreadreq_fu_108_p4, ap_block_pp0_stage0_11001)
    begin
                ap_condition_368 <= ((tmp_nbreadreq_fu_108_p4 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_tmp_data_V_1_reg_179 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_tmp_keep_V_reg_139 <= "XXXXXXXX";

    ap_predicate_op44_write_state2_assign_proc : process(tmp_reg_393, or_cond_reg_445)
    begin
                ap_predicate_op44_write_state2 <= ((or_cond_reg_445 = ap_const_lv1_1) and (tmp_reg_393 = ap_const_lv1_1));
    end process;


    ap_predicate_op56_write_state3_assign_proc : process(tmp_reg_393_pp0_iter1_reg, or_cond_reg_445_pp0_iter1_reg)
    begin
                ap_predicate_op56_write_state3 <= ((or_cond_reg_445_pp0_iter1_reg = ap_const_lv1_1) and (tmp_reg_393_pp0_iter1_reg = ap_const_lv1_1));
    end process;

    ap_reset_idle_pp0 <= ap_const_logic_0;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    data_in_TDATA_blk_n_assign_proc : process(data_in_TVALID, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, tmp_nbreadreq_fu_108_p4)
    begin
        if (((tmp_nbreadreq_fu_108_p4 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_in_TDATA_blk_n <= data_in_TVALID;
        else 
            data_in_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_in_TREADY_assign_proc : process(ap_CS_fsm_pp0_stage0, tmp_nbreadreq_fu_108_p4, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_nbreadreq_fu_108_p4 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_in_TREADY <= ap_const_logic_1;
        else 
            data_in_TREADY <= ap_const_logic_0;
        end if; 
    end process;

    data_out_TDATA <= data_out_V_data_V_1_data_out;

    data_out_TDATA_blk_n_assign_proc : process(data_out_V_data_V_1_state, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_reg_393, or_cond_reg_445, ap_enable_reg_pp0_iter2, tmp_reg_393_pp0_iter1_reg, or_cond_reg_445_pp0_iter1_reg)
    begin
        if ((((or_cond_reg_445_pp0_iter1_reg = ap_const_lv1_1) and (tmp_reg_393_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((or_cond_reg_445 = ap_const_lv1_1) and (tmp_reg_393 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            data_out_TDATA_blk_n <= data_out_V_data_V_1_state(1);
        else 
            data_out_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    data_out_TKEEP <= data_out_V_keep_V_1_data_out;
    data_out_TLAST <= data_out_V_last_V_1_data_out;
    data_out_TVALID <= data_out_V_keep_V_1_state(0);
    data_out_V_data_V_1_ack_in <= data_out_V_data_V_1_state(1);
    data_out_V_data_V_1_ack_out <= data_out_TREADY;

    data_out_V_data_V_1_data_out_assign_proc : process(data_out_V_data_V_1_payload_A, data_out_V_data_V_1_payload_B, data_out_V_data_V_1_sel)
    begin
        if ((data_out_V_data_V_1_sel = ap_const_logic_1)) then 
            data_out_V_data_V_1_data_out <= data_out_V_data_V_1_payload_B;
        else 
            data_out_V_data_V_1_data_out <= data_out_V_data_V_1_payload_A;
        end if; 
    end process;

    data_out_V_data_V_1_load_A <= (not(data_out_V_data_V_1_sel_wr) and data_out_V_data_V_1_state_cmp_full);
    data_out_V_data_V_1_load_B <= (data_out_V_data_V_1_state_cmp_full and data_out_V_data_V_1_sel_wr);
    data_out_V_data_V_1_sel <= data_out_V_data_V_1_sel_rd;
    data_out_V_data_V_1_state_cmp_full <= '0' when (data_out_V_data_V_1_state = ap_const_lv2_1) else '1';

    data_out_V_data_V_1_vld_in_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op44_write_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op44_write_state2 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_out_V_data_V_1_vld_in <= ap_const_logic_1;
        else 
            data_out_V_data_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    data_out_V_data_V_1_vld_out <= data_out_V_data_V_1_state(0);
    data_out_V_keep_V_1_ack_in <= data_out_V_keep_V_1_state(1);
    data_out_V_keep_V_1_ack_out <= data_out_TREADY;

    data_out_V_keep_V_1_data_out_assign_proc : process(data_out_V_keep_V_1_payload_A, data_out_V_keep_V_1_payload_B, data_out_V_keep_V_1_sel)
    begin
        if ((data_out_V_keep_V_1_sel = ap_const_logic_1)) then 
            data_out_V_keep_V_1_data_out <= data_out_V_keep_V_1_payload_B;
        else 
            data_out_V_keep_V_1_data_out <= data_out_V_keep_V_1_payload_A;
        end if; 
    end process;

    data_out_V_keep_V_1_load_A <= (not(data_out_V_keep_V_1_sel_wr) and data_out_V_keep_V_1_state_cmp_full);
    data_out_V_keep_V_1_load_B <= (data_out_V_keep_V_1_state_cmp_full and data_out_V_keep_V_1_sel_wr);
    data_out_V_keep_V_1_sel <= data_out_V_keep_V_1_sel_rd;
    data_out_V_keep_V_1_state_cmp_full <= '0' when (data_out_V_keep_V_1_state = ap_const_lv2_1) else '1';

    data_out_V_keep_V_1_vld_in_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op44_write_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op44_write_state2 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_out_V_keep_V_1_vld_in <= ap_const_logic_1;
        else 
            data_out_V_keep_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    data_out_V_keep_V_1_vld_out <= data_out_V_keep_V_1_state(0);
    data_out_V_last_V_1_ack_in <= data_out_V_last_V_1_state(1);
    data_out_V_last_V_1_ack_out <= data_out_TREADY;

    data_out_V_last_V_1_data_out_assign_proc : process(data_out_V_last_V_1_payload_A, data_out_V_last_V_1_payload_B, data_out_V_last_V_1_sel)
    begin
        if ((data_out_V_last_V_1_sel = ap_const_logic_1)) then 
            data_out_V_last_V_1_data_out <= data_out_V_last_V_1_payload_B;
        else 
            data_out_V_last_V_1_data_out <= data_out_V_last_V_1_payload_A;
        end if; 
    end process;

    data_out_V_last_V_1_load_A <= (not(data_out_V_last_V_1_sel_wr) and data_out_V_last_V_1_state_cmp_full);
    data_out_V_last_V_1_load_B <= (data_out_V_last_V_1_state_cmp_full and data_out_V_last_V_1_sel_wr);
    data_out_V_last_V_1_sel <= data_out_V_last_V_1_sel_rd;
    data_out_V_last_V_1_state_cmp_full <= '0' when (data_out_V_last_V_1_state = ap_const_lv2_1) else '1';

    data_out_V_last_V_1_vld_in_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op44_write_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op44_write_state2 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_out_V_last_V_1_vld_in <= ap_const_logic_1;
        else 
            data_out_V_last_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    data_out_V_last_V_1_vld_out <= data_out_V_last_V_1_state(0);
    or_cond_fu_369_p2 <= (tmp_5_fu_363_p2 or data_in_TLAST);
    p_Result_1_fu_327_p5 <= (send_word_data_V(63 downto 8) & data_in_TDATA);
    p_Result_2_fu_309_p5 <= (send_word_data_V(63 downto 16) & data_in_TDATA & send_word_data_V(7 downto 0));
    p_Result_3_fu_291_p5 <= (send_word_data_V(63 downto 24) & data_in_TDATA & send_word_data_V(15 downto 0));
    p_Result_4_fu_273_p5 <= (send_word_data_V(63 downto 32) & data_in_TDATA & send_word_data_V(23 downto 0));
    p_Result_5_fu_255_p5 <= (send_word_data_V(63 downto 40) & data_in_TDATA & send_word_data_V(31 downto 0));
    p_Result_6_fu_237_p5 <= (send_word_data_V(63 downto 48) & data_in_TDATA & send_word_data_V(39 downto 0));
    p_Result_7_fu_219_p5 <= (send_word_data_V(63 downto 56) & data_in_TDATA & send_word_data_V(47 downto 0));
    p_Result_s_fu_345_p5 <= (data_in_TDATA & send_word_data_V(55 downto 0));
    t_V_load_fu_211_p1 <= counter_V;
    tmp_5_fu_363_p2 <= "1" when (counter_V = ap_const_lv3_7) else "0";
    tmp_7_fu_375_p2 <= std_logic_vector(unsigned(counter_V) + unsigned(ap_const_lv3_1));
    tmp_nbreadreq_fu_108_p4 <= (0=>(data_in_TVALID), others=>'-');
end behav;

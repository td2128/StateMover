// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.1
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#include "memcachedPipeline_hashKeyResizer.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic memcachedPipeline_hashKeyResizer::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic memcachedPipeline_hashKeyResizer::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<1> memcachedPipeline_hashKeyResizer::ap_ST_st1_fsm0_0 = "1";
const sc_lv<2> memcachedPipeline_hashKeyResizer::ap_ST_st2_fsm1_1 = "10";
const sc_lv<2> memcachedPipeline_hashKeyResizer::ap_ST_st0_fsm1_0 = "1";
const sc_lv<32> memcachedPipeline_hashKeyResizer::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> memcachedPipeline_hashKeyResizer::ap_const_lv1_1 = "1";
const sc_lv<3> memcachedPipeline_hashKeyResizer::ap_const_lv3_4 = "100";
const sc_lv<1> memcachedPipeline_hashKeyResizer::ap_const_lv1_0 = "0";
const sc_lv<3> memcachedPipeline_hashKeyResizer::ap_const_lv3_2 = "10";
const sc_lv<3> memcachedPipeline_hashKeyResizer::ap_const_lv3_1 = "1";
const sc_lv<3> memcachedPipeline_hashKeyResizer::ap_const_lv3_0 = "000";
const sc_lv<3> memcachedPipeline_hashKeyResizer::ap_const_lv3_7 = "111";
const sc_lv<3> memcachedPipeline_hashKeyResizer::ap_const_lv3_6 = "110";
const sc_lv<3> memcachedPipeline_hashKeyResizer::ap_const_lv3_5 = "101";
const sc_lv<3> memcachedPipeline_hashKeyResizer::ap_const_lv3_3 = "11";
const sc_lv<32> memcachedPipeline_hashKeyResizer::ap_const_lv32_1 = "1";
const sc_lv<8> memcachedPipeline_hashKeyResizer::ap_const_lv8_0 = "00000000";
const sc_lv<128> memcachedPipeline_hashKeyResizer::ap_const_lv128_lc_1 = "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<96> memcachedPipeline_hashKeyResizer::ap_const_lv96_0 = "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> memcachedPipeline_hashKeyResizer::ap_const_lv32_D = "1101";
const sc_lv<32> memcachedPipeline_hashKeyResizer::ap_const_lv32_81 = "10000001";
const sc_lv<8> memcachedPipeline_hashKeyResizer::ap_const_lv8_F0 = "11110000";
const sc_lv<32> memcachedPipeline_hashKeyResizer::ap_const_lv32_20 = "100000";
const sc_lv<32> memcachedPipeline_hashKeyResizer::ap_const_lv32_7F = "1111111";
const sc_lv<32> memcachedPipeline_hashKeyResizer::ap_const_lv32_40 = "1000000";
const sc_lv<32> memcachedPipeline_hashKeyResizer::ap_const_lv32_60 = "1100000";
const sc_lv<8> memcachedPipeline_hashKeyResizer::ap_const_lv8_C = "1100";
const sc_lv<8> memcachedPipeline_hashKeyResizer::ap_const_lv8_4 = "100";
const sc_lv<8> memcachedPipeline_hashKeyResizer::ap_const_lv8_8 = "1000";
const sc_lv<32> memcachedPipeline_hashKeyResizer::ap_const_lv32_3F = "111111";
const sc_lv<32> memcachedPipeline_hashKeyResizer::ap_const_lv32_1F = "11111";
const sc_lv<64> memcachedPipeline_hashKeyResizer::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";

memcachedPipeline_hashKeyResizer::memcachedPipeline_hashKeyResizer(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_pos_reset_);
    dont_initialize();
    sensitive << ( ap_rst.pos() );
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_sig_bdd_156 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm1_1 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm0_0 );
    sensitive << ( ap_sig_cseq_ST_st0_fsm1_0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_sig_cseq_ST_st1_fsm0_0 );
    sensitive << ( ap_sig_bdd_82 );
    sensitive << ( ap_sig_bdd_156 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm1_1 );

    SC_METHOD(thread_ap_sig_bdd_156);
    sensitive << ( resizedKey_V_V_full_n );
    sensitive << ( keyResizerState_load_reg_513 );
    sensitive << ( tmp_65_reg_524 );
    sensitive << ( tmp_64_reg_538 );
    sensitive << ( tmp_63_reg_547 );
    sensitive << ( resizedKeyLength_V_full_n );
    sensitive << ( tmp_reg_556 );
    sensitive << ( tmp_66_reg_560 );
    sensitive << ( resizedInitValue_V_full_n );

    SC_METHOD(thread_ap_sig_bdd_162);
    sensitive << ( ap_CS_fsm1 );

    SC_METHOD(thread_ap_sig_bdd_23);
    sensitive << ( ap_CS_fsm0 );

    SC_METHOD(thread_ap_sig_bdd_34);
    sensitive << ( ap_CS_fsm1 );

    SC_METHOD(thread_ap_sig_bdd_452);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_sig_cseq_ST_st1_fsm0_0 );
    sensitive << ( grp_nbreadreq_fu_130_p3 );
    sensitive << ( ap_sig_bdd_82 );
    sensitive << ( ap_sig_bdd_156 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm1_1 );

    SC_METHOD(thread_ap_sig_bdd_71);
    sensitive << ( tmp_nbreadreq_fu_144_p3 );
    sensitive << ( keyResizerState );

    SC_METHOD(thread_ap_sig_bdd_82);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( in2hash_V_empty_n );
    sensitive << ( grp_nbreadreq_fu_130_p3 );
    sensitive << ( in2hashKeyLength_V_V_empty_n );
    sensitive << ( tmp_nbreadreq_fu_144_p3 );
    sensitive << ( keyResizerState );

    SC_METHOD(thread_ap_sig_cseq_ST_st0_fsm1_0);
    sensitive << ( ap_sig_bdd_34 );

    SC_METHOD(thread_ap_sig_cseq_ST_st1_fsm0_0);
    sensitive << ( ap_sig_bdd_23 );

    SC_METHOD(thread_ap_sig_cseq_ST_st2_fsm1_1);
    sensitive << ( ap_sig_bdd_162 );

    SC_METHOD(thread_grp_fu_187_p3);
    sensitive << ( in2hash_V_dout );

    SC_METHOD(thread_grp_fu_195_p3);
    sensitive << ( grp_fu_187_p3 );

    SC_METHOD(thread_grp_fu_209_p2);
    sensitive << ( keyResizerLength_V );

    SC_METHOD(thread_grp_fu_236_p4);
    sensitive << ( p_Val2_s_reg_517 );

    SC_METHOD(thread_grp_fu_245_p4);
    sensitive << ( p_Val2_s_reg_517 );

    SC_METHOD(thread_grp_nbreadreq_fu_130_p3);
    sensitive << ( in2hash_V_empty_n );

    SC_METHOD(thread_in2hashKeyLength_V_V_read);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_sig_cseq_ST_st1_fsm0_0 );
    sensitive << ( grp_nbreadreq_fu_130_p3 );
    sensitive << ( tmp_nbreadreq_fu_144_p3 );
    sensitive << ( ap_sig_bdd_82 );
    sensitive << ( ap_sig_bdd_156 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm1_1 );
    sensitive << ( keyResizerState );

    SC_METHOD(thread_in2hash_V_read);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_sig_cseq_ST_st1_fsm0_0 );
    sensitive << ( grp_nbreadreq_fu_130_p3 );
    sensitive << ( tmp_nbreadreq_fu_144_p3 );
    sensitive << ( ap_sig_bdd_82 );
    sensitive << ( ap_sig_bdd_156 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm1_1 );
    sensitive << ( keyResizerState );

    SC_METHOD(thread_keyResizerState_load_load_fu_254_p1);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm0_0 );
    sensitive << ( keyResizerState );

    SC_METHOD(thread_p_Result_59_fu_476_p3);
    sensitive << ( tmp_390_reg_542 );
    sensitive << ( grp_fu_236_p4 );

    SC_METHOD(thread_p_Result_60_fu_452_p5);
    sensitive << ( resizedKeyOutput_V );
    sensitive << ( grp_fu_245_p4 );

    SC_METHOD(thread_p_Result_61_fu_433_p5);
    sensitive << ( resizedKeyOutput_V );
    sensitive << ( grp_fu_236_p4 );

    SC_METHOD(thread_p_Result_s_fu_490_p3);
    sensitive << ( tmp_387_reg_551 );
    sensitive << ( grp_fu_245_p4 );

    SC_METHOD(thread_p_Val2_41_fu_361_p1);
    sensitive << ( in2hash_V_dout );

    SC_METHOD(thread_p_Val2_42_fu_319_p1);
    sensitive << ( in2hash_V_dout );

    SC_METHOD(thread_p_Val2_43_fu_267_p1);
    sensitive << ( in2hash_V_dout );

    SC_METHOD(thread_p_Val2_44_fu_409_p1);
    sensitive << ( in2hash_V_dout );

    SC_METHOD(thread_resizedInitValue_V_din);
    sensitive << ( ap_done_reg );
    sensitive << ( keyResizerState_load_reg_513 );
    sensitive << ( tmp_reg_556 );
    sensitive << ( tmp_66_reg_560 );
    sensitive << ( ap_sig_bdd_156 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm1_1 );

    SC_METHOD(thread_resizedInitValue_V_write);
    sensitive << ( ap_done_reg );
    sensitive << ( keyResizerState_load_reg_513 );
    sensitive << ( tmp_reg_556 );
    sensitive << ( tmp_66_reg_560 );
    sensitive << ( ap_sig_bdd_156 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm1_1 );

    SC_METHOD(thread_resizedKeyLength_V_din);
    sensitive << ( ap_done_reg );
    sensitive << ( keyResizerState_load_reg_513 );
    sensitive << ( tmp_reg_556 );
    sensitive << ( tmp_66_reg_560 );
    sensitive << ( ap_sig_bdd_156 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm1_1 );
    sensitive << ( tmp_V_96_reg_564 );

    SC_METHOD(thread_resizedKeyLength_V_write);
    sensitive << ( ap_done_reg );
    sensitive << ( keyResizerState_load_reg_513 );
    sensitive << ( tmp_reg_556 );
    sensitive << ( tmp_66_reg_560 );
    sensitive << ( ap_sig_bdd_156 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm1_1 );

    SC_METHOD(thread_resizedKey_V_V_din);
    sensitive << ( ap_done_reg );
    sensitive << ( keyResizerState_load_reg_513 );
    sensitive << ( tmp_65_reg_524 );
    sensitive << ( tmp_64_reg_538 );
    sensitive << ( tmp_63_reg_547 );
    sensitive << ( tmp_reg_556 );
    sensitive << ( tmp_66_reg_560 );
    sensitive << ( ap_sig_bdd_156 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm1_1 );
    sensitive << ( p_Val2_s_reg_517 );
    sensitive << ( tmp_V_95_reg_528 );
    sensitive << ( tmp_V_97_reg_569 );
    sensitive << ( p_Result_61_fu_433_p5 );
    sensitive << ( p_Result_60_fu_452_p5 );
    sensitive << ( p_Result_59_fu_476_p3 );
    sensitive << ( p_Result_s_fu_490_p3 );

    SC_METHOD(thread_resizedKey_V_V_write);
    sensitive << ( ap_done_reg );
    sensitive << ( keyResizerState_load_reg_513 );
    sensitive << ( tmp_65_reg_524 );
    sensitive << ( tmp_64_reg_538 );
    sensitive << ( tmp_63_reg_547 );
    sensitive << ( tmp_reg_556 );
    sensitive << ( tmp_66_reg_560 );
    sensitive << ( ap_sig_bdd_156 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm1_1 );

    SC_METHOD(thread_storemerge5_fu_305_p3);
    sensitive << ( tmp_285_fu_299_p2 );

    SC_METHOD(thread_storemerge6_fu_381_p3);
    sensitive << ( grp_fu_187_p3 );

    SC_METHOD(thread_storemerge7_fu_389_p3);
    sensitive << ( tmp_287_fu_375_p2 );
    sensitive << ( storemerge6_fu_381_p3 );

    SC_METHOD(thread_storemerge8_fu_339_p3);
    sensitive << ( grp_fu_187_p3 );

    SC_METHOD(thread_storemerge9_fu_347_p3);
    sensitive << ( tmp_289_fu_333_p2 );
    sensitive << ( storemerge8_fu_339_p3 );

    SC_METHOD(thread_tmp_285_fu_299_p2);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_sig_cseq_ST_st1_fsm0_0 );
    sensitive << ( keyResizerState_load_load_fu_254_p1 );
    sensitive << ( ap_sig_bdd_82 );
    sensitive << ( ap_sig_bdd_156 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm1_1 );
    sensitive << ( tmp_s_fu_287_p2 );

    SC_METHOD(thread_tmp_287_fu_375_p2);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_sig_cseq_ST_st1_fsm0_0 );
    sensitive << ( grp_nbreadreq_fu_130_p3 );
    sensitive << ( ap_sig_bdd_82 );
    sensitive << ( ap_sig_bdd_156 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm1_1 );
    sensitive << ( keyResizerState );
    sensitive << ( grp_fu_209_p2 );

    SC_METHOD(thread_tmp_289_fu_333_p2);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_sig_cseq_ST_st1_fsm0_0 );
    sensitive << ( grp_nbreadreq_fu_130_p3 );
    sensitive << ( ap_sig_bdd_82 );
    sensitive << ( ap_sig_bdd_156 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm1_1 );
    sensitive << ( keyResizerState );
    sensitive << ( grp_fu_209_p2 );

    SC_METHOD(thread_tmp_290_fu_281_p2);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_sig_cseq_ST_st1_fsm0_0 );
    sensitive << ( grp_nbreadreq_fu_130_p3 );
    sensitive << ( ap_sig_bdd_82 );
    sensitive << ( ap_sig_bdd_156 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm1_1 );
    sensitive << ( keyResizerState );
    sensitive << ( keyResizerLength_V );

    SC_METHOD(thread_tmp_291_fu_423_p2);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_sig_cseq_ST_st1_fsm0_0 );
    sensitive << ( grp_nbreadreq_fu_130_p3 );
    sensitive << ( in2hashKeyLength_V_V_dout );
    sensitive << ( tmp_nbreadreq_fu_144_p3 );
    sensitive << ( ap_sig_bdd_82 );
    sensitive << ( ap_sig_bdd_156 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm1_1 );
    sensitive << ( keyResizerState );

    SC_METHOD(thread_tmp_387_fu_371_p1);
    sensitive << ( in2hash_V_dout );

    SC_METHOD(thread_tmp_390_fu_329_p1);
    sensitive << ( in2hash_V_dout );

    SC_METHOD(thread_tmp_V_95_fu_277_p1);
    sensitive << ( in2hash_V_dout );

    SC_METHOD(thread_tmp_V_97_fu_419_p1);
    sensitive << ( in2hash_V_dout );

    SC_METHOD(thread_tmp_nbreadreq_fu_144_p3);
    sensitive << ( in2hashKeyLength_V_V_empty_n );

    SC_METHOD(thread_tmp_s_fu_287_p2);
    sensitive << ( keyResizerLength_V );

    SC_METHOD(thread_ap_NS_fsm0);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm0 );
    sensitive << ( ap_sig_bdd_82 );
    sensitive << ( ap_sig_bdd_156 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm1_1 );

    SC_METHOD(thread_ap_NS_fsm1);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_sig_cseq_ST_st1_fsm0_0 );
    sensitive << ( ap_CS_fsm1 );
    sensitive << ( ap_sig_bdd_82 );
    sensitive << ( ap_sig_bdd_156 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm1_1 );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm0 = "1";
    ap_CS_fsm1 = "01";
    keyResizerState_load_reg_513 = "000";
    tmp_65_reg_524 = "0";
    tmp_64_reg_538 = "0";
    tmp_63_reg_547 = "0";
    tmp_reg_556 = "0";
    tmp_66_reg_560 = "0";
    keyResizerState = "000";
    keyResizerLength_V = "00000000";
    tempInput_data_V = "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    resizedKeyOutput_V = "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    p_Val2_s_reg_517 = "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    tmp_V_95_reg_528 = "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    tmp_390_reg_542 = "00000000000000000000000000000000";
    tmp_387_reg_551 = "0000000000000000000000000000000000000000000000000000000000000000";
    tmp_V_96_reg_564 = "00000000";
    tmp_V_97_reg_569 = "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "memcachedPipeline_hashKeyResizer_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, in2hash_V_dout, "(port)in2hash_V_dout");
    sc_trace(mVcdFile, in2hash_V_empty_n, "(port)in2hash_V_empty_n");
    sc_trace(mVcdFile, in2hash_V_read, "(port)in2hash_V_read");
    sc_trace(mVcdFile, in2hashKeyLength_V_V_dout, "(port)in2hashKeyLength_V_V_dout");
    sc_trace(mVcdFile, in2hashKeyLength_V_V_empty_n, "(port)in2hashKeyLength_V_V_empty_n");
    sc_trace(mVcdFile, in2hashKeyLength_V_V_read, "(port)in2hashKeyLength_V_V_read");
    sc_trace(mVcdFile, resizedKey_V_V_din, "(port)resizedKey_V_V_din");
    sc_trace(mVcdFile, resizedKey_V_V_full_n, "(port)resizedKey_V_V_full_n");
    sc_trace(mVcdFile, resizedKey_V_V_write, "(port)resizedKey_V_V_write");
    sc_trace(mVcdFile, resizedKeyLength_V_din, "(port)resizedKeyLength_V_din");
    sc_trace(mVcdFile, resizedKeyLength_V_full_n, "(port)resizedKeyLength_V_full_n");
    sc_trace(mVcdFile, resizedKeyLength_V_write, "(port)resizedKeyLength_V_write");
    sc_trace(mVcdFile, resizedInitValue_V_din, "(port)resizedInitValue_V_din");
    sc_trace(mVcdFile, resizedInitValue_V_full_n, "(port)resizedInitValue_V_full_n");
    sc_trace(mVcdFile, resizedInitValue_V_write, "(port)resizedInitValue_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm0, "ap_CS_fsm0");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st1_fsm0_0, "ap_sig_cseq_ST_st1_fsm0_0");
    sc_trace(mVcdFile, ap_sig_bdd_23, "ap_sig_bdd_23");
    sc_trace(mVcdFile, ap_CS_fsm1, "ap_CS_fsm1");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st0_fsm1_0, "ap_sig_cseq_ST_st0_fsm1_0");
    sc_trace(mVcdFile, ap_sig_bdd_34, "ap_sig_bdd_34");
    sc_trace(mVcdFile, keyResizerState_load_load_fu_254_p1, "keyResizerState_load_load_fu_254_p1");
    sc_trace(mVcdFile, grp_nbreadreq_fu_130_p3, "grp_nbreadreq_fu_130_p3");
    sc_trace(mVcdFile, tmp_nbreadreq_fu_144_p3, "tmp_nbreadreq_fu_144_p3");
    sc_trace(mVcdFile, ap_sig_bdd_82, "ap_sig_bdd_82");
    sc_trace(mVcdFile, keyResizerState_load_reg_513, "keyResizerState_load_reg_513");
    sc_trace(mVcdFile, tmp_65_reg_524, "tmp_65_reg_524");
    sc_trace(mVcdFile, tmp_64_reg_538, "tmp_64_reg_538");
    sc_trace(mVcdFile, tmp_63_reg_547, "tmp_63_reg_547");
    sc_trace(mVcdFile, tmp_reg_556, "tmp_reg_556");
    sc_trace(mVcdFile, tmp_66_reg_560, "tmp_66_reg_560");
    sc_trace(mVcdFile, ap_sig_bdd_156, "ap_sig_bdd_156");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st2_fsm1_1, "ap_sig_cseq_ST_st2_fsm1_1");
    sc_trace(mVcdFile, ap_sig_bdd_162, "ap_sig_bdd_162");
    sc_trace(mVcdFile, keyResizerState, "keyResizerState");
    sc_trace(mVcdFile, keyResizerLength_V, "keyResizerLength_V");
    sc_trace(mVcdFile, tempInput_data_V, "tempInput_data_V");
    sc_trace(mVcdFile, resizedKeyOutput_V, "resizedKeyOutput_V");
    sc_trace(mVcdFile, p_Val2_s_reg_517, "p_Val2_s_reg_517");
    sc_trace(mVcdFile, tmp_V_95_fu_277_p1, "tmp_V_95_fu_277_p1");
    sc_trace(mVcdFile, tmp_V_95_reg_528, "tmp_V_95_reg_528");
    sc_trace(mVcdFile, tmp_290_fu_281_p2, "tmp_290_fu_281_p2");
    sc_trace(mVcdFile, tmp_390_fu_329_p1, "tmp_390_fu_329_p1");
    sc_trace(mVcdFile, tmp_390_reg_542, "tmp_390_reg_542");
    sc_trace(mVcdFile, tmp_387_fu_371_p1, "tmp_387_fu_371_p1");
    sc_trace(mVcdFile, tmp_387_reg_551, "tmp_387_reg_551");
    sc_trace(mVcdFile, tmp_V_96_reg_564, "tmp_V_96_reg_564");
    sc_trace(mVcdFile, tmp_V_97_fu_419_p1, "tmp_V_97_fu_419_p1");
    sc_trace(mVcdFile, tmp_V_97_reg_569, "tmp_V_97_reg_569");
    sc_trace(mVcdFile, tmp_291_fu_423_p2, "tmp_291_fu_423_p2");
    sc_trace(mVcdFile, p_Result_61_fu_433_p5, "p_Result_61_fu_433_p5");
    sc_trace(mVcdFile, p_Result_60_fu_452_p5, "p_Result_60_fu_452_p5");
    sc_trace(mVcdFile, p_Result_59_fu_476_p3, "p_Result_59_fu_476_p3");
    sc_trace(mVcdFile, p_Result_s_fu_490_p3, "p_Result_s_fu_490_p3");
    sc_trace(mVcdFile, grp_fu_195_p3, "grp_fu_195_p3");
    sc_trace(mVcdFile, storemerge5_fu_305_p3, "storemerge5_fu_305_p3");
    sc_trace(mVcdFile, storemerge9_fu_347_p3, "storemerge9_fu_347_p3");
    sc_trace(mVcdFile, storemerge7_fu_389_p3, "storemerge7_fu_389_p3");
    sc_trace(mVcdFile, tmp_s_fu_287_p2, "tmp_s_fu_287_p2");
    sc_trace(mVcdFile, grp_fu_209_p2, "grp_fu_209_p2");
    sc_trace(mVcdFile, p_Val2_43_fu_267_p1, "p_Val2_43_fu_267_p1");
    sc_trace(mVcdFile, p_Val2_42_fu_319_p1, "p_Val2_42_fu_319_p1");
    sc_trace(mVcdFile, p_Val2_41_fu_361_p1, "p_Val2_41_fu_361_p1");
    sc_trace(mVcdFile, p_Val2_44_fu_409_p1, "p_Val2_44_fu_409_p1");
    sc_trace(mVcdFile, grp_fu_187_p3, "grp_fu_187_p3");
    sc_trace(mVcdFile, tmp_285_fu_299_p2, "tmp_285_fu_299_p2");
    sc_trace(mVcdFile, tmp_289_fu_333_p2, "tmp_289_fu_333_p2");
    sc_trace(mVcdFile, storemerge8_fu_339_p3, "storemerge8_fu_339_p3");
    sc_trace(mVcdFile, tmp_287_fu_375_p2, "tmp_287_fu_375_p2");
    sc_trace(mVcdFile, storemerge6_fu_381_p3, "storemerge6_fu_381_p3");
    sc_trace(mVcdFile, grp_fu_236_p4, "grp_fu_236_p4");
    sc_trace(mVcdFile, grp_fu_245_p4, "grp_fu_245_p4");
    sc_trace(mVcdFile, ap_NS_fsm0, "ap_NS_fsm0");
    sc_trace(mVcdFile, ap_NS_fsm1, "ap_NS_fsm1");
    sc_trace(mVcdFile, ap_sig_bdd_71, "ap_sig_bdd_71");
    sc_trace(mVcdFile, ap_sig_bdd_452, "ap_sig_bdd_452");
#endif

    }
}

memcachedPipeline_hashKeyResizer::~memcachedPipeline_hashKeyResizer() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void memcachedPipeline_hashKeyResizer::thread_ap_clk_pos_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm0 = ap_ST_st1_fsm0_0;
    } else {
        ap_CS_fsm0 = ap_NS_fsm0.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm1 = ap_ST_st0_fsm1_0;
    } else {
        ap_CS_fsm1 = ap_NS_fsm1.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm1_1.read()) && 
                    !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || ap_sig_bdd_156.read()))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        keyResizerLength_V = ap_const_lv8_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm0_0.read()) && 
             !esl_seteq<1,1,1>(grp_nbreadreq_fu_130_p3.read(), ap_const_lv1_0) && 
             esl_seteq<1,3,3>(keyResizerState.read(), ap_const_lv3_0) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_nbreadreq_fu_144_p3.read()) && 
             !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || ap_sig_bdd_82.read() || (ap_sig_bdd_156.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm1_1.read()))))) {
            keyResizerLength_V = in2hashKeyLength_V_V_dout.read();
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm0_0.read()) && 
                     !esl_seteq<1,1,1>(grp_nbreadreq_fu_130_p3.read(), ap_const_lv1_0) && 
                     esl_seteq<1,3,3>(keyResizerState.read(), ap_const_lv3_2) && 
                     !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || ap_sig_bdd_82.read() || (ap_sig_bdd_156.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm1_1.read())))) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm0_0.read()) && 
                     !esl_seteq<1,1,1>(grp_nbreadreq_fu_130_p3.read(), ap_const_lv1_0) && 
                     esl_seteq<1,3,3>(keyResizerState.read(), ap_const_lv3_1) && 
                     !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || ap_sig_bdd_82.read() || (ap_sig_bdd_156.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm1_1.read())))))) {
            keyResizerLength_V = grp_fu_209_p2.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm0_0.read()) && 
                    !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || ap_sig_bdd_82.read() || (ap_sig_bdd_156.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm1_1.read()))) && 
                    esl_seteq<1,3,3>(keyResizerState_load_load_fu_254_p1.read(), ap_const_lv3_3))) {
            keyResizerLength_V = tmp_s_fu_287_p2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        keyResizerState = ap_const_lv3_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm0_0.read()) && 
             !esl_seteq<1,1,1>(grp_nbreadreq_fu_130_p3.read(), ap_const_lv1_0) && 
             esl_seteq<1,3,3>(keyResizerState.read(), ap_const_lv3_1) && 
             !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || ap_sig_bdd_82.read() || (ap_sig_bdd_156.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm1_1.read()))))) {
            keyResizerState = storemerge7_fu_389_p3.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm0_0.read()) && 
                    !esl_seteq<1,1,1>(grp_nbreadreq_fu_130_p3.read(), ap_const_lv1_0) && 
                    esl_seteq<1,3,3>(keyResizerState.read(), ap_const_lv3_2) && 
                    !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || ap_sig_bdd_82.read() || (ap_sig_bdd_156.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm1_1.read()))))) {
            keyResizerState = storemerge9_fu_347_p3.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm0_0.read()) && 
                    !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || ap_sig_bdd_82.read() || (ap_sig_bdd_156.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm1_1.read()))) && 
                    esl_seteq<1,3,3>(keyResizerState_load_load_fu_254_p1.read(), ap_const_lv3_3))) {
            keyResizerState = storemerge5_fu_305_p3.read();
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm0_0.read()) && 
                     esl_seteq<1,3,3>(keyResizerState.read(), ap_const_lv3_4) && 
                     !esl_seteq<1,1,1>(grp_nbreadreq_fu_130_p3.read(), ap_const_lv1_0) && 
                     !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || ap_sig_bdd_82.read() || (ap_sig_bdd_156.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm1_1.read()))) && 
                     !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_290_fu_281_p2.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm0_0.read()) && 
                     !esl_seteq<1,1,1>(grp_nbreadreq_fu_130_p3.read(), ap_const_lv1_0) && 
                     esl_seteq<1,3,3>(keyResizerState.read(), ap_const_lv3_0) && 
                     !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_nbreadreq_fu_144_p3.read()) && 
                     !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || ap_sig_bdd_82.read() || (ap_sig_bdd_156.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm1_1.read()))) && 
                     !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_291_fu_423_p2.read())))) {
            keyResizerState = grp_fu_195_p3.read();
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm0_0.read()) && 
                     !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || ap_sig_bdd_82.read() || (ap_sig_bdd_156.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm1_1.read()))) && 
                     esl_seteq<1,3,3>(keyResizerState_load_load_fu_254_p1.read(), ap_const_lv3_7)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm0_0.read()) && 
                     !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || ap_sig_bdd_82.read() || (ap_sig_bdd_156.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm1_1.read()))) && 
                     esl_seteq<1,3,3>(keyResizerState_load_load_fu_254_p1.read(), ap_const_lv3_6)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm0_0.read()) && 
                     !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || ap_sig_bdd_82.read() || (ap_sig_bdd_156.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm1_1.read()))) && 
                     esl_seteq<1,3,3>(keyResizerState_load_load_fu_254_p1.read(), ap_const_lv3_5)))) {
            keyResizerState = ap_const_lv3_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        keyResizerState_load_reg_513 = ap_const_lv3_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm0_0.read()) && 
             !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || ap_sig_bdd_82.read() || (ap_sig_bdd_156.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm1_1.read()))))) {
            keyResizerState_load_reg_513 = keyResizerState.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        p_Val2_s_reg_517 = ap_const_lv128_lc_1;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm0_0.read()) && 
             !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || ap_sig_bdd_82.read() || (ap_sig_bdd_156.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm1_1.read()))))) {
            p_Val2_s_reg_517 = tempInput_data_V.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        resizedKeyOutput_V = ap_const_lv96_0;
    } else {
        if ((esl_seteq<1,3,3>(ap_const_lv3_0, keyResizerState_load_reg_513.read()) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_556.read()) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_66_reg_560.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm1_1.read()) && 
             !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || ap_sig_bdd_156.read()))) {
            resizedKeyOutput_V = tmp_V_97_reg_569.read();
        } else if ((esl_seteq<1,3,3>(ap_const_lv3_1, keyResizerState_load_reg_513.read()) && 
                    !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_63_reg_547.read()) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm1_1.read()) && 
                    !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || ap_sig_bdd_156.read()))) {
            resizedKeyOutput_V = p_Result_s_fu_490_p3.read();
        } else if ((esl_seteq<1,3,3>(ap_const_lv3_2, keyResizerState_load_reg_513.read()) && 
                    !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_64_reg_538.read()) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm1_1.read()) && 
                    !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || ap_sig_bdd_156.read()))) {
            resizedKeyOutput_V = p_Result_59_fu_476_p3.read();
        } else if ((esl_seteq<1,3,3>(ap_const_lv3_4, keyResizerState_load_reg_513.read()) && 
                    !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_65_reg_524.read()) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm1_1.read()) && 
                    !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || ap_sig_bdd_156.read()))) {
            resizedKeyOutput_V = tmp_V_95_reg_528.read();
        } else if ((esl_seteq<1,3,3>(keyResizerState_load_reg_513.read(), ap_const_lv3_5) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm1_1.read()) && 
                    !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || ap_sig_bdd_156.read()))) {
            resizedKeyOutput_V = p_Result_60_fu_452_p5.read();
        } else if ((esl_seteq<1,3,3>(keyResizerState_load_reg_513.read(), ap_const_lv3_6) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm1_1.read()) && 
                    !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || ap_sig_bdd_156.read()))) {
            resizedKeyOutput_V = p_Result_61_fu_433_p5.read();
        } else if (((esl_seteq<1,3,3>(keyResizerState_load_reg_513.read(), ap_const_lv3_7) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm1_1.read()) && 
                     !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || ap_sig_bdd_156.read())) || 
                    (esl_seteq<1,3,3>(keyResizerState_load_reg_513.read(), ap_const_lv3_3) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm1_1.read()) && 
                     !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || ap_sig_bdd_156.read())))) {
            resizedKeyOutput_V = p_Val2_s_reg_517.read().range(127, 32);
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        tempInput_data_V = ap_const_lv128_lc_1;
    } else {
        if (ap_sig_bdd_452.read()) {
            if (ap_sig_bdd_71.read()) {
                tempInput_data_V = p_Val2_44_fu_409_p1.read();
            } else if (esl_seteq<1,3,3>(keyResizerState.read(), ap_const_lv3_1)) {
                tempInput_data_V = p_Val2_41_fu_361_p1.read();
            } else if (esl_seteq<1,3,3>(keyResizerState.read(), ap_const_lv3_2)) {
                tempInput_data_V = p_Val2_42_fu_319_p1.read();
            } else if (esl_seteq<1,3,3>(keyResizerState.read(), ap_const_lv3_4)) {
                tempInput_data_V = p_Val2_43_fu_267_p1.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        tmp_387_reg_551 = ap_const_lv64_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm0_0.read()) && 
             !esl_seteq<1,1,1>(grp_nbreadreq_fu_130_p3.read(), ap_const_lv1_0) && 
             esl_seteq<1,3,3>(keyResizerState.read(), ap_const_lv3_1) && 
             !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || ap_sig_bdd_82.read() || (ap_sig_bdd_156.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm1_1.read()))))) {
            tmp_387_reg_551 = tmp_387_fu_371_p1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        tmp_390_reg_542 = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm0_0.read()) && 
             !esl_seteq<1,1,1>(grp_nbreadreq_fu_130_p3.read(), ap_const_lv1_0) && 
             esl_seteq<1,3,3>(keyResizerState.read(), ap_const_lv3_2) && 
             !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || ap_sig_bdd_82.read() || (ap_sig_bdd_156.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm1_1.read()))))) {
            tmp_390_reg_542 = tmp_390_fu_329_p1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        tmp_63_reg_547 = ap_const_lv1_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm0_0.read()) && 
             esl_seteq<1,3,3>(keyResizerState.read(), ap_const_lv3_1) && 
             !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || ap_sig_bdd_82.read() || (ap_sig_bdd_156.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm1_1.read()))))) {
            tmp_63_reg_547 = grp_nbreadreq_fu_130_p3.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        tmp_64_reg_538 = ap_const_lv1_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm0_0.read()) && 
             esl_seteq<1,3,3>(keyResizerState.read(), ap_const_lv3_2) && 
             !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || ap_sig_bdd_82.read() || (ap_sig_bdd_156.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm1_1.read()))))) {
            tmp_64_reg_538 = grp_nbreadreq_fu_130_p3.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        tmp_65_reg_524 = ap_const_lv1_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm0_0.read()) && 
             esl_seteq<1,3,3>(keyResizerState.read(), ap_const_lv3_4) && 
             !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || ap_sig_bdd_82.read() || (ap_sig_bdd_156.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm1_1.read()))))) {
            tmp_65_reg_524 = grp_nbreadreq_fu_130_p3.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        tmp_66_reg_560 = ap_const_lv1_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm0_0.read()) && 
             esl_seteq<1,3,3>(keyResizerState.read(), ap_const_lv3_0) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_nbreadreq_fu_144_p3.read()) && 
             !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || ap_sig_bdd_82.read() || (ap_sig_bdd_156.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm1_1.read()))))) {
            tmp_66_reg_560 = grp_nbreadreq_fu_130_p3.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        tmp_V_95_reg_528 = ap_const_lv96_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm0_0.read()) && 
             esl_seteq<1,3,3>(keyResizerState.read(), ap_const_lv3_4) && 
             !esl_seteq<1,1,1>(grp_nbreadreq_fu_130_p3.read(), ap_const_lv1_0) && 
             !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || ap_sig_bdd_82.read() || (ap_sig_bdd_156.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm1_1.read()))))) {
            tmp_V_95_reg_528 = tmp_V_95_fu_277_p1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        tmp_V_96_reg_564 = ap_const_lv8_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm0_0.read()) && 
             !esl_seteq<1,1,1>(grp_nbreadreq_fu_130_p3.read(), ap_const_lv1_0) && 
             esl_seteq<1,3,3>(keyResizerState.read(), ap_const_lv3_0) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_nbreadreq_fu_144_p3.read()) && 
             !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || ap_sig_bdd_82.read() || (ap_sig_bdd_156.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm1_1.read()))))) {
            tmp_V_96_reg_564 = in2hashKeyLength_V_V_dout.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        tmp_V_97_reg_569 = ap_const_lv96_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm0_0.read()) && 
             !esl_seteq<1,1,1>(grp_nbreadreq_fu_130_p3.read(), ap_const_lv1_0) && 
             esl_seteq<1,3,3>(keyResizerState.read(), ap_const_lv3_0) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_nbreadreq_fu_144_p3.read()) && 
             !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || ap_sig_bdd_82.read() || (ap_sig_bdd_156.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm1_1.read()))))) {
            tmp_V_97_reg_569 = tmp_V_97_fu_419_p1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        tmp_reg_556 = ap_const_lv1_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm0_0.read()) && 
             esl_seteq<1,3,3>(keyResizerState.read(), ap_const_lv3_0) && 
             !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || ap_sig_bdd_82.read() || (ap_sig_bdd_156.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm1_1.read()))))) {
            tmp_reg_556 = tmp_nbreadreq_fu_144_p3.read();
        }
    }
}

void memcachedPipeline_hashKeyResizer::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_done_reg.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm1_1.read()) && 
          !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || ap_sig_bdd_156.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void memcachedPipeline_hashKeyResizer::thread_ap_idle() {
    if ((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm0_0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st0_fsm1_0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void memcachedPipeline_hashKeyResizer::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm0_0.read()) && 
         !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || ap_sig_bdd_82.read() || (ap_sig_bdd_156.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm1_1.read()))))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void memcachedPipeline_hashKeyResizer::thread_ap_sig_bdd_156() {
    ap_sig_bdd_156 = ((esl_seteq<1,1,1>(resizedKey_V_V_full_n.read(), ap_const_logic_0) && 
  esl_seteq<1,3,3>(keyResizerState_load_reg_513.read(), ap_const_lv3_7)) || (esl_seteq<1,1,1>(resizedKey_V_V_full_n.read(), ap_const_logic_0) && 
  esl_seteq<1,3,3>(keyResizerState_load_reg_513.read(), ap_const_lv3_6)) || (esl_seteq<1,1,1>(resizedKey_V_V_full_n.read(), ap_const_logic_0) && 
  esl_seteq<1,3,3>(keyResizerState_load_reg_513.read(), ap_const_lv3_5)) || (esl_seteq<1,1,1>(resizedKey_V_V_full_n.read(), ap_const_logic_0) && 
  esl_seteq<1,3,3>(ap_const_lv3_4, keyResizerState_load_reg_513.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_65_reg_524.read())) || (esl_seteq<1,1,1>(resizedKey_V_V_full_n.read(), ap_const_logic_0) && 
  esl_seteq<1,3,3>(keyResizerState_load_reg_513.read(), ap_const_lv3_3)) || (esl_seteq<1,1,1>(resizedKey_V_V_full_n.read(), ap_const_logic_0) && 
  esl_seteq<1,3,3>(ap_const_lv3_2, keyResizerState_load_reg_513.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_64_reg_538.read())) || (esl_seteq<1,1,1>(resizedKey_V_V_full_n.read(), ap_const_logic_0) && 
  esl_seteq<1,3,3>(ap_const_lv3_1, keyResizerState_load_reg_513.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_63_reg_547.read())) || (esl_seteq<1,1,1>(resizedKeyLength_V_full_n.read(), ap_const_logic_0) && 
  esl_seteq<1,3,3>(ap_const_lv3_0, keyResizerState_load_reg_513.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_556.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_66_reg_560.read())) || (esl_seteq<1,3,3>(ap_const_lv3_0, keyResizerState_load_reg_513.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_556.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_66_reg_560.read()) && 
  esl_seteq<1,1,1>(resizedInitValue_V_full_n.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(resizedKey_V_V_full_n.read(), ap_const_logic_0) && 
  esl_seteq<1,3,3>(ap_const_lv3_0, keyResizerState_load_reg_513.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_556.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_66_reg_560.read())));
}

void memcachedPipeline_hashKeyResizer::thread_ap_sig_bdd_162() {
    ap_sig_bdd_162 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm1.read().range(1, 1));
}

void memcachedPipeline_hashKeyResizer::thread_ap_sig_bdd_23() {
    ap_sig_bdd_23 = esl_seteq<1,1,1>(ap_CS_fsm0.read().range(0, 0), ap_const_lv1_1);
}

void memcachedPipeline_hashKeyResizer::thread_ap_sig_bdd_34() {
    ap_sig_bdd_34 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm1.read().range(0, 0));
}

void memcachedPipeline_hashKeyResizer::thread_ap_sig_bdd_452() {
    ap_sig_bdd_452 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm0_0.read()) && !esl_seteq<1,1,1>(grp_nbreadreq_fu_130_p3.read(), ap_const_lv1_0) && !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || ap_sig_bdd_82.read() || (ap_sig_bdd_156.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm1_1.read()))));
}

void memcachedPipeline_hashKeyResizer::thread_ap_sig_bdd_71() {
    ap_sig_bdd_71 = (esl_seteq<1,3,3>(keyResizerState.read(), ap_const_lv3_0) && !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_nbreadreq_fu_144_p3.read()));
}

void memcachedPipeline_hashKeyResizer::thread_ap_sig_bdd_82() {
    ap_sig_bdd_82 = ((esl_seteq<1,1,1>(in2hash_V_empty_n.read(), ap_const_logic_0) && 
  esl_seteq<1,3,3>(keyResizerState.read(), ap_const_lv3_4) && 
  !esl_seteq<1,1,1>(grp_nbreadreq_fu_130_p3.read(), ap_const_lv1_0)) || (esl_seteq<1,1,1>(in2hash_V_empty_n.read(), ap_const_logic_0) && 
  !esl_seteq<1,1,1>(grp_nbreadreq_fu_130_p3.read(), ap_const_lv1_0) && 
  esl_seteq<1,3,3>(keyResizerState.read(), ap_const_lv3_2)) || (esl_seteq<1,1,1>(in2hash_V_empty_n.read(), ap_const_logic_0) && 
  !esl_seteq<1,1,1>(grp_nbreadreq_fu_130_p3.read(), ap_const_lv1_0) && 
  esl_seteq<1,3,3>(keyResizerState.read(), ap_const_lv3_1)) || (!esl_seteq<1,1,1>(grp_nbreadreq_fu_130_p3.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(in2hashKeyLength_V_V_empty_n.read(), ap_const_logic_0) && 
  esl_seteq<1,3,3>(keyResizerState.read(), ap_const_lv3_0) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_nbreadreq_fu_144_p3.read())) || (esl_seteq<1,1,1>(in2hash_V_empty_n.read(), ap_const_logic_0) && 
  !esl_seteq<1,1,1>(grp_nbreadreq_fu_130_p3.read(), ap_const_lv1_0) && 
  esl_seteq<1,3,3>(keyResizerState.read(), ap_const_lv3_0) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_nbreadreq_fu_144_p3.read())) || esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void memcachedPipeline_hashKeyResizer::thread_ap_sig_cseq_ST_st0_fsm1_0() {
    if (ap_sig_bdd_34.read()) {
        ap_sig_cseq_ST_st0_fsm1_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st0_fsm1_0 = ap_const_logic_0;
    }
}

void memcachedPipeline_hashKeyResizer::thread_ap_sig_cseq_ST_st1_fsm0_0() {
    if (ap_sig_bdd_23.read()) {
        ap_sig_cseq_ST_st1_fsm0_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st1_fsm0_0 = ap_const_logic_0;
    }
}

void memcachedPipeline_hashKeyResizer::thread_ap_sig_cseq_ST_st2_fsm1_1() {
    if (ap_sig_bdd_162.read()) {
        ap_sig_cseq_ST_st2_fsm1_1 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st2_fsm1_1 = ap_const_logic_0;
    }
}

void memcachedPipeline_hashKeyResizer::thread_grp_fu_187_p3() {
    grp_fu_187_p3 = in2hash_V_dout.read().range(129, 129);
}

void memcachedPipeline_hashKeyResizer::thread_grp_fu_195_p3() {
    grp_fu_195_p3 = (!grp_fu_187_p3.read()[0].is_01())? sc_lv<3>(): ((grp_fu_187_p3.read()[0].to_bool())? ap_const_lv3_5: ap_const_lv3_1);
}

void memcachedPipeline_hashKeyResizer::thread_grp_fu_209_p2() {
    grp_fu_209_p2 = (!ap_const_lv8_F0.is_01() || !keyResizerLength_V.read().is_01())? sc_lv<8>(): (sc_bigint<8>(ap_const_lv8_F0) + sc_biguint<8>(keyResizerLength_V.read()));
}

void memcachedPipeline_hashKeyResizer::thread_grp_fu_236_p4() {
    grp_fu_236_p4 = p_Val2_s_reg_517.read().range(127, 64);
}

void memcachedPipeline_hashKeyResizer::thread_grp_fu_245_p4() {
    grp_fu_245_p4 = p_Val2_s_reg_517.read().range(127, 96);
}

void memcachedPipeline_hashKeyResizer::thread_grp_nbreadreq_fu_130_p3() {
    grp_nbreadreq_fu_130_p3 =  (sc_lv<1>) (in2hash_V_empty_n.read());
}

void memcachedPipeline_hashKeyResizer::thread_in2hashKeyLength_V_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm0_0.read()) && 
         !esl_seteq<1,1,1>(grp_nbreadreq_fu_130_p3.read(), ap_const_lv1_0) && 
         esl_seteq<1,3,3>(keyResizerState.read(), ap_const_lv3_0) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_nbreadreq_fu_144_p3.read()) && 
         !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || ap_sig_bdd_82.read() || (ap_sig_bdd_156.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm1_1.read()))))) {
        in2hashKeyLength_V_V_read = ap_const_logic_1;
    } else {
        in2hashKeyLength_V_V_read = ap_const_logic_0;
    }
}

void memcachedPipeline_hashKeyResizer::thread_in2hash_V_read() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm0_0.read()) && 
          esl_seteq<1,3,3>(keyResizerState.read(), ap_const_lv3_4) && 
          !esl_seteq<1,1,1>(grp_nbreadreq_fu_130_p3.read(), ap_const_lv1_0) && 
          !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || ap_sig_bdd_82.read() || (ap_sig_bdd_156.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm1_1.read())))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm0_0.read()) && 
          !esl_seteq<1,1,1>(grp_nbreadreq_fu_130_p3.read(), ap_const_lv1_0) && 
          esl_seteq<1,3,3>(keyResizerState.read(), ap_const_lv3_2) && 
          !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || ap_sig_bdd_82.read() || (ap_sig_bdd_156.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm1_1.read())))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm0_0.read()) && 
          !esl_seteq<1,1,1>(grp_nbreadreq_fu_130_p3.read(), ap_const_lv1_0) && 
          esl_seteq<1,3,3>(keyResizerState.read(), ap_const_lv3_1) && 
          !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || ap_sig_bdd_82.read() || (ap_sig_bdd_156.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm1_1.read())))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm0_0.read()) && 
          !esl_seteq<1,1,1>(grp_nbreadreq_fu_130_p3.read(), ap_const_lv1_0) && 
          esl_seteq<1,3,3>(keyResizerState.read(), ap_const_lv3_0) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_nbreadreq_fu_144_p3.read()) && 
          !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || ap_sig_bdd_82.read() || (ap_sig_bdd_156.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm1_1.read())))))) {
        in2hash_V_read = ap_const_logic_1;
    } else {
        in2hash_V_read = ap_const_logic_0;
    }
}

void memcachedPipeline_hashKeyResizer::thread_keyResizerState_load_load_fu_254_p1() {
    keyResizerState_load_load_fu_254_p1 = keyResizerState.read();
}

void memcachedPipeline_hashKeyResizer::thread_p_Result_59_fu_476_p3() {
    p_Result_59_fu_476_p3 = esl_concat<32,64>(tmp_390_reg_542.read(), grp_fu_236_p4.read());
}

void memcachedPipeline_hashKeyResizer::thread_p_Result_60_fu_452_p5() {
    p_Result_60_fu_452_p5 = esl_partset<96,96,32,32,32>(resizedKeyOutput_V.read(), grp_fu_245_p4.read(), ap_const_lv32_0, ap_const_lv32_1F);
}

void memcachedPipeline_hashKeyResizer::thread_p_Result_61_fu_433_p5() {
    p_Result_61_fu_433_p5 = esl_partset<96,96,64,32,32>(resizedKeyOutput_V.read(), grp_fu_236_p4.read(), ap_const_lv32_0, ap_const_lv32_3F);
}

void memcachedPipeline_hashKeyResizer::thread_p_Result_s_fu_490_p3() {
    p_Result_s_fu_490_p3 = esl_concat<64,32>(tmp_387_reg_551.read(), grp_fu_245_p4.read());
}

void memcachedPipeline_hashKeyResizer::thread_p_Val2_41_fu_361_p1() {
    p_Val2_41_fu_361_p1 = in2hash_V_dout.read().range(128-1, 0);
}

void memcachedPipeline_hashKeyResizer::thread_p_Val2_42_fu_319_p1() {
    p_Val2_42_fu_319_p1 = in2hash_V_dout.read().range(128-1, 0);
}

void memcachedPipeline_hashKeyResizer::thread_p_Val2_43_fu_267_p1() {
    p_Val2_43_fu_267_p1 = in2hash_V_dout.read().range(128-1, 0);
}

void memcachedPipeline_hashKeyResizer::thread_p_Val2_44_fu_409_p1() {
    p_Val2_44_fu_409_p1 = in2hash_V_dout.read().range(128-1, 0);
}

void memcachedPipeline_hashKeyResizer::thread_resizedInitValue_V_din() {
    resizedInitValue_V_din = ap_const_lv32_D;
}

void memcachedPipeline_hashKeyResizer::thread_resizedInitValue_V_write() {
    if ((esl_seteq<1,3,3>(ap_const_lv3_0, keyResizerState_load_reg_513.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_556.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_66_reg_560.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm1_1.read()) && 
         !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || ap_sig_bdd_156.read()))) {
        resizedInitValue_V_write = ap_const_logic_1;
    } else {
        resizedInitValue_V_write = ap_const_logic_0;
    }
}

void memcachedPipeline_hashKeyResizer::thread_resizedKeyLength_V_din() {
    resizedKeyLength_V_din = esl_zext<32,8>(tmp_V_96_reg_564.read());
}

void memcachedPipeline_hashKeyResizer::thread_resizedKeyLength_V_write() {
    if ((esl_seteq<1,3,3>(ap_const_lv3_0, keyResizerState_load_reg_513.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_556.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_66_reg_560.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm1_1.read()) && 
         !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || ap_sig_bdd_156.read()))) {
        resizedKeyLength_V_write = ap_const_logic_1;
    } else {
        resizedKeyLength_V_write = ap_const_logic_0;
    }
}

void memcachedPipeline_hashKeyResizer::thread_resizedKey_V_V_din() {
    if ((esl_seteq<1,3,3>(ap_const_lv3_0, keyResizerState_load_reg_513.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_556.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_66_reg_560.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm1_1.read()) && 
         !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || ap_sig_bdd_156.read()))) {
        resizedKey_V_V_din = tmp_V_97_reg_569.read();
    } else if ((esl_seteq<1,3,3>(ap_const_lv3_1, keyResizerState_load_reg_513.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_63_reg_547.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm1_1.read()) && 
                !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || ap_sig_bdd_156.read()))) {
        resizedKey_V_V_din = p_Result_s_fu_490_p3.read();
    } else if ((esl_seteq<1,3,3>(ap_const_lv3_2, keyResizerState_load_reg_513.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_64_reg_538.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm1_1.read()) && 
                !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || ap_sig_bdd_156.read()))) {
        resizedKey_V_V_din = p_Result_59_fu_476_p3.read();
    } else if ((esl_seteq<1,3,3>(ap_const_lv3_4, keyResizerState_load_reg_513.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_65_reg_524.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm1_1.read()) && 
                !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || ap_sig_bdd_156.read()))) {
        resizedKey_V_V_din = tmp_V_95_reg_528.read();
    } else if ((esl_seteq<1,3,3>(keyResizerState_load_reg_513.read(), ap_const_lv3_5) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm1_1.read()) && 
                !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || ap_sig_bdd_156.read()))) {
        resizedKey_V_V_din = p_Result_60_fu_452_p5.read();
    } else if ((esl_seteq<1,3,3>(keyResizerState_load_reg_513.read(), ap_const_lv3_6) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm1_1.read()) && 
                !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || ap_sig_bdd_156.read()))) {
        resizedKey_V_V_din = p_Result_61_fu_433_p5.read();
    } else if (((esl_seteq<1,3,3>(keyResizerState_load_reg_513.read(), ap_const_lv3_7) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm1_1.read()) && 
                 !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || ap_sig_bdd_156.read())) || 
                (esl_seteq<1,3,3>(keyResizerState_load_reg_513.read(), ap_const_lv3_3) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm1_1.read()) && 
                 !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || ap_sig_bdd_156.read())))) {
        resizedKey_V_V_din = p_Val2_s_reg_517.read().range(127, 32);
    } else {
        resizedKey_V_V_din = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void memcachedPipeline_hashKeyResizer::thread_resizedKey_V_V_write() {
    if (((esl_seteq<1,3,3>(keyResizerState_load_reg_513.read(), ap_const_lv3_7) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm1_1.read()) && 
          !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || ap_sig_bdd_156.read())) || 
         (esl_seteq<1,3,3>(keyResizerState_load_reg_513.read(), ap_const_lv3_6) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm1_1.read()) && 
          !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || ap_sig_bdd_156.read())) || 
         (esl_seteq<1,3,3>(keyResizerState_load_reg_513.read(), ap_const_lv3_5) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm1_1.read()) && 
          !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || ap_sig_bdd_156.read())) || 
         (esl_seteq<1,3,3>(ap_const_lv3_4, keyResizerState_load_reg_513.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_65_reg_524.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm1_1.read()) && 
          !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || ap_sig_bdd_156.read())) || 
         (esl_seteq<1,3,3>(keyResizerState_load_reg_513.read(), ap_const_lv3_3) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm1_1.read()) && 
          !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || ap_sig_bdd_156.read())) || 
         (esl_seteq<1,3,3>(ap_const_lv3_2, keyResizerState_load_reg_513.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_64_reg_538.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm1_1.read()) && 
          !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || ap_sig_bdd_156.read())) || 
         (esl_seteq<1,3,3>(ap_const_lv3_1, keyResizerState_load_reg_513.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_63_reg_547.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm1_1.read()) && 
          !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || ap_sig_bdd_156.read())) || 
         (esl_seteq<1,3,3>(ap_const_lv3_0, keyResizerState_load_reg_513.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_556.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_66_reg_560.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm1_1.read()) && 
          !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || ap_sig_bdd_156.read())))) {
        resizedKey_V_V_write = ap_const_logic_1;
    } else {
        resizedKey_V_V_write = ap_const_logic_0;
    }
}

void memcachedPipeline_hashKeyResizer::thread_storemerge5_fu_305_p3() {
    storemerge5_fu_305_p3 = (!tmp_285_fu_299_p2.read()[0].is_01())? sc_lv<3>(): ((tmp_285_fu_299_p2.read()[0].to_bool())? ap_const_lv3_0: ap_const_lv3_4);
}

void memcachedPipeline_hashKeyResizer::thread_storemerge6_fu_381_p3() {
    storemerge6_fu_381_p3 = (!grp_fu_187_p3.read()[0].is_01())? sc_lv<3>(): ((grp_fu_187_p3.read()[0].to_bool())? ap_const_lv3_6: ap_const_lv3_2);
}

void memcachedPipeline_hashKeyResizer::thread_storemerge7_fu_389_p3() {
    storemerge7_fu_389_p3 = (!tmp_287_fu_375_p2.read()[0].is_01())? sc_lv<3>(): ((tmp_287_fu_375_p2.read()[0].to_bool())? storemerge6_fu_381_p3.read(): ap_const_lv3_0);
}

void memcachedPipeline_hashKeyResizer::thread_storemerge8_fu_339_p3() {
    storemerge8_fu_339_p3 = (!grp_fu_187_p3.read()[0].is_01())? sc_lv<3>(): ((grp_fu_187_p3.read()[0].to_bool())? ap_const_lv3_7: ap_const_lv3_3);
}

void memcachedPipeline_hashKeyResizer::thread_storemerge9_fu_347_p3() {
    storemerge9_fu_347_p3 = (!tmp_289_fu_333_p2.read()[0].is_01())? sc_lv<3>(): ((tmp_289_fu_333_p2.read()[0].to_bool())? storemerge8_fu_339_p3.read(): ap_const_lv3_0);
}

void memcachedPipeline_hashKeyResizer::thread_tmp_285_fu_299_p2() {
    tmp_285_fu_299_p2 = (!tmp_s_fu_287_p2.read().is_01() || !ap_const_lv8_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_s_fu_287_p2.read() == ap_const_lv8_0);
}

void memcachedPipeline_hashKeyResizer::thread_tmp_287_fu_375_p2() {
    tmp_287_fu_375_p2 = (!grp_fu_209_p2.read().is_01() || !ap_const_lv8_8.is_01())? sc_lv<1>(): (sc_biguint<8>(grp_fu_209_p2.read()) > sc_biguint<8>(ap_const_lv8_8));
}

void memcachedPipeline_hashKeyResizer::thread_tmp_289_fu_333_p2() {
    tmp_289_fu_333_p2 = (!grp_fu_209_p2.read().is_01() || !ap_const_lv8_4.is_01())? sc_lv<1>(): (sc_biguint<8>(grp_fu_209_p2.read()) > sc_biguint<8>(ap_const_lv8_4));
}

void memcachedPipeline_hashKeyResizer::thread_tmp_290_fu_281_p2() {
    tmp_290_fu_281_p2 = (!keyResizerLength_V.read().is_01() || !ap_const_lv8_C.is_01())? sc_lv<1>(): (sc_biguint<8>(keyResizerLength_V.read()) > sc_biguint<8>(ap_const_lv8_C));
}

void memcachedPipeline_hashKeyResizer::thread_tmp_291_fu_423_p2() {
    tmp_291_fu_423_p2 = (!in2hashKeyLength_V_V_dout.read().is_01() || !ap_const_lv8_C.is_01())? sc_lv<1>(): (sc_biguint<8>(in2hashKeyLength_V_V_dout.read()) > sc_biguint<8>(ap_const_lv8_C));
}

void memcachedPipeline_hashKeyResizer::thread_tmp_387_fu_371_p1() {
    tmp_387_fu_371_p1 = in2hash_V_dout.read().range(64-1, 0);
}

void memcachedPipeline_hashKeyResizer::thread_tmp_390_fu_329_p1() {
    tmp_390_fu_329_p1 = in2hash_V_dout.read().range(32-1, 0);
}

void memcachedPipeline_hashKeyResizer::thread_tmp_V_95_fu_277_p1() {
    tmp_V_95_fu_277_p1 = in2hash_V_dout.read().range(96-1, 0);
}

void memcachedPipeline_hashKeyResizer::thread_tmp_V_97_fu_419_p1() {
    tmp_V_97_fu_419_p1 = in2hash_V_dout.read().range(96-1, 0);
}

void memcachedPipeline_hashKeyResizer::thread_tmp_nbreadreq_fu_144_p3() {
    tmp_nbreadreq_fu_144_p3 =  (sc_lv<1>) (in2hashKeyLength_V_V_empty_n.read());
}

void memcachedPipeline_hashKeyResizer::thread_tmp_s_fu_287_p2() {
    tmp_s_fu_287_p2 = (!keyResizerLength_V.read().is_01() || !ap_const_lv8_F0.is_01())? sc_lv<8>(): (sc_biguint<8>(keyResizerLength_V.read()) + sc_bigint<8>(ap_const_lv8_F0));
}

void memcachedPipeline_hashKeyResizer::thread_ap_NS_fsm0() {
    switch (ap_CS_fsm0.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm0 = ap_ST_st1_fsm0_0;
break;
        default : 
            ap_NS_fsm0 =  (sc_lv<1>) ("X");
            break;
    }
}

void memcachedPipeline_hashKeyResizer::thread_ap_NS_fsm1() {
    switch (ap_CS_fsm1.read().to_uint64()) {
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm0_0.read()) && !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || ap_sig_bdd_156.read()) && !ap_sig_bdd_82.read())) {
                ap_NS_fsm1 = ap_ST_st2_fsm1_1;
            } else if ((!(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || ap_sig_bdd_156.read()) && (!esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm0_0.read()) || 
  (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm0_0.read()) && 
   ap_sig_bdd_82.read())))) {
                ap_NS_fsm1 = ap_ST_st0_fsm1_0;
            } else {
                ap_NS_fsm1 = ap_ST_st2_fsm1_1;
            }
            break;
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm0_0.read()) && !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || ap_sig_bdd_82.read() || (ap_sig_bdd_156.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm1_1.read()))))) {
                ap_NS_fsm1 = ap_ST_st2_fsm1_1;
            } else {
                ap_NS_fsm1 = ap_ST_st0_fsm1_0;
            }
            break;
        default : 
            ap_NS_fsm1 =  (sc_lv<2>) ("XX");
            break;
    }
}

}


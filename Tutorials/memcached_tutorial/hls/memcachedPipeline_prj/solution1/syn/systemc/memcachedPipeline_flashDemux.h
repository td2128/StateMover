// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.1
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _memcachedPipeline_flashDemux_HH_
#define _memcachedPipeline_flashDemux_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct memcachedPipeline_flashDemux : public sc_module {
    // Port declarations 25
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<256> > splitter2valueStoreFlash_V_dout;
    sc_in< sc_logic > splitter2valueStoreFlash_V_empty_n;
    sc_out< sc_logic > splitter2valueStoreFlash_V_read;
    sc_out< sc_lv<128> > flashMetadataBuffer_V_din;
    sc_in< sc_logic > flashMetadataBuffer_V_full_n;
    sc_out< sc_logic > flashMetadataBuffer_V_write;
    sc_out< sc_lv<64> > flashKeyBuffer_V_V_din;
    sc_in< sc_logic > flashKeyBuffer_V_V_full_n;
    sc_out< sc_logic > flashKeyBuffer_V_V_write;
    sc_out< sc_lv<66> > flashDemux2setPathValue_V_din;
    sc_in< sc_logic > flashDemux2setPathValue_V_full_n;
    sc_out< sc_logic > flashDemux2setPathValue_V_write;
    sc_out< sc_lv<48> > flashDemux2setPathMetadata_V_din;
    sc_in< sc_logic > flashDemux2setPathMetadata_V_full_n;
    sc_out< sc_logic > flashDemux2setPathMetadata_V_write;
    sc_out< sc_lv<48> > flashDemux2getPath_V_din;
    sc_in< sc_logic > flashDemux2getPath_V_full_n;
    sc_out< sc_logic > flashDemux2getPath_V_write;


    // Module declarations
    memcachedPipeline_flashDemux(sc_module_name name);
    SC_HAS_PROCESS(memcachedPipeline_flashDemux);

    ~memcachedPipeline_flashDemux();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<1> > ap_CS_fsm0;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm0_0;
    sc_signal< bool > ap_sig_bdd_23;
    sc_signal< sc_lv<2> > ap_CS_fsm1;
    sc_signal< sc_logic > ap_sig_cseq_ST_st0_fsm1_0;
    sc_signal< bool > ap_sig_bdd_34;
    sc_signal< sc_lv<1> > grp_nbreadreq_fu_202_p3;
    sc_signal< bool > ap_sig_bdd_65;
    sc_signal< sc_lv<2> > flashDemuxState_load_reg_606;
    sc_signal< sc_lv<1> > tmp_17_reg_622;
    sc_signal< sc_lv<1> > metadataWrWord_keyValid_V_3_reg_610;
    sc_signal< sc_lv<1> > metadataWrWord_valueValid_V_reg_614;
    sc_signal< sc_lv<1> > tmp_reg_631;
    sc_signal< sc_lv<1> > tmp_23_reg_643;
    sc_signal< sc_lv<1> > metadataWrWord_keyValid_V_2_reg_635;
    sc_signal< sc_lv<1> > tmp_3_reg_652;
    sc_signal< sc_lv<1> > metadataWrWord_SOP_V_reg_663;
    sc_signal< sc_lv<1> > tmp_25_reg_671;
    sc_signal< sc_lv<1> > tmp_29_reg_675;
    sc_signal< sc_lv<1> > tmp_6_reg_679;
    sc_signal< sc_lv<1> > tmp_1_reg_683;
    sc_signal< sc_lv<1> > metadataWrWord_keyValid_V_reg_667;
    sc_signal< sc_lv<1> > tmp_s_reg_687;
    sc_signal< bool > ap_sig_bdd_199;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm1_1;
    sc_signal< bool > ap_sig_bdd_205;
    sc_signal< sc_lv<2> > flashDemuxState;
    sc_signal< sc_lv<2> > flashWordCounter_V;
    sc_signal< sc_lv<16> > flashDemuxValueLength_V;
    sc_signal< sc_lv<64> > reg_353;
    sc_signal< sc_lv<64> > reg_357;
    sc_signal< sc_lv<3> > reg_362;
    sc_signal< sc_lv<1> > metadataWrWord_SOP_V_fu_404_p3;
    sc_signal< sc_lv<1> > tmp_25_fu_418_p3;
    sc_signal< sc_lv<1> > tmp_29_fu_448_p2;
    sc_signal< sc_lv<1> > tmp_6_fu_454_p2;
    sc_signal< sc_lv<1> > tmp_1_fu_460_p2;
    sc_signal< sc_lv<32> > reg_366;
    sc_signal< sc_lv<16> > reg_370;
    sc_signal< sc_lv<1> > grp_fu_257_p3;
    sc_signal< sc_lv<1> > grp_fu_265_p3;
    sc_signal< sc_lv<1> > grp_fu_293_p3;
    sc_signal< sc_lv<128> > tmp_10312_fu_392_p1;
    sc_signal< sc_lv<128> > tmp_10312_reg_626;
    sc_signal< sc_lv<128> > tmp_8410_fu_396_p1;
    sc_signal< sc_lv<128> > tmp_8410_reg_647;
    sc_signal< sc_lv<124> > p_Val2_s_fu_400_p1;
    sc_signal< sc_lv<124> > p_Val2_s_reg_656;
    sc_signal< sc_lv<1> > tmp_s_fu_482_p2;
    sc_signal< sc_lv<1> > ap_reg_phiprechg_tmp_EOP_V_3_reg_245pp0_it1;
    sc_signal< sc_lv<1> > tmp_9_fu_492_p2;
    sc_signal< sc_lv<1> > tmp_EOP_V_3_phi_fu_248_p4;
    sc_signal< sc_lv<128> > tmp_4352_fu_521_p4;
    sc_signal< sc_lv<128> > tmp_2331_fu_577_p4;
    sc_signal< sc_lv<128> > tmp_1301_fu_596_p4;
    sc_signal< sc_lv<66> > tmp_11323_fu_510_p4;
    sc_signal< sc_lv<66> > tmp_6373_fu_566_p4;
    sc_signal< sc_lv<2> > grp_fu_300_p2;
    sc_signal< sc_lv<16> > tmp_5_fu_498_p2;
    sc_signal< sc_lv<16> > tmp_length_V_2_fu_552_p3;
    sc_signal< sc_lv<8> > p_Result_s_fu_426_p4;
    sc_signal< sc_lv<1> > tmp_28_fu_442_p2;
    sc_signal< sc_lv<1> > tmp_27_fu_436_p2;
    sc_signal< sc_lv<8> > p_Result_2_fu_472_p4;
    sc_signal< sc_lv<1> > tmp_EOP_V_4_fu_540_p2;
    sc_signal< sc_lv<16> > tmp_11_fu_546_p2;
    sc_signal< sc_lv<1> > ap_NS_fsm0;
    sc_signal< sc_lv<2> > ap_NS_fsm1;
    sc_signal< bool > ap_sig_bdd_100;
    sc_signal< bool > ap_sig_bdd_146;
    sc_signal< bool > ap_sig_bdd_332;
    sc_signal< bool > ap_sig_bdd_335;
    sc_signal< bool > ap_sig_bdd_78;
    sc_signal< bool > ap_sig_bdd_111;
    sc_signal< bool > ap_sig_bdd_162;
    sc_signal< bool > ap_sig_bdd_176;
    sc_signal< bool > ap_sig_bdd_590;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_st1_fsm0_0;
    static const sc_lv<2> ap_ST_st2_fsm1_1;
    static const sc_lv<2> ap_ST_st0_fsm1_0;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<32> ap_const_lv32_7D;
    static const sc_lv<32> ap_const_lv32_7F;
    static const sc_lv<32> ap_const_lv32_80;
    static const sc_lv<32> ap_const_lv32_BF;
    static const sc_lv<32> ap_const_lv32_C0;
    static const sc_lv<32> ap_const_lv32_FF;
    static const sc_lv<32> ap_const_lv32_48;
    static const sc_lv<32> ap_const_lv32_67;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_7E;
    static const sc_lv<32> ap_const_lv32_7C;
    static const sc_lv<32> ap_const_lv32_70;
    static const sc_lv<32> ap_const_lv32_68;
    static const sc_lv<32> ap_const_lv32_6F;
    static const sc_lv<8> ap_const_lv8_8;
    static const sc_lv<8> ap_const_lv8_4;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<16> ap_const_lv16_9;
    static const sc_lv<16> ap_const_lv16_FFF8;
    static const sc_lv<124> ap_const_lv124_0;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<128> ap_const_lv128_lc_1;
    // Thread declarations
    void thread_ap_clk_pos_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_reg_phiprechg_tmp_EOP_V_3_reg_245pp0_it1();
    void thread_ap_sig_bdd_100();
    void thread_ap_sig_bdd_111();
    void thread_ap_sig_bdd_146();
    void thread_ap_sig_bdd_162();
    void thread_ap_sig_bdd_176();
    void thread_ap_sig_bdd_199();
    void thread_ap_sig_bdd_205();
    void thread_ap_sig_bdd_23();
    void thread_ap_sig_bdd_332();
    void thread_ap_sig_bdd_335();
    void thread_ap_sig_bdd_34();
    void thread_ap_sig_bdd_590();
    void thread_ap_sig_bdd_65();
    void thread_ap_sig_bdd_78();
    void thread_ap_sig_cseq_ST_st0_fsm1_0();
    void thread_ap_sig_cseq_ST_st1_fsm0_0();
    void thread_ap_sig_cseq_ST_st2_fsm1_1();
    void thread_flashDemux2getPath_V_din();
    void thread_flashDemux2getPath_V_write();
    void thread_flashDemux2setPathMetadata_V_din();
    void thread_flashDemux2setPathMetadata_V_write();
    void thread_flashDemux2setPathValue_V_din();
    void thread_flashDemux2setPathValue_V_write();
    void thread_flashKeyBuffer_V_V_din();
    void thread_flashKeyBuffer_V_V_write();
    void thread_flashMetadataBuffer_V_din();
    void thread_flashMetadataBuffer_V_write();
    void thread_grp_fu_257_p3();
    void thread_grp_fu_265_p3();
    void thread_grp_fu_293_p3();
    void thread_grp_fu_300_p2();
    void thread_grp_nbreadreq_fu_202_p3();
    void thread_metadataWrWord_SOP_V_fu_404_p3();
    void thread_p_Result_2_fu_472_p4();
    void thread_p_Result_s_fu_426_p4();
    void thread_p_Val2_s_fu_400_p1();
    void thread_splitter2valueStoreFlash_V_read();
    void thread_tmp_10312_fu_392_p1();
    void thread_tmp_11323_fu_510_p4();
    void thread_tmp_11_fu_546_p2();
    void thread_tmp_1301_fu_596_p4();
    void thread_tmp_1_fu_460_p2();
    void thread_tmp_2331_fu_577_p4();
    void thread_tmp_25_fu_418_p3();
    void thread_tmp_27_fu_436_p2();
    void thread_tmp_28_fu_442_p2();
    void thread_tmp_29_fu_448_p2();
    void thread_tmp_4352_fu_521_p4();
    void thread_tmp_5_fu_498_p2();
    void thread_tmp_6373_fu_566_p4();
    void thread_tmp_6_fu_454_p2();
    void thread_tmp_8410_fu_396_p1();
    void thread_tmp_9_fu_492_p2();
    void thread_tmp_EOP_V_3_phi_fu_248_p4();
    void thread_tmp_EOP_V_4_fu_540_p2();
    void thread_tmp_length_V_2_fu_552_p3();
    void thread_tmp_s_fu_482_p2();
    void thread_ap_NS_fsm1();
    void thread_ap_NS_fsm0();
};

}

using namespace ap_rtl;

#endif

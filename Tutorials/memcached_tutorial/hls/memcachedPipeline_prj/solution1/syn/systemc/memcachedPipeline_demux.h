// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.1
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _memcachedPipeline_demux_HH_
#define _memcachedPipeline_demux_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct memcachedPipeline_demux : public sc_module {
    // Port declarations 25
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<256> > accCtrl2demux_V_dout;
    sc_in< sc_logic > accCtrl2demux_V_empty_n;
    sc_out< sc_logic > accCtrl2demux_V_read;
    sc_out< sc_lv<128> > metadataBuffer_V_din;
    sc_in< sc_logic > metadataBuffer_V_full_n;
    sc_out< sc_logic > metadataBuffer_V_write;
    sc_out< sc_lv<64> > keyBuffer_V_V_din;
    sc_in< sc_logic > keyBuffer_V_V_full_n;
    sc_out< sc_logic > keyBuffer_V_V_write;
    sc_out< sc_lv<66> > demux2setPathValue_V_din;
    sc_in< sc_logic > demux2setPathValue_V_full_n;
    sc_out< sc_logic > demux2setPathValue_V_write;
    sc_out< sc_lv<45> > demux2setPathMetadata_V_din;
    sc_in< sc_logic > demux2setPathMetadata_V_full_n;
    sc_out< sc_logic > demux2setPathMetadata_V_write;
    sc_out< sc_lv<45> > demux2getPath_V_din;
    sc_in< sc_logic > demux2getPath_V_full_n;
    sc_out< sc_logic > demux2getPath_V_write;


    // Module declarations
    memcachedPipeline_demux(sc_module_name name);
    SC_HAS_PROCESS(memcachedPipeline_demux);

    ~memcachedPipeline_demux();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<1> > ap_CS_fsm0;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm0_0;
    sc_signal< bool > ap_sig_bdd_23;
    sc_signal< sc_lv<2> > ap_CS_fsm1;
    sc_signal< sc_logic > ap_sig_cseq_ST_st0_fsm1_0;
    sc_signal< bool > ap_sig_bdd_34;
    sc_signal< sc_lv<1> > grp_nbreadreq_fu_210_p3;
    sc_signal< bool > ap_sig_bdd_65;
    sc_signal< sc_lv<2> > demuxState_load_reg_629;
    sc_signal< sc_lv<1> > tmp_86_reg_645;
    sc_signal< sc_lv<1> > metadataWrWord_keyValid_V_6_reg_633;
    sc_signal< sc_lv<1> > metadataWrWord_valueValid_V_reg_637;
    sc_signal< sc_lv<1> > tmp_27_reg_657;
    sc_signal< sc_lv<1> > tmp_92_reg_669;
    sc_signal< sc_lv<1> > metadataWrWord_keyValid_V_5_reg_661;
    sc_signal< sc_lv<1> > tmp_reg_678;
    sc_signal< sc_lv<1> > metadataWrWord_SOP_V_reg_689;
    sc_signal< sc_lv<1> > tmp_94_reg_697;
    sc_signal< sc_lv<1> > tmp_98_reg_701;
    sc_signal< sc_lv<1> > tmp_60_reg_705;
    sc_signal< sc_lv<1> > tmp_63_reg_709;
    sc_signal< sc_lv<1> > metadataWrWord_keyValid_V_reg_693;
    sc_signal< sc_lv<1> > tmp_62_reg_718;
    sc_signal< bool > ap_sig_bdd_199;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm1_1;
    sc_signal< bool > ap_sig_bdd_205;
    sc_signal< sc_lv<2> > demuxState;
    sc_signal< sc_lv<2> > wordCounter_V;
    sc_signal< sc_lv<16> > valueLength_V;
    sc_signal< sc_lv<64> > reg_363;
    sc_signal< sc_lv<64> > reg_367;
    sc_signal< sc_lv<3> > reg_372;
    sc_signal< sc_lv<1> > metadataWrWord_SOP_V_fu_436_p3;
    sc_signal< sc_lv<1> > tmp_94_fu_450_p3;
    sc_signal< sc_lv<1> > tmp_98_fu_480_p2;
    sc_signal< sc_lv<1> > tmp_60_fu_486_p2;
    sc_signal< sc_lv<1> > tmp_63_fu_492_p2;
    sc_signal< sc_lv<32> > reg_376;
    sc_signal< sc_lv<13> > reg_380;
    sc_signal< sc_lv<1> > grp_fu_267_p3;
    sc_signal< sc_lv<1> > grp_fu_275_p3;
    sc_signal< sc_lv<1> > grp_fu_303_p3;
    sc_signal< sc_lv<128> > tmp_10_fu_406_p1;
    sc_signal< sc_lv<128> > tmp_10_reg_649;
    sc_signal< sc_lv<128> > tmp_8_fu_428_p1;
    sc_signal< sc_lv<128> > tmp_8_reg_673;
    sc_signal< sc_lv<124> > p_Val2_s_fu_432_p1;
    sc_signal< sc_lv<124> > p_Val2_s_reg_682;
    sc_signal< sc_lv<1> > tmp_EOP_V_1_fu_508_p2;
    sc_signal< sc_lv<1> > tmp_EOP_V_1_reg_713;
    sc_signal< sc_lv<1> > tmp_62_fu_554_p2;
    sc_signal< sc_lv<1> > ap_reg_phiprechg_tmp_EOP_V_11_reg_253pp0_it0;
    sc_signal< sc_lv<1> > ap_reg_phiprechg_tmp_EOP_V_11_reg_253pp0_it1;
    sc_signal< sc_lv<1> > tmp_59_fu_410_p2;
    sc_signal< sc_lv<128> > tmp_4_fu_571_p4;
    sc_signal< sc_lv<128> > tmp_2_fu_600_p4;
    sc_signal< sc_lv<128> > tmp_1_fu_619_p4;
    sc_signal< sc_lv<66> > tmp_11_fu_560_p4;
    sc_signal< sc_lv<66> > tmp_6_fu_590_p4;
    sc_signal< sc_lv<2> > grp_fu_310_p2;
    sc_signal< sc_lv<16> > tmp_61_fu_416_p2;
    sc_signal< sc_lv<16> > storemerge_cast_fu_528_p1;
    sc_signal< sc_lv<8> > p_Result_s_fu_458_p4;
    sc_signal< sc_lv<1> > tmp_97_fu_474_p2;
    sc_signal< sc_lv<1> > tmp_96_fu_468_p2;
    sc_signal< sc_lv<12> > p_Result_1_fu_498_p4;
    sc_signal< sc_lv<12> > tmp_64_fu_514_p2;
    sc_signal< sc_lv<12> > storemerge_fu_520_p3;
    sc_signal< sc_lv<8> > p_Result_9_fu_544_p4;
    sc_signal< sc_lv<1> > ap_NS_fsm0;
    sc_signal< sc_lv<2> > ap_NS_fsm1;
    sc_signal< bool > ap_sig_bdd_340;
    sc_signal< bool > ap_sig_bdd_344;
    sc_signal< bool > ap_sig_bdd_212;
    sc_signal< bool > ap_sig_bdd_100;
    sc_signal< bool > ap_sig_bdd_146;
    sc_signal< bool > ap_sig_bdd_337;
    sc_signal< bool > ap_sig_bdd_78;
    sc_signal< bool > ap_sig_bdd_111;
    sc_signal< bool > ap_sig_bdd_162;
    sc_signal< bool > ap_sig_bdd_176;
    sc_signal< bool > ap_sig_bdd_251;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_st1_fsm0_0;
    static const sc_lv<2> ap_ST_st2_fsm1_1;
    static const sc_lv<2> ap_ST_st0_fsm1_0;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<32> ap_const_lv32_7D;
    static const sc_lv<32> ap_const_lv32_7F;
    static const sc_lv<32> ap_const_lv32_80;
    static const sc_lv<32> ap_const_lv32_BF;
    static const sc_lv<32> ap_const_lv32_C0;
    static const sc_lv<32> ap_const_lv32_FF;
    static const sc_lv<32> ap_const_lv32_48;
    static const sc_lv<32> ap_const_lv32_67;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_14;
    static const sc_lv<32> ap_const_lv32_7E;
    static const sc_lv<16> ap_const_lv16_9;
    static const sc_lv<16> ap_const_lv16_FFF8;
    static const sc_lv<32> ap_const_lv32_7C;
    static const sc_lv<32> ap_const_lv32_70;
    static const sc_lv<32> ap_const_lv32_68;
    static const sc_lv<32> ap_const_lv32_6F;
    static const sc_lv<8> ap_const_lv8_8;
    static const sc_lv<8> ap_const_lv8_4;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<12> ap_const_lv12_9;
    static const sc_lv<12> ap_const_lv12_FF8;
    static const sc_lv<124> ap_const_lv124_0;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<13> ap_const_lv13_0;
    static const sc_lv<128> ap_const_lv128_lc_1;
    static const bool ap_true;
    // Thread declarations
    void thread_ap_clk_pos_reset_();
    void thread_accCtrl2demux_V_read();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_reg_phiprechg_tmp_EOP_V_11_reg_253pp0_it0();
    void thread_ap_sig_bdd_100();
    void thread_ap_sig_bdd_111();
    void thread_ap_sig_bdd_146();
    void thread_ap_sig_bdd_162();
    void thread_ap_sig_bdd_176();
    void thread_ap_sig_bdd_199();
    void thread_ap_sig_bdd_205();
    void thread_ap_sig_bdd_212();
    void thread_ap_sig_bdd_23();
    void thread_ap_sig_bdd_251();
    void thread_ap_sig_bdd_337();
    void thread_ap_sig_bdd_34();
    void thread_ap_sig_bdd_340();
    void thread_ap_sig_bdd_344();
    void thread_ap_sig_bdd_65();
    void thread_ap_sig_bdd_78();
    void thread_ap_sig_cseq_ST_st0_fsm1_0();
    void thread_ap_sig_cseq_ST_st1_fsm0_0();
    void thread_ap_sig_cseq_ST_st2_fsm1_1();
    void thread_demux2getPath_V_din();
    void thread_demux2getPath_V_write();
    void thread_demux2setPathMetadata_V_din();
    void thread_demux2setPathMetadata_V_write();
    void thread_demux2setPathValue_V_din();
    void thread_demux2setPathValue_V_write();
    void thread_grp_fu_267_p3();
    void thread_grp_fu_275_p3();
    void thread_grp_fu_303_p3();
    void thread_grp_fu_310_p2();
    void thread_grp_nbreadreq_fu_210_p3();
    void thread_keyBuffer_V_V_din();
    void thread_keyBuffer_V_V_write();
    void thread_metadataBuffer_V_din();
    void thread_metadataBuffer_V_write();
    void thread_metadataWrWord_SOP_V_fu_436_p3();
    void thread_p_Result_1_fu_498_p4();
    void thread_p_Result_9_fu_544_p4();
    void thread_p_Result_s_fu_458_p4();
    void thread_p_Val2_s_fu_432_p1();
    void thread_storemerge_cast_fu_528_p1();
    void thread_storemerge_fu_520_p3();
    void thread_tmp_10_fu_406_p1();
    void thread_tmp_11_fu_560_p4();
    void thread_tmp_1_fu_619_p4();
    void thread_tmp_2_fu_600_p4();
    void thread_tmp_4_fu_571_p4();
    void thread_tmp_59_fu_410_p2();
    void thread_tmp_60_fu_486_p2();
    void thread_tmp_61_fu_416_p2();
    void thread_tmp_62_fu_554_p2();
    void thread_tmp_63_fu_492_p2();
    void thread_tmp_64_fu_514_p2();
    void thread_tmp_6_fu_590_p4();
    void thread_tmp_8_fu_428_p1();
    void thread_tmp_94_fu_450_p3();
    void thread_tmp_96_fu_468_p2();
    void thread_tmp_97_fu_474_p2();
    void thread_tmp_98_fu_480_p2();
    void thread_tmp_EOP_V_1_fu_508_p2();
    void thread_ap_NS_fsm0();
    void thread_ap_NS_fsm1();
};

}

using namespace ap_rtl;

#endif

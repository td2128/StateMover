// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.1
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _memcachedPipeline_flashDispatch_HH_
#define _memcachedPipeline_flashDispatch_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct memcachedPipeline_flashDispatch : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<48> > flashDemux2getPath_V_dout;
    sc_in< sc_logic > flashDemux2getPath_V_empty_n;
    sc_out< sc_logic > flashDemux2getPath_V_read;
    sc_out< sc_lv<16> > flash_Disp2rec_V_V_din;
    sc_in< sc_logic > flash_Disp2rec_V_V_full_n;
    sc_out< sc_logic > flash_Disp2rec_V_V_write;
    sc_in< sc_logic > memRdCmd_V_TREADY;
    sc_out< sc_lv<48> > memRdCmd_V_TDATA;
    sc_out< sc_logic > memRdCmd_V_TVALID;


    // Module declarations
    memcachedPipeline_flashDispatch(sc_module_name name);
    SC_HAS_PROCESS(memcachedPipeline_flashDispatch);

    ~memcachedPipeline_flashDispatch();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<1> > ap_CS_fsm0;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm0_0;
    sc_signal< bool > ap_sig_bdd_23;
    sc_signal< sc_lv<2> > ap_CS_fsm1;
    sc_signal< sc_logic > ap_sig_cseq_ST_st0_fsm1_0;
    sc_signal< bool > ap_sig_bdd_34;
    sc_signal< sc_lv<1> > tmp19_nbreadreq_fu_60_p3;
    sc_signal< bool > ap_sig_bdd_52;
    sc_signal< sc_lv<1> > tmp19_reg_149;
    sc_signal< bool > ap_sig_bdd_63;
    sc_signal< sc_logic > ap_sig_ioackin_memRdCmd_V_TREADY;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm1_1;
    sc_signal< bool > ap_sig_bdd_74;
    sc_signal< sc_lv<32> > getCtrlWord_address_V_fu_89_p1;
    sc_signal< sc_lv<32> > getCtrlWord_address_V_reg_153;
    sc_signal< sc_lv<16> > tmp_V_reg_158;
    sc_signal< sc_lv<13> > tmp_100_reg_164;
    sc_signal< sc_logic > ap_reg_ioackin_memRdCmd_V_TREADY;
    sc_signal< sc_lv<16> > op2_assign_fu_113_p3;
    sc_signal< sc_lv<1> > tmp_77_fu_120_p2;
    sc_signal< sc_lv<13> > tmp_99_fu_125_p2;
    sc_signal< sc_lv<13> > getCtrlWord_count_V_fu_130_p3;
    sc_signal< sc_lv<45> > tmp_1_fu_137_p3;
    sc_signal< sc_lv<1> > ap_NS_fsm0;
    sc_signal< sc_lv<2> > ap_NS_fsm1;
    sc_signal< bool > ap_sig_bdd_179;
    sc_signal< bool > ap_sig_bdd_178;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_st1_fsm0_0;
    static const sc_lv<2> ap_ST_st2_fsm1_1;
    static const sc_lv<2> ap_ST_st0_fsm1_0;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_20;
    static const sc_lv<32> ap_const_lv32_2F;
    static const sc_lv<32> ap_const_lv32_23;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<13> ap_const_lv13_1;
    static const sc_lv<13> ap_const_lv13_0;
    static const sc_lv<16> ap_const_lv16_0;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_bdd_178();
    void thread_ap_sig_bdd_179();
    void thread_ap_sig_bdd_23();
    void thread_ap_sig_bdd_34();
    void thread_ap_sig_bdd_52();
    void thread_ap_sig_bdd_63();
    void thread_ap_sig_bdd_74();
    void thread_ap_sig_cseq_ST_st0_fsm1_0();
    void thread_ap_sig_cseq_ST_st1_fsm0_0();
    void thread_ap_sig_cseq_ST_st2_fsm1_1();
    void thread_ap_sig_ioackin_memRdCmd_V_TREADY();
    void thread_flashDemux2getPath_V_read();
    void thread_flash_Disp2rec_V_V_din();
    void thread_flash_Disp2rec_V_V_write();
    void thread_getCtrlWord_address_V_fu_89_p1();
    void thread_getCtrlWord_count_V_fu_130_p3();
    void thread_memRdCmd_V_TDATA();
    void thread_memRdCmd_V_TVALID();
    void thread_op2_assign_fu_113_p3();
    void thread_tmp19_nbreadreq_fu_60_p3();
    void thread_tmp_1_fu_137_p3();
    void thread_tmp_77_fu_120_p2();
    void thread_tmp_99_fu_125_p2();
    void thread_ap_NS_fsm1();
    void thread_ap_NS_fsm0();
};

}

using namespace ap_rtl;

#endif

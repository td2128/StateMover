// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.1
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _memcachedPipeline_response_f_HH_
#define _memcachedPipeline_response_f_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct memcachedPipeline_response_f : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<64> > valueBuffer_rf_V_V_din;
    sc_in< sc_logic > valueBuffer_rf_V_V_full_n;
    sc_out< sc_logic > valueBuffer_rf_V_V_write;
    sc_out< sc_lv<248> > metadataBuffer_rf_V_V_din;
    sc_in< sc_logic > metadataBuffer_rf_V_V_full_n;
    sc_out< sc_logic > metadataBuffer_rf_V_V_write;
    sc_in< sc_lv<256> > merger2responseFormatter_V_dout;
    sc_in< sc_logic > merger2responseFormatter_V_empty_n;
    sc_out< sc_logic > merger2responseFormatter_V_read;


    // Module declarations
    memcachedPipeline_response_f(sc_module_name name);
    SC_HAS_PROCESS(memcachedPipeline_response_f);

    ~memcachedPipeline_response_f();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_bdd_20;
    sc_signal< sc_lv<2> > inWordCounter_V;
    sc_signal< sc_lv<248> > bf_metadataTempBuffer_V;
    sc_signal< sc_lv<1> > inWordCounter_V_flag_phi_fu_149_p4;
    sc_signal< sc_lv<1> > tmp_nbwritereq_fu_102_p3;
    sc_signal< sc_lv<1> > tmp_39_nbwritereq_fu_110_p3;
    sc_signal< sc_lv<1> > tmp_40_nbreadreq_fu_118_p3;
    sc_signal< sc_lv<1> > or_cond_fu_243_p2;
    sc_signal< sc_lv<1> > tmp_s_fu_237_p2;
    sc_signal< sc_lv<1> > tmp_139_fu_253_p3;
    sc_signal< sc_lv<1> > tmp_90_fu_280_p2;
    sc_signal< sc_lv<1> > tmp_137_fu_206_p3;
    sc_signal< bool > ap_sig_bdd_91;
    sc_signal< sc_lv<2> > tmp_91_fu_286_p2;
    sc_signal< sc_lv<1> > inWordCounter_V_flag_3_phi_fu_170_p6;
    sc_signal< sc_lv<1> > p_inWordCounter_V_flag_fu_293_p2;
    sc_signal< sc_lv<2> > inWordCounter_V_new_3_phi_fu_183_p6;
    sc_signal< sc_lv<2> > p_inWordCounter_V_new_fu_300_p3;
    sc_signal< sc_lv<248> > p_Result_2_fu_261_p5;
    sc_signal< sc_lv<248> > p_Result_s_fu_309_p5;
    sc_signal< sc_lv<1> > tmp_136_fu_198_p3;
    sc_signal< sc_lv<124> > tmp_135_fu_194_p1;
    sc_signal< sc_lv<1> > tmp_138_fu_214_p3;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    sc_signal< bool > ap_sig_bdd_217;
    sc_signal< bool > ap_sig_bdd_127;
    sc_signal< bool > ap_sig_bdd_220;
    sc_signal< bool > ap_sig_bdd_216;
    sc_signal< bool > ap_sig_bdd_143;
    sc_signal< bool > ap_sig_bdd_121;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_st1_fsm_0;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<248> ap_const_lv248_lc_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_7C;
    static const sc_lv<32> ap_const_lv32_7E;
    static const sc_lv<32> ap_const_lv32_7F;
    static const sc_lv<32> ap_const_lv32_80;
    static const sc_lv<32> ap_const_lv32_BF;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_F7;
    static const sc_lv<32> ap_const_lv32_7B;
    // Thread declarations
    void thread_ap_clk_pos_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_bdd_121();
    void thread_ap_sig_bdd_127();
    void thread_ap_sig_bdd_143();
    void thread_ap_sig_bdd_20();
    void thread_ap_sig_bdd_216();
    void thread_ap_sig_bdd_217();
    void thread_ap_sig_bdd_220();
    void thread_ap_sig_bdd_91();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_inWordCounter_V_flag_3_phi_fu_170_p6();
    void thread_inWordCounter_V_flag_phi_fu_149_p4();
    void thread_inWordCounter_V_new_3_phi_fu_183_p6();
    void thread_merger2responseFormatter_V_read();
    void thread_metadataBuffer_rf_V_V_din();
    void thread_metadataBuffer_rf_V_V_write();
    void thread_or_cond_fu_243_p2();
    void thread_p_Result_2_fu_261_p5();
    void thread_p_Result_s_fu_309_p5();
    void thread_p_inWordCounter_V_flag_fu_293_p2();
    void thread_p_inWordCounter_V_new_fu_300_p3();
    void thread_tmp_135_fu_194_p1();
    void thread_tmp_136_fu_198_p3();
    void thread_tmp_137_fu_206_p3();
    void thread_tmp_138_fu_214_p3();
    void thread_tmp_139_fu_253_p3();
    void thread_tmp_39_nbwritereq_fu_110_p3();
    void thread_tmp_40_nbreadreq_fu_118_p3();
    void thread_tmp_90_fu_280_p2();
    void thread_tmp_91_fu_286_p2();
    void thread_tmp_nbwritereq_fu_102_p3();
    void thread_tmp_s_fu_237_p2();
    void thread_valueBuffer_rf_V_V_din();
    void thread_valueBuffer_rf_V_V_write();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif

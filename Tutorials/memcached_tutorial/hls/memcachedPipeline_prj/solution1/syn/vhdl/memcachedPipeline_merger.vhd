-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2015.1
-- Copyright (C) 2015 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity memcachedPipeline_merger is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    valueStoreDram2merger_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
    valueStoreDram2merger_V_empty_n : IN STD_LOGIC;
    valueStoreDram2merger_V_read : OUT STD_LOGIC;
    valueStoreFlash2merger_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
    valueStoreFlash2merger_V_empty_n : IN STD_LOGIC;
    valueStoreFlash2merger_V_read : OUT STD_LOGIC;
    merger2responseFormatter_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
    merger2responseFormatter_V_full_n : IN STD_LOGIC;
    merger2responseFormatter_V_write : OUT STD_LOGIC );
end;


architecture behav of memcachedPipeline_merger is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_pp0_stg0_fsm_0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv256_lc_1 : STD_LOGIC_VECTOR (255 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_pp0_stg0_fsm_0 : STD_LOGIC;
    signal ap_sig_bdd_20 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC;
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal grp_nbreadreq_fu_120_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_nbreadreq_fu_128_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_76 : BOOLEAN;
    signal mergerState_load_reg_214 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal tmp_reg_222 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal tmp_1_reg_226 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal dramOrFlash_V_1_load_reg_218 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal tmp_3_reg_230 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal tmp_2_reg_238 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal ap_sig_bdd_115 : BOOLEAN;
    signal mergerState : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal dramOrFlash_V_1 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal reg_168 : STD_LOGIC_VECTOR (255 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    signal reg_173 : STD_LOGIC_VECTOR (255 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    signal tmp_EOP_V_1_fu_198_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_EOP_V_fu_206_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_pprstidle_pp0 : STD_LOGIC;
    signal ap_sig_bdd_205 : BOOLEAN;
    signal ap_sig_bdd_204 : BOOLEAN;


begin




    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_rst, ap_clk)
    begin
        if (ap_rst = '1') then
            ap_CS_fsm <= ap_ST_pp0_stg0_fsm_0;
        elsif (ap_clk'event and ap_clk =  '1') then
            ap_CS_fsm <= ap_NS_fsm;
        end if;
    end process;


    -- ap_done_reg assign process. --
    ap_done_reg_assign_proc : process(ap_rst, ap_clk)
    begin
        if (ap_rst = '1') then
            ap_done_reg <= ap_const_logic_0;
        elsif (ap_clk'event and ap_clk =  '1') then
            if ((ap_const_logic_1 = ap_continue)) then 
                ap_done_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_76) or (ap_sig_bdd_115 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then 
                ap_done_reg <= ap_const_logic_1;
            end if; 
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it1 assign process. --
    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_rst, ap_clk)
    begin
        if (ap_rst = '1') then
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
        elsif (ap_clk'event and ap_clk =  '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_76) or (ap_sig_bdd_115 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then 
                ap_reg_ppiten_pp0_it1 <= ap_reg_ppiten_pp0_it0;
            end if; 
        end if;
    end process;


    -- dramOrFlash_V_1 assign process. --
    dramOrFlash_V_1_assign_proc : process(ap_rst, ap_clk)
    begin
        if (ap_rst = '1') then
            dramOrFlash_V_1 <= ap_const_lv1_0;
        elsif (ap_clk'event and ap_clk =  '1') then
            if (ap_sig_bdd_204) then
                if (not((ap_const_lv1_0 = grp_nbreadreq_fu_120_p3))) then 
                    dramOrFlash_V_1 <= ap_const_lv1_0;
                elsif (ap_sig_bdd_205) then 
                    dramOrFlash_V_1 <= ap_const_lv1_1;
                end if;
            end if; 
        end if;
    end process;


    -- dramOrFlash_V_1_load_reg_218 assign process. --
    dramOrFlash_V_1_load_reg_218_assign_proc : process(ap_rst, ap_clk)
    begin
        if (ap_rst = '1') then
            dramOrFlash_V_1_load_reg_218 <= ap_const_lv1_0;
        elsif (ap_clk'event and ap_clk =  '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_76) or (ap_sig_bdd_115 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then 
                dramOrFlash_V_1_load_reg_218 <= dramOrFlash_V_1;
            end if; 
        end if;
    end process;


    -- mergerState assign process. --
    mergerState_assign_proc : process(ap_rst, ap_clk)
    begin
        if (ap_rst = '1') then
            mergerState <= ap_const_lv1_0;
        elsif (ap_clk'event and ap_clk =  '1') then
            if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((ap_const_lv1_0 = grp_nbreadreq_fu_120_p3)) and not((mergerState = ap_const_lv1_0)) and (ap_const_lv1_0 = dramOrFlash_V_1) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_76) or (ap_sig_bdd_115 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) and not((ap_const_lv1_0 = tmp_EOP_V_1_fu_198_p3))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((ap_const_lv1_0 = grp_nbreadreq_fu_128_p3)) and not((mergerState = ap_const_lv1_0)) and not((ap_const_lv1_0 = dramOrFlash_V_1)) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_76) or (ap_sig_bdd_115 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) and not((ap_const_lv1_0 = tmp_EOP_V_fu_206_p3))))) then 
                mergerState <= ap_const_lv1_0;
            elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (mergerState = ap_const_lv1_0) and (ap_const_lv1_0 = grp_nbreadreq_fu_120_p3) and not((ap_const_lv1_0 = grp_nbreadreq_fu_128_p3)) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_76) or (ap_sig_bdd_115 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (mergerState = ap_const_lv1_0) and not((ap_const_lv1_0 = grp_nbreadreq_fu_120_p3)) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_76) or (ap_sig_bdd_115 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))))) then 
                mergerState <= ap_const_lv1_1;
            end if; 
        end if;
    end process;


    -- mergerState_load_reg_214 assign process. --
    mergerState_load_reg_214_assign_proc : process(ap_rst, ap_clk)
    begin
        if (ap_rst = '1') then
            mergerState_load_reg_214 <= ap_const_lv1_0;
        elsif (ap_clk'event and ap_clk =  '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_76) or (ap_sig_bdd_115 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then 
                mergerState_load_reg_214 <= mergerState;
            end if; 
        end if;
    end process;


    -- reg_168 assign process. --
    reg_168_assign_proc : process(ap_rst, ap_clk)
    begin
        if (ap_rst = '1') then
            reg_168 <= ap_const_lv256_lc_1;
        elsif (ap_clk'event and ap_clk =  '1') then
            if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (mergerState = ap_const_lv1_0) and (ap_const_lv1_0 = grp_nbreadreq_fu_120_p3) and not((ap_const_lv1_0 = grp_nbreadreq_fu_128_p3)) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_76) or (ap_sig_bdd_115 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and not((ap_const_lv1_0 = grp_nbreadreq_fu_128_p3)) and not((mergerState = ap_const_lv1_0)) and not((ap_const_lv1_0 = dramOrFlash_V_1)) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_76) or (ap_sig_bdd_115 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))))) then 
                reg_168 <= valueStoreDram2merger_V_dout;
            end if; 
        end if;
    end process;


    -- reg_173 assign process. --
    reg_173_assign_proc : process(ap_rst, ap_clk)
    begin
        if (ap_rst = '1') then
            reg_173 <= ap_const_lv256_lc_1;
        elsif (ap_clk'event and ap_clk =  '1') then
            if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (mergerState = ap_const_lv1_0) and not((ap_const_lv1_0 = grp_nbreadreq_fu_120_p3)) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_76) or (ap_sig_bdd_115 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and not((ap_const_lv1_0 = grp_nbreadreq_fu_120_p3)) and not((mergerState = ap_const_lv1_0)) and (ap_const_lv1_0 = dramOrFlash_V_1) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_76) or (ap_sig_bdd_115 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))))) then 
                reg_173 <= valueStoreFlash2merger_V_dout;
            end if; 
        end if;
    end process;


    -- tmp_1_reg_226 assign process. --
    tmp_1_reg_226_assign_proc : process(ap_rst, ap_clk)
    begin
        if (ap_rst = '1') then
            tmp_1_reg_226 <= ap_const_lv1_0;
        elsif (ap_clk'event and ap_clk =  '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (mergerState = ap_const_lv1_0) and (ap_const_lv1_0 = grp_nbreadreq_fu_120_p3) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_76) or (ap_sig_bdd_115 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then 
                tmp_1_reg_226 <= grp_nbreadreq_fu_128_p3;
            end if; 
        end if;
    end process;


    -- tmp_2_reg_238 assign process. --
    tmp_2_reg_238_assign_proc : process(ap_rst, ap_clk)
    begin
        if (ap_rst = '1') then
            tmp_2_reg_238 <= ap_const_lv1_0;
        elsif (ap_clk'event and ap_clk =  '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and not((mergerState = ap_const_lv1_0)) and not((ap_const_lv1_0 = dramOrFlash_V_1)) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_76) or (ap_sig_bdd_115 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then 
                tmp_2_reg_238 <= grp_nbreadreq_fu_128_p3;
            end if; 
        end if;
    end process;


    -- tmp_3_reg_230 assign process. --
    tmp_3_reg_230_assign_proc : process(ap_rst, ap_clk)
    begin
        if (ap_rst = '1') then
            tmp_3_reg_230 <= ap_const_lv1_0;
        elsif (ap_clk'event and ap_clk =  '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and not((mergerState = ap_const_lv1_0)) and (ap_const_lv1_0 = dramOrFlash_V_1) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_76) or (ap_sig_bdd_115 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then 
                tmp_3_reg_230 <= grp_nbreadreq_fu_120_p3;
            end if; 
        end if;
    end process;


    -- tmp_reg_222 assign process. --
    tmp_reg_222_assign_proc : process(ap_rst, ap_clk)
    begin
        if (ap_rst = '1') then
            tmp_reg_222 <= ap_const_lv1_0;
        elsif (ap_clk'event and ap_clk =  '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (mergerState = ap_const_lv1_0) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_76) or (ap_sig_bdd_115 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then 
                tmp_reg_222 <= grp_nbreadreq_fu_120_p3;
            end if; 
        end if;
    end process;


    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (ap_done_reg, ap_CS_fsm, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_sig_bdd_76, ap_sig_bdd_115, ap_sig_pprstidle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_pp0_stg0_fsm_0 => 
                ap_NS_fsm <= ap_ST_pp0_stg0_fsm_0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;

    -- ap_done assign process. --
    ap_done_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_sig_bdd_76, ap_sig_bdd_115)
    begin
        if (((ap_const_logic_1 = ap_done_reg) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_76) or (ap_sig_bdd_115 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_sig_bdd_76, ap_sig_bdd_115)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_76) or (ap_sig_bdd_115 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_reg_ppiten_pp0_it0 <= ap_start;

    -- ap_sig_bdd_115 assign process. --
    ap_sig_bdd_115_assign_proc : process(merger2responseFormatter_V_full_n, mergerState_load_reg_214, tmp_reg_222, tmp_1_reg_226, dramOrFlash_V_1_load_reg_218, tmp_3_reg_230, tmp_2_reg_238)
    begin
                ap_sig_bdd_115 <= (((merger2responseFormatter_V_full_n = ap_const_logic_0) and (ap_const_lv1_0 = mergerState_load_reg_214) and (ap_const_lv1_0 = tmp_reg_222) and not((ap_const_lv1_0 = tmp_1_reg_226))) or ((merger2responseFormatter_V_full_n = ap_const_logic_0) and (ap_const_lv1_0 = mergerState_load_reg_214) and not((ap_const_lv1_0 = tmp_reg_222))) or ((merger2responseFormatter_V_full_n = ap_const_logic_0) and not((ap_const_lv1_0 = mergerState_load_reg_214)) and (ap_const_lv1_0 = dramOrFlash_V_1_load_reg_218) and not((ap_const_lv1_0 = tmp_3_reg_230))) or ((merger2responseFormatter_V_full_n = ap_const_logic_0) and not((ap_const_lv1_0 = mergerState_load_reg_214)) and not((ap_const_lv1_0 = dramOrFlash_V_1_load_reg_218)) and not((ap_const_lv1_0 = tmp_2_reg_238))));
    end process;


    -- ap_sig_bdd_20 assign process. --
    ap_sig_bdd_20_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_20 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    -- ap_sig_bdd_204 assign process. --
    ap_sig_bdd_204_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_sig_bdd_76, ap_sig_bdd_115, mergerState)
    begin
                ap_sig_bdd_204 <= ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (mergerState = ap_const_lv1_0) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_76) or (ap_sig_bdd_115 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))));
    end process;


    -- ap_sig_bdd_205 assign process. --
    ap_sig_bdd_205_assign_proc : process(grp_nbreadreq_fu_120_p3, grp_nbreadreq_fu_128_p3)
    begin
                ap_sig_bdd_205 <= ((ap_const_lv1_0 = grp_nbreadreq_fu_120_p3) and not((ap_const_lv1_0 = grp_nbreadreq_fu_128_p3)));
    end process;


    -- ap_sig_bdd_76 assign process. --
    ap_sig_bdd_76_assign_proc : process(ap_start, ap_done_reg, valueStoreDram2merger_V_empty_n, grp_nbreadreq_fu_120_p3, grp_nbreadreq_fu_128_p3, valueStoreFlash2merger_V_empty_n, mergerState, dramOrFlash_V_1)
    begin
                ap_sig_bdd_76 <= (((valueStoreDram2merger_V_empty_n = ap_const_logic_0) and (mergerState = ap_const_lv1_0) and (ap_const_lv1_0 = grp_nbreadreq_fu_120_p3) and not((ap_const_lv1_0 = grp_nbreadreq_fu_128_p3))) or ((mergerState = ap_const_lv1_0) and (valueStoreFlash2merger_V_empty_n = ap_const_logic_0) and not((ap_const_lv1_0 = grp_nbreadreq_fu_120_p3))) or ((valueStoreFlash2merger_V_empty_n = ap_const_logic_0) and not((ap_const_lv1_0 = grp_nbreadreq_fu_120_p3)) and not((mergerState = ap_const_lv1_0)) and (ap_const_lv1_0 = dramOrFlash_V_1)) or ((valueStoreDram2merger_V_empty_n = ap_const_logic_0) and not((ap_const_lv1_0 = grp_nbreadreq_fu_128_p3)) and not((mergerState = ap_const_lv1_0)) and not((ap_const_lv1_0 = dramOrFlash_V_1))) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    -- ap_sig_cseq_ST_pp0_stg0_fsm_0 assign process. --
    ap_sig_cseq_ST_pp0_stg0_fsm_0_assign_proc : process(ap_sig_bdd_20)
    begin
        if (ap_sig_bdd_20) then 
            ap_sig_cseq_ST_pp0_stg0_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg0_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_pprstidle_pp0 assign process. --
    ap_sig_pprstidle_pp0_assign_proc : process(ap_start, ap_reg_ppiten_pp0_it0)
    begin
        if (((ap_const_logic_0 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_0 = ap_start))) then 
            ap_sig_pprstidle_pp0 <= ap_const_logic_1;
        else 
            ap_sig_pprstidle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_nbreadreq_fu_120_p3 <= (0=>valueStoreFlash2merger_V_empty_n, others=>'-');
    grp_nbreadreq_fu_128_p3 <= (0=>valueStoreDram2merger_V_empty_n, others=>'-');

    -- merger2responseFormatter_V_din assign process. --
    merger2responseFormatter_V_din_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_sig_bdd_76, mergerState_load_reg_214, tmp_reg_222, tmp_1_reg_226, dramOrFlash_V_1_load_reg_218, tmp_3_reg_230, tmp_2_reg_238, ap_sig_bdd_115, reg_168, reg_173)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_lv1_0 = mergerState_load_reg_214) and not((ap_const_lv1_0 = tmp_reg_222)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_76) or (ap_sig_bdd_115 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and not((ap_const_lv1_0 = mergerState_load_reg_214)) and (ap_const_lv1_0 = dramOrFlash_V_1_load_reg_218) and not((ap_const_lv1_0 = tmp_3_reg_230)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_76) or (ap_sig_bdd_115 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))))) then 
            merger2responseFormatter_V_din <= reg_173;
        elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_lv1_0 = mergerState_load_reg_214) and (ap_const_lv1_0 = tmp_reg_222) and not((ap_const_lv1_0 = tmp_1_reg_226)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_76) or (ap_sig_bdd_115 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and not((ap_const_lv1_0 = mergerState_load_reg_214)) and not((ap_const_lv1_0 = dramOrFlash_V_1_load_reg_218)) and not((ap_const_lv1_0 = tmp_2_reg_238)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_76) or (ap_sig_bdd_115 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))))) then 
            merger2responseFormatter_V_din <= reg_168;
        else 
            merger2responseFormatter_V_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- merger2responseFormatter_V_write assign process. --
    merger2responseFormatter_V_write_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_sig_bdd_76, mergerState_load_reg_214, tmp_reg_222, tmp_1_reg_226, dramOrFlash_V_1_load_reg_218, tmp_3_reg_230, tmp_2_reg_238, ap_sig_bdd_115)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_lv1_0 = mergerState_load_reg_214) and (ap_const_lv1_0 = tmp_reg_222) and not((ap_const_lv1_0 = tmp_1_reg_226)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_76) or (ap_sig_bdd_115 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_lv1_0 = mergerState_load_reg_214) and not((ap_const_lv1_0 = tmp_reg_222)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_76) or (ap_sig_bdd_115 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and not((ap_const_lv1_0 = mergerState_load_reg_214)) and (ap_const_lv1_0 = dramOrFlash_V_1_load_reg_218) and not((ap_const_lv1_0 = tmp_3_reg_230)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_76) or (ap_sig_bdd_115 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and not((ap_const_lv1_0 = mergerState_load_reg_214)) and not((ap_const_lv1_0 = dramOrFlash_V_1_load_reg_218)) and not((ap_const_lv1_0 = tmp_2_reg_238)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_76) or (ap_sig_bdd_115 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))))) then 
            merger2responseFormatter_V_write <= ap_const_logic_1;
        else 
            merger2responseFormatter_V_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_EOP_V_1_fu_198_p3 <= valueStoreFlash2merger_V_dout(127 downto 127);
    tmp_EOP_V_fu_206_p3 <= valueStoreDram2merger_V_dout(127 downto 127);

    -- valueStoreDram2merger_V_read assign process. --
    valueStoreDram2merger_V_read_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, grp_nbreadreq_fu_120_p3, grp_nbreadreq_fu_128_p3, ap_sig_bdd_76, ap_sig_bdd_115, mergerState, dramOrFlash_V_1)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (mergerState = ap_const_lv1_0) and (ap_const_lv1_0 = grp_nbreadreq_fu_120_p3) and not((ap_const_lv1_0 = grp_nbreadreq_fu_128_p3)) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_76) or (ap_sig_bdd_115 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((ap_const_lv1_0 = grp_nbreadreq_fu_128_p3)) and not((mergerState = ap_const_lv1_0)) and not((ap_const_lv1_0 = dramOrFlash_V_1)) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_76) or (ap_sig_bdd_115 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))))) then 
            valueStoreDram2merger_V_read <= ap_const_logic_1;
        else 
            valueStoreDram2merger_V_read <= ap_const_logic_0;
        end if; 
    end process;


    -- valueStoreFlash2merger_V_read assign process. --
    valueStoreFlash2merger_V_read_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, grp_nbreadreq_fu_120_p3, ap_sig_bdd_76, ap_sig_bdd_115, mergerState, dramOrFlash_V_1)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (mergerState = ap_const_lv1_0) and not((ap_const_lv1_0 = grp_nbreadreq_fu_120_p3)) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_76) or (ap_sig_bdd_115 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((ap_const_lv1_0 = grp_nbreadreq_fu_120_p3)) and not((mergerState = ap_const_lv1_0)) and (ap_const_lv1_0 = dramOrFlash_V_1) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_76) or (ap_sig_bdd_115 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))))) then 
            valueStoreFlash2merger_V_read <= ap_const_logic_1;
        else 
            valueStoreFlash2merger_V_read <= ap_const_logic_0;
        end if; 
    end process;

end behav;

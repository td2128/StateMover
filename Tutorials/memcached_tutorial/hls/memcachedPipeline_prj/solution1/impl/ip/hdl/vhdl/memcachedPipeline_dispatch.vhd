-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2015.1
-- Copyright (C) 2015 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity memcachedPipeline_dispatch is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    demux2getPath_V_dout : IN STD_LOGIC_VECTOR (44 downto 0);
    demux2getPath_V_empty_n : IN STD_LOGIC;
    demux2getPath_V_read : OUT STD_LOGIC;
    disp2rec_V_V_din : OUT STD_LOGIC_VECTOR (11 downto 0);
    disp2rec_V_V_full_n : IN STD_LOGIC;
    disp2rec_V_V_write : OUT STD_LOGIC;
    memRdCmd_V_TREADY : IN STD_LOGIC;
    memRdCmd_V_TDATA : OUT STD_LOGIC_VECTOR (39 downto 0);
    memRdCmd_V_TVALID : OUT STD_LOGIC );
end;


architecture behav of memcachedPipeline_dispatch is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm0_0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_ST_st2_fsm1_1 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_ST_st0_fsm1_0 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm0 : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm0_0 : STD_LOGIC;
    signal ap_sig_bdd_23 : BOOLEAN;
    signal ap_CS_fsm1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding of ap_CS_fsm1 : signal is "none";
    signal ap_sig_cseq_ST_st0_fsm1_0 : STD_LOGIC;
    signal ap_sig_bdd_34 : BOOLEAN;
    signal tmp19_nbreadreq_fu_64_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_52 : BOOLEAN;
    signal tmp19_reg_165 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal ap_sig_bdd_63 : BOOLEAN;
    signal ap_sig_ioackin_memRdCmd_V_TREADY : STD_LOGIC;
    signal ap_sig_cseq_ST_st2_fsm1_1 : STD_LOGIC;
    signal ap_sig_bdd_74 : BOOLEAN;
    signal getCtrlWord_address_V_fu_93_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal getCtrlWord_address_V_reg_169 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal tmp_fu_107_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_reg_174 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    signal tmp_162_fu_125_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_162_reg_179 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal tmp_V_reg_184 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    signal ap_reg_ioackin_memRdCmd_V_TREADY : STD_LOGIC := '0';
    signal tmp_length_V_load_new6_fu_97_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal op2_assign_fu_117_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_159_fu_141_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_163_fu_144_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_count_V_fu_150_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm0 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm1 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_bdd_188 : BOOLEAN;
    signal ap_sig_bdd_187 : BOOLEAN;


begin




    -- the current state (ap_CS_fsm0) of the state machine. --
    ap_CS_fsm0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm0 <= ap_ST_st1_fsm0_0;
            else
                ap_CS_fsm0 <= ap_NS_fsm0;
            end if;
        end if;
    end process;


    -- the current state (ap_CS_fsm1) of the state machine. --
    ap_CS_fsm1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm1 <= ap_ST_st0_fsm1_0;
            else
                ap_CS_fsm1 <= ap_NS_fsm1;
            end if;
        end if;
    end process;


    -- ap_done_reg assign process. --
    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_continue)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_63 or (not((ap_const_lv1_0 = tmp19_reg_165)) and (ap_const_logic_0 = ap_sig_ioackin_memRdCmd_V_TREADY)))))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ioackin_memRdCmd_V_TREADY assign process. --
    ap_reg_ioackin_memRdCmd_V_TREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ioackin_memRdCmd_V_TREADY <= ap_const_logic_0;
            else
                if (ap_sig_bdd_187) then
                    if (not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_63 or (not((ap_const_lv1_0 = tmp19_reg_165)) and (ap_const_logic_0 = ap_sig_ioackin_memRdCmd_V_TREADY))))) then 
                        ap_reg_ioackin_memRdCmd_V_TREADY <= ap_const_logic_0;
                    elsif (ap_sig_bdd_188) then 
                        ap_reg_ioackin_memRdCmd_V_TREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    -- getCtrlWord_address_V_reg_169 assign process. --
    getCtrlWord_address_V_reg_169_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                getCtrlWord_address_V_reg_169 <= ap_const_lv32_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not((tmp19_nbreadreq_fu_64_p3 = ap_const_lv1_0)) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_52 or ((ap_sig_bdd_63 or (not((ap_const_lv1_0 = tmp19_reg_165)) and (ap_const_logic_0 = ap_sig_ioackin_memRdCmd_V_TREADY))) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))))) then 
                    getCtrlWord_address_V_reg_169 <= getCtrlWord_address_V_fu_93_p1;
                end if; 
            end if;
        end if;
    end process;


    -- tmp19_reg_165 assign process. --
    tmp19_reg_165_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tmp19_reg_165 <= ap_const_lv1_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_52 or ((ap_sig_bdd_63 or (not((ap_const_lv1_0 = tmp19_reg_165)) and (ap_const_logic_0 = ap_sig_ioackin_memRdCmd_V_TREADY))) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))))) then 
                    tmp19_reg_165 <= tmp19_nbreadreq_fu_64_p3;
                end if; 
            end if;
        end if;
    end process;


    -- tmp_162_reg_179 assign process. --
    tmp_162_reg_179_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tmp_162_reg_179 <= ap_const_lv1_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not((tmp19_nbreadreq_fu_64_p3 = ap_const_lv1_0)) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_52 or ((ap_sig_bdd_63 or (not((ap_const_lv1_0 = tmp19_reg_165)) and (ap_const_logic_0 = ap_sig_ioackin_memRdCmd_V_TREADY))) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))))) then 
                    tmp_162_reg_179 <= tmp_162_fu_125_p2;
                end if; 
            end if;
        end if;
    end process;


    -- tmp_V_reg_184 assign process. --
    tmp_V_reg_184_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tmp_V_reg_184 <= ap_const_lv12_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not((tmp19_nbreadreq_fu_64_p3 = ap_const_lv1_0)) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_52 or ((ap_sig_bdd_63 or (not((ap_const_lv1_0 = tmp19_reg_165)) and (ap_const_logic_0 = ap_sig_ioackin_memRdCmd_V_TREADY))) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))))) then 
                    tmp_V_reg_184 <= demux2getPath_V_dout(43 downto 32);
                end if; 
            end if;
        end if;
    end process;


    -- tmp_reg_174 assign process. --
    tmp_reg_174_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tmp_reg_174 <= ap_const_lv7_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not((tmp19_nbreadreq_fu_64_p3 = ap_const_lv1_0)) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_52 or ((ap_sig_bdd_63 or (not((ap_const_lv1_0 = tmp19_reg_165)) and (ap_const_logic_0 = ap_sig_ioackin_memRdCmd_V_TREADY))) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))))) then 
                    tmp_reg_174 <= demux2getPath_V_dout(44 downto 38);
                end if; 
            end if;
        end if;
    end process;


    -- the next state (ap_NS_fsm1) of the state machine. --
    ap_NS_fsm1_assign_proc : process (ap_done_reg, ap_sig_cseq_ST_st1_fsm0_0, ap_CS_fsm1, ap_sig_bdd_52, tmp19_reg_165, ap_sig_bdd_63, ap_sig_ioackin_memRdCmd_V_TREADY, ap_sig_cseq_ST_st2_fsm1_1)
    begin
        case ap_CS_fsm1 is
            when ap_ST_st2_fsm1_1 => 
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_63 or (not((ap_const_lv1_0 = tmp19_reg_165)) and (ap_const_logic_0 = ap_sig_ioackin_memRdCmd_V_TREADY)))) and not(ap_sig_bdd_52))) then
                    ap_NS_fsm1 <= ap_ST_st2_fsm1_1;
                elsif ((not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_63 or (not((ap_const_lv1_0 = tmp19_reg_165)) and (ap_const_logic_0 = ap_sig_ioackin_memRdCmd_V_TREADY)))) and (not((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and ap_sig_bdd_52)))) then
                    ap_NS_fsm1 <= ap_ST_st0_fsm1_0;
                else
                    ap_NS_fsm1 <= ap_ST_st2_fsm1_1;
                end if;
            when ap_ST_st0_fsm1_0 => 
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_52 or ((ap_sig_bdd_63 or (not((ap_const_lv1_0 = tmp19_reg_165)) and (ap_const_logic_0 = ap_sig_ioackin_memRdCmd_V_TREADY))) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))))) then
                    ap_NS_fsm1 <= ap_ST_st2_fsm1_1;
                else
                    ap_NS_fsm1 <= ap_ST_st0_fsm1_0;
                end if;
            when others =>  
                ap_NS_fsm1 <= "XX";
        end case;
    end process;

    -- the next state (ap_NS_fsm0) of the state machine. --
    ap_NS_fsm0_assign_proc : process (ap_done_reg, ap_CS_fsm0, ap_sig_bdd_52, tmp19_reg_165, ap_sig_bdd_63, ap_sig_ioackin_memRdCmd_V_TREADY, ap_sig_cseq_ST_st2_fsm1_1)
    begin
        case ap_CS_fsm0 is
            when ap_ST_st1_fsm0_0 => 
                ap_NS_fsm0 <= ap_ST_st1_fsm0_0;
            when others =>  
                ap_NS_fsm0 <= "X";
        end case;
    end process;

    -- ap_done assign process. --
    ap_done_assign_proc : process(ap_done_reg, tmp19_reg_165, ap_sig_bdd_63, ap_sig_ioackin_memRdCmd_V_TREADY, ap_sig_cseq_ST_st2_fsm1_1)
    begin
        if (((ap_const_logic_1 = ap_done_reg) or ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_63 or (not((ap_const_lv1_0 = tmp19_reg_165)) and (ap_const_logic_0 = ap_sig_ioackin_memRdCmd_V_TREADY))))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm0_0, ap_sig_cseq_ST_st0_fsm1_0)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and (ap_const_logic_1 = ap_sig_cseq_ST_st0_fsm1_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_st1_fsm0_0, ap_sig_bdd_52, tmp19_reg_165, ap_sig_bdd_63, ap_sig_ioackin_memRdCmd_V_TREADY, ap_sig_cseq_ST_st2_fsm1_1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_52 or ((ap_sig_bdd_63 or (not((ap_const_lv1_0 = tmp19_reg_165)) and (ap_const_logic_0 = ap_sig_ioackin_memRdCmd_V_TREADY))) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_bdd_187 assign process. --
    ap_sig_bdd_187_assign_proc : process(tmp19_reg_165, ap_sig_cseq_ST_st2_fsm1_1)
    begin
                ap_sig_bdd_187 <= (not((ap_const_lv1_0 = tmp19_reg_165)) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1));
    end process;


    -- ap_sig_bdd_188 assign process. --
    ap_sig_bdd_188_assign_proc : process(ap_done_reg, ap_sig_bdd_63, memRdCmd_V_TREADY)
    begin
                ap_sig_bdd_188 <= (not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_63)) and (ap_const_logic_1 = memRdCmd_V_TREADY));
    end process;


    -- ap_sig_bdd_23 assign process. --
    ap_sig_bdd_23_assign_proc : process(ap_CS_fsm0)
    begin
                ap_sig_bdd_23 <= (ap_CS_fsm0(0 downto 0) = ap_const_lv1_1);
    end process;


    -- ap_sig_bdd_34 assign process. --
    ap_sig_bdd_34_assign_proc : process(ap_CS_fsm1)
    begin
                ap_sig_bdd_34 <= (ap_const_lv1_1 = ap_CS_fsm1(0 downto 0));
    end process;


    -- ap_sig_bdd_52 assign process. --
    ap_sig_bdd_52_assign_proc : process(ap_start, ap_done_reg, demux2getPath_V_empty_n, tmp19_nbreadreq_fu_64_p3)
    begin
                ap_sig_bdd_52 <= (((demux2getPath_V_empty_n = ap_const_logic_0) and not((tmp19_nbreadreq_fu_64_p3 = ap_const_lv1_0))) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    -- ap_sig_bdd_63 assign process. --
    ap_sig_bdd_63_assign_proc : process(disp2rec_V_V_full_n, tmp19_reg_165)
    begin
                ap_sig_bdd_63 <= ((disp2rec_V_V_full_n = ap_const_logic_0) and not((ap_const_lv1_0 = tmp19_reg_165)));
    end process;


    -- ap_sig_bdd_74 assign process. --
    ap_sig_bdd_74_assign_proc : process(ap_CS_fsm1)
    begin
                ap_sig_bdd_74 <= (ap_const_lv1_1 = ap_CS_fsm1(1 downto 1));
    end process;


    -- ap_sig_cseq_ST_st0_fsm1_0 assign process. --
    ap_sig_cseq_ST_st0_fsm1_0_assign_proc : process(ap_sig_bdd_34)
    begin
        if (ap_sig_bdd_34) then 
            ap_sig_cseq_ST_st0_fsm1_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st0_fsm1_0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st1_fsm0_0 assign process. --
    ap_sig_cseq_ST_st1_fsm0_0_assign_proc : process(ap_sig_bdd_23)
    begin
        if (ap_sig_bdd_23) then 
            ap_sig_cseq_ST_st1_fsm0_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm0_0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st2_fsm1_1 assign process. --
    ap_sig_cseq_ST_st2_fsm1_1_assign_proc : process(ap_sig_bdd_74)
    begin
        if (ap_sig_bdd_74) then 
            ap_sig_cseq_ST_st2_fsm1_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm1_1 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_ioackin_memRdCmd_V_TREADY assign process. --
    ap_sig_ioackin_memRdCmd_V_TREADY_assign_proc : process(memRdCmd_V_TREADY, ap_reg_ioackin_memRdCmd_V_TREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_memRdCmd_V_TREADY)) then 
            ap_sig_ioackin_memRdCmd_V_TREADY <= memRdCmd_V_TREADY;
        else 
            ap_sig_ioackin_memRdCmd_V_TREADY <= ap_const_logic_1;
        end if; 
    end process;


    -- demux2getPath_V_read assign process. --
    demux2getPath_V_read_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_st1_fsm0_0, tmp19_nbreadreq_fu_64_p3, ap_sig_bdd_52, tmp19_reg_165, ap_sig_bdd_63, ap_sig_ioackin_memRdCmd_V_TREADY, ap_sig_cseq_ST_st2_fsm1_1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not((tmp19_nbreadreq_fu_64_p3 = ap_const_lv1_0)) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_52 or ((ap_sig_bdd_63 or (not((ap_const_lv1_0 = tmp19_reg_165)) and (ap_const_logic_0 = ap_sig_ioackin_memRdCmd_V_TREADY))) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))))) then 
            demux2getPath_V_read <= ap_const_logic_1;
        else 
            demux2getPath_V_read <= ap_const_logic_0;
        end if; 
    end process;

    disp2rec_V_V_din <= tmp_V_reg_184;

    -- disp2rec_V_V_write assign process. --
    disp2rec_V_V_write_assign_proc : process(ap_done_reg, tmp19_reg_165, ap_sig_bdd_63, ap_sig_ioackin_memRdCmd_V_TREADY, ap_sig_cseq_ST_st2_fsm1_1)
    begin
        if ((not((ap_const_lv1_0 = tmp19_reg_165)) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_63 or (not((ap_const_lv1_0 = tmp19_reg_165)) and (ap_const_logic_0 = ap_sig_ioackin_memRdCmd_V_TREADY)))))) then 
            disp2rec_V_V_write <= ap_const_logic_1;
        else 
            disp2rec_V_V_write <= ap_const_logic_0;
        end if; 
    end process;

    getCtrlWord_address_V_fu_93_p1 <= demux2getPath_V_dout(32 - 1 downto 0);
    memRdCmd_V_TDATA <= (tmp_count_V_fu_150_p3 & getCtrlWord_address_V_reg_169);

    -- memRdCmd_V_TVALID assign process. --
    memRdCmd_V_TVALID_assign_proc : process(ap_done_reg, tmp19_reg_165, ap_sig_bdd_63, ap_sig_cseq_ST_st2_fsm1_1, ap_reg_ioackin_memRdCmd_V_TREADY)
    begin
        if ((not((ap_const_lv1_0 = tmp19_reg_165)) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_63)) and (ap_const_logic_0 = ap_reg_ioackin_memRdCmd_V_TREADY))) then 
            memRdCmd_V_TVALID <= ap_const_logic_1;
        else 
            memRdCmd_V_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    op2_assign_fu_117_p3 <= (tmp_fu_107_p4 & ap_const_lv6_0);
    tmp19_nbreadreq_fu_64_p3 <= (0=>demux2getPath_V_empty_n, others=>'-');
    tmp_159_fu_141_p1 <= std_logic_vector(resize(unsigned(tmp_reg_174),8));
    tmp_162_fu_125_p2 <= "1" when (unsigned(tmp_length_V_load_new6_fu_97_p4) > unsigned(op2_assign_fu_117_p3)) else "0";
    tmp_163_fu_144_p2 <= std_logic_vector(unsigned(ap_const_lv8_1) + unsigned(tmp_159_fu_141_p1));
    tmp_count_V_fu_150_p3 <= 
        tmp_163_fu_144_p2 when (tmp_162_reg_179(0) = '1') else 
        tmp_159_fu_141_p1;
    tmp_fu_107_p4 <= demux2getPath_V_dout(44 downto 38);
    tmp_length_V_load_new6_fu_97_p4 <= demux2getPath_V_dout(44 downto 32);
end behav;

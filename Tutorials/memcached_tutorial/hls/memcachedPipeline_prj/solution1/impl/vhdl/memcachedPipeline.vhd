-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2015.1
-- Copyright (C) 2015 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity memcachedPipeline is
port (
    inData_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
    inData_TUSER : IN STD_LOGIC_VECTOR (111 downto 0);
    inData_TKEEP : IN STD_LOGIC_VECTOR (7 downto 0);
    inData_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    outData_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
    outData_TUSER : OUT STD_LOGIC_VECTOR (111 downto 0);
    outData_TKEEP : OUT STD_LOGIC_VECTOR (7 downto 0);
    outData_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    dramValueStoreMemRdCmd_V_TDATA : OUT STD_LOGIC_VECTOR (39 downto 0);
    dramValueStoreMemRdData_V_V_TDATA : IN STD_LOGIC_VECTOR (511 downto 0);
    dramValueStoreMemWrCmd_V_TDATA : OUT STD_LOGIC_VECTOR (39 downto 0);
    dramValueStoreMemWrData_V_V_TDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
    flashValueStoreMemRdCmd_V_TDATA : OUT STD_LOGIC_VECTOR (47 downto 0);
    flashValueStoreMemRdData_V_V_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
    flashValueStoreMemWrCmd_V_TDATA : OUT STD_LOGIC_VECTOR (47 downto 0);
    flashValueStoreMemWrData_V_V_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
    hashTableMemRdData_V_V_TDATA : IN STD_LOGIC_VECTOR (511 downto 0);
    hashTableMemRdCmd_V_TDATA : OUT STD_LOGIC_VECTOR (39 downto 0);
    hashTableMemWrData_V_V_TDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
    hashTableMemWrCmd_V_TDATA : OUT STD_LOGIC_VECTOR (39 downto 0);
    addressReturnOut_V_V_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    addressAssignDramIn_V_V_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    addressAssignFlashIn_V_V_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    flushReq_V : OUT STD_LOGIC_VECTOR (0 downto 0);
    flushAck_V : IN STD_LOGIC_VECTOR (0 downto 0);
    flushDone_V : OUT STD_LOGIC_VECTOR (0 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    inData_TVALID : IN STD_LOGIC;
    inData_TREADY : OUT STD_LOGIC;
    hashTableMemRdCmd_V_TVALID : OUT STD_LOGIC;
    hashTableMemRdCmd_V_TREADY : IN STD_LOGIC;
    hashTableMemRdData_V_V_TVALID : IN STD_LOGIC;
    hashTableMemRdData_V_V_TREADY : OUT STD_LOGIC;
    hashTableMemWrCmd_V_TVALID : OUT STD_LOGIC;
    hashTableMemWrCmd_V_TREADY : IN STD_LOGIC;
    hashTableMemWrData_V_V_TVALID : OUT STD_LOGIC;
    hashTableMemWrData_V_V_TREADY : IN STD_LOGIC;
    addressReturnOut_V_V_TVALID : OUT STD_LOGIC;
    addressReturnOut_V_V_TREADY : IN STD_LOGIC;
    addressAssignDramIn_V_V_TVALID : IN STD_LOGIC;
    addressAssignDramIn_V_V_TREADY : OUT STD_LOGIC;
    addressAssignFlashIn_V_V_TVALID : IN STD_LOGIC;
    addressAssignFlashIn_V_V_TREADY : OUT STD_LOGIC;
    dramValueStoreMemWrCmd_V_TVALID : OUT STD_LOGIC;
    dramValueStoreMemWrCmd_V_TREADY : IN STD_LOGIC;
    dramValueStoreMemWrData_V_V_TVALID : OUT STD_LOGIC;
    dramValueStoreMemWrData_V_V_TREADY : IN STD_LOGIC;
    dramValueStoreMemRdCmd_V_TVALID : OUT STD_LOGIC;
    dramValueStoreMemRdCmd_V_TREADY : IN STD_LOGIC;
    dramValueStoreMemRdData_V_V_TVALID : IN STD_LOGIC;
    dramValueStoreMemRdData_V_V_TREADY : OUT STD_LOGIC;
    flashValueStoreMemWrCmd_V_TVALID : OUT STD_LOGIC;
    flashValueStoreMemWrCmd_V_TREADY : IN STD_LOGIC;
    flashValueStoreMemWrData_V_V_TVALID : OUT STD_LOGIC;
    flashValueStoreMemWrData_V_V_TREADY : IN STD_LOGIC;
    flashValueStoreMemRdCmd_V_TVALID : OUT STD_LOGIC;
    flashValueStoreMemRdCmd_V_TREADY : IN STD_LOGIC;
    flashValueStoreMemRdData_V_V_TVALID : IN STD_LOGIC;
    flashValueStoreMemRdData_V_V_TREADY : OUT STD_LOGIC;
    outData_TVALID : OUT STD_LOGIC;
    outData_TREADY : IN STD_LOGIC );
end;


architecture behav of memcachedPipeline is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "memcachedPipeline,hls_ip_2015_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xcku040-ffva1156-2-e,HLS_INPUT_CLOCK=6.660000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=11.234000,HLS_SYN_LAT=5,HLS_SYN_TPT=1,HLS_SYN_MEM=311,HLS_SYN_DSP=0,HLS_SYN_FF=32705,HLS_SYN_LUT=139045}";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv112_0 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv40_0 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000000000000";
    constant ap_const_lv512_lc_1 : STD_LOGIC_VECTOR (511 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv48_0 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_true : BOOLEAN := true;

    signal ap_rst_n_inv : STD_LOGIC;
    signal memcachedPipeline_bp_f_U0_ap_start : STD_LOGIC;
    signal memcachedPipeline_bp_f_U0_ap_done : STD_LOGIC;
    signal memcachedPipeline_bp_f_U0_ap_continue : STD_LOGIC;
    signal memcachedPipeline_bp_f_U0_ap_idle : STD_LOGIC;
    signal memcachedPipeline_bp_f_U0_ap_ready : STD_LOGIC;
    signal memcachedPipeline_bp_f_U0_inData_TVALID : STD_LOGIC;
    signal memcachedPipeline_bp_f_U0_valueBuffer_rp_V_V_din : STD_LOGIC_VECTOR (63 downto 0);
    signal memcachedPipeline_bp_f_U0_valueBuffer_rp_V_V_full_n : STD_LOGIC;
    signal memcachedPipeline_bp_f_U0_valueBuffer_rp_V_V_write : STD_LOGIC;
    signal memcachedPipeline_bp_f_U0_keyBuffer_rp_V_V_din : STD_LOGIC_VECTOR (63 downto 0);
    signal memcachedPipeline_bp_f_U0_keyBuffer_rp_V_V_full_n : STD_LOGIC;
    signal memcachedPipeline_bp_f_U0_keyBuffer_rp_V_V_write : STD_LOGIC;
    signal memcachedPipeline_bp_f_U0_metadataBuffer_rp_V_V_din : STD_LOGIC_VECTOR (247 downto 0);
    signal memcachedPipeline_bp_f_U0_metadataBuffer_rp_V_V_full_n : STD_LOGIC;
    signal memcachedPipeline_bp_f_U0_metadataBuffer_rp_V_V_write : STD_LOGIC;
    signal memcachedPipeline_bp_f_U0_inData_TDATA : STD_LOGIC_VECTOR (63 downto 0);
    signal memcachedPipeline_bp_f_U0_inData_TREADY : STD_LOGIC;
    signal memcachedPipeline_bp_f_U0_inData_TUSER : STD_LOGIC_VECTOR (111 downto 0);
    signal memcachedPipeline_bp_f_U0_inData_TKEEP : STD_LOGIC_VECTOR (7 downto 0);
    signal memcachedPipeline_bp_f_U0_inData_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal memcachedPipeline_bp_r_U0_ap_start : STD_LOGIC := '0';
    signal memcachedPipeline_bp_r_U0_ap_done : STD_LOGIC;
    signal memcachedPipeline_bp_r_U0_ap_continue : STD_LOGIC;
    signal memcachedPipeline_bp_r_U0_ap_idle : STD_LOGIC;
    signal memcachedPipeline_bp_r_U0_ap_ready : STD_LOGIC;
    signal memcachedPipeline_bp_r_U0_keyBuffer_rp_V_V_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal memcachedPipeline_bp_r_U0_keyBuffer_rp_V_V_empty_n : STD_LOGIC;
    signal memcachedPipeline_bp_r_U0_keyBuffer_rp_V_V_read : STD_LOGIC;
    signal memcachedPipeline_bp_r_U0_valueBuffer_rp_V_V_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal memcachedPipeline_bp_r_U0_valueBuffer_rp_V_V_empty_n : STD_LOGIC;
    signal memcachedPipeline_bp_r_U0_valueBuffer_rp_V_V_read : STD_LOGIC;
    signal memcachedPipeline_bp_r_U0_metadataBuffer_rp_V_V_dout : STD_LOGIC_VECTOR (247 downto 0);
    signal memcachedPipeline_bp_r_U0_metadataBuffer_rp_V_V_empty_n : STD_LOGIC;
    signal memcachedPipeline_bp_r_U0_metadataBuffer_rp_V_V_read : STD_LOGIC;
    signal memcachedPipeline_bp_r_U0_requestParser2hashTable_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal memcachedPipeline_bp_r_U0_requestParser2hashTable_V_full_n : STD_LOGIC;
    signal memcachedPipeline_bp_r_U0_requestParser2hashTable_V_write : STD_LOGIC;
    signal memcachedPipeline_ht_inputLogic_U0_ap_start : STD_LOGIC := '0';
    signal memcachedPipeline_ht_inputLogic_U0_ap_done : STD_LOGIC;
    signal memcachedPipeline_ht_inputLogic_U0_ap_continue : STD_LOGIC;
    signal memcachedPipeline_ht_inputLogic_U0_ap_idle : STD_LOGIC;
    signal memcachedPipeline_ht_inputLogic_U0_ap_ready : STD_LOGIC;
    signal memcachedPipeline_ht_inputLogic_U0_requestParser2hashTable_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal memcachedPipeline_ht_inputLogic_U0_requestParser2hashTable_V_empty_n : STD_LOGIC;
    signal memcachedPipeline_ht_inputLogic_U0_requestParser2hashTable_V_read : STD_LOGIC;
    signal memcachedPipeline_ht_inputLogic_U0_hashValueBuffer_V_V_din : STD_LOGIC_VECTOR (63 downto 0);
    signal memcachedPipeline_ht_inputLogic_U0_hashValueBuffer_V_V_full_n : STD_LOGIC;
    signal memcachedPipeline_ht_inputLogic_U0_hashValueBuffer_V_V_write : STD_LOGIC;
    signal memcachedPipeline_ht_inputLogic_U0_hashKeyBuffer_V_V_din : STD_LOGIC_VECTOR (63 downto 0);
    signal memcachedPipeline_ht_inputLogic_U0_hashKeyBuffer_V_V_full_n : STD_LOGIC;
    signal memcachedPipeline_ht_inputLogic_U0_hashKeyBuffer_V_V_write : STD_LOGIC;
    signal memcachedPipeline_ht_inputLogic_U0_in2hashKeyLength_V_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal memcachedPipeline_ht_inputLogic_U0_in2hashKeyLength_V_V_full_n : STD_LOGIC;
    signal memcachedPipeline_ht_inputLogic_U0_in2hashKeyLength_V_V_write : STD_LOGIC;
    signal memcachedPipeline_ht_inputLogic_U0_hashMdBuffer_V_V_din : STD_LOGIC_VECTOR (127 downto 0);
    signal memcachedPipeline_ht_inputLogic_U0_hashMdBuffer_V_V_full_n : STD_LOGIC;
    signal memcachedPipeline_ht_inputLogic_U0_hashMdBuffer_V_V_write : STD_LOGIC;
    signal memcachedPipeline_ht_inputLogic_U0_in2cc_V_din : STD_LOGIC_VECTOR (129 downto 0);
    signal memcachedPipeline_ht_inputLogic_U0_in2cc_V_full_n : STD_LOGIC;
    signal memcachedPipeline_ht_inputLogic_U0_in2cc_V_write : STD_LOGIC;
    signal memcachedPipeline_ht_inputLogic_U0_in2ccMd_V_din : STD_LOGIC_VECTOR (63 downto 0);
    signal memcachedPipeline_ht_inputLogic_U0_in2ccMd_V_full_n : STD_LOGIC;
    signal memcachedPipeline_ht_inputLogic_U0_in2ccMd_V_write : STD_LOGIC;
    signal memcachedPipeline_ht_inputLogic_U0_in2hash_V_din : STD_LOGIC_VECTOR (129 downto 0);
    signal memcachedPipeline_ht_inputLogic_U0_in2hash_V_full_n : STD_LOGIC;
    signal memcachedPipeline_ht_inputLogic_U0_in2hash_V_write : STD_LOGIC;
    signal memcachedPipeline_hashKeyResizer_U0_ap_start : STD_LOGIC := '0';
    signal memcachedPipeline_hashKeyResizer_U0_ap_done : STD_LOGIC;
    signal memcachedPipeline_hashKeyResizer_U0_ap_continue : STD_LOGIC;
    signal memcachedPipeline_hashKeyResizer_U0_ap_idle : STD_LOGIC;
    signal memcachedPipeline_hashKeyResizer_U0_ap_ready : STD_LOGIC;
    signal memcachedPipeline_hashKeyResizer_U0_in2hash_V_dout : STD_LOGIC_VECTOR (129 downto 0);
    signal memcachedPipeline_hashKeyResizer_U0_in2hash_V_empty_n : STD_LOGIC;
    signal memcachedPipeline_hashKeyResizer_U0_in2hash_V_read : STD_LOGIC;
    signal memcachedPipeline_hashKeyResizer_U0_in2hashKeyLength_V_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal memcachedPipeline_hashKeyResizer_U0_in2hashKeyLength_V_V_empty_n : STD_LOGIC;
    signal memcachedPipeline_hashKeyResizer_U0_in2hashKeyLength_V_V_read : STD_LOGIC;
    signal memcachedPipeline_hashKeyResizer_U0_resizedKey_V_V_din : STD_LOGIC_VECTOR (95 downto 0);
    signal memcachedPipeline_hashKeyResizer_U0_resizedKey_V_V_full_n : STD_LOGIC;
    signal memcachedPipeline_hashKeyResizer_U0_resizedKey_V_V_write : STD_LOGIC;
    signal memcachedPipeline_hashKeyResizer_U0_resizedKeyLength_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal memcachedPipeline_hashKeyResizer_U0_resizedKeyLength_V_full_n : STD_LOGIC;
    signal memcachedPipeline_hashKeyResizer_U0_resizedKeyLength_V_write : STD_LOGIC;
    signal memcachedPipeline_hashKeyResizer_U0_resizedInitValue_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal memcachedPipeline_hashKeyResizer_U0_resizedInitValue_V_full_n : STD_LOGIC;
    signal memcachedPipeline_hashKeyResizer_U0_resizedInitValue_V_write : STD_LOGIC;
    signal memcachedPipeline_bobj_U0_ap_start : STD_LOGIC := '0';
    signal memcachedPipeline_bobj_U0_ap_done : STD_LOGIC;
    signal memcachedPipeline_bobj_U0_ap_continue : STD_LOGIC;
    signal memcachedPipeline_bobj_U0_ap_idle : STD_LOGIC;
    signal memcachedPipeline_bobj_U0_ap_ready : STD_LOGIC;
    signal memcachedPipeline_bobj_U0_resizedKey_V_V_dout : STD_LOGIC_VECTOR (95 downto 0);
    signal memcachedPipeline_bobj_U0_resizedKey_V_V_empty_n : STD_LOGIC;
    signal memcachedPipeline_bobj_U0_resizedKey_V_V_read : STD_LOGIC;
    signal memcachedPipeline_bobj_U0_resizedKeyLength_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal memcachedPipeline_bobj_U0_resizedKeyLength_V_empty_n : STD_LOGIC;
    signal memcachedPipeline_bobj_U0_resizedKeyLength_V_read : STD_LOGIC;
    signal memcachedPipeline_bobj_U0_resizedInitValue_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal memcachedPipeline_bobj_U0_resizedInitValue_V_empty_n : STD_LOGIC;
    signal memcachedPipeline_bobj_U0_resizedInitValue_V_read : STD_LOGIC;
    signal memcachedPipeline_bobj_U0_hash2cc_V_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal memcachedPipeline_bobj_U0_hash2cc_V_V_full_n : STD_LOGIC;
    signal memcachedPipeline_bobj_U0_hash2cc_V_V_write : STD_LOGIC;
    signal memcachedPipeline_concurrencyControl_U0_ap_start : STD_LOGIC := '0';
    signal memcachedPipeline_concurrencyControl_U0_ap_done : STD_LOGIC;
    signal memcachedPipeline_concurrencyControl_U0_ap_continue : STD_LOGIC;
    signal memcachedPipeline_concurrencyControl_U0_ap_idle : STD_LOGIC;
    signal memcachedPipeline_concurrencyControl_U0_ap_ready : STD_LOGIC;
    signal memcachedPipeline_concurrencyControl_U0_dec2cc_V_V_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal memcachedPipeline_concurrencyControl_U0_dec2cc_V_V_empty_n : STD_LOGIC;
    signal memcachedPipeline_concurrencyControl_U0_dec2cc_V_V_read : STD_LOGIC;
    signal memcachedPipeline_concurrencyControl_U0_in2cc_V_dout : STD_LOGIC_VECTOR (129 downto 0);
    signal memcachedPipeline_concurrencyControl_U0_in2cc_V_empty_n : STD_LOGIC;
    signal memcachedPipeline_concurrencyControl_U0_in2cc_V_read : STD_LOGIC;
    signal memcachedPipeline_concurrencyControl_U0_in2ccMd_V_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal memcachedPipeline_concurrencyControl_U0_in2ccMd_V_empty_n : STD_LOGIC;
    signal memcachedPipeline_concurrencyControl_U0_in2ccMd_V_read : STD_LOGIC;
    signal memcachedPipeline_concurrencyControl_U0_hash2cc_V_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal memcachedPipeline_concurrencyControl_U0_hash2cc_V_V_empty_n : STD_LOGIC;
    signal memcachedPipeline_concurrencyControl_U0_hash2cc_V_V_read : STD_LOGIC;
    signal memcachedPipeline_concurrencyControl_U0_cc2memRead_V_din : STD_LOGIC_VECTOR (129 downto 0);
    signal memcachedPipeline_concurrencyControl_U0_cc2memRead_V_full_n : STD_LOGIC;
    signal memcachedPipeline_concurrencyControl_U0_cc2memRead_V_write : STD_LOGIC;
    signal memcachedPipeline_concurrencyControl_U0_cc2memReadMd_V_din : STD_LOGIC_VECTOR (63 downto 0);
    signal memcachedPipeline_concurrencyControl_U0_cc2memReadMd_V_full_n : STD_LOGIC;
    signal memcachedPipeline_concurrencyControl_U0_cc2memReadMd_V_write : STD_LOGIC;
    signal memcachedPipeline_memRead_U0_ap_start : STD_LOGIC := '0';
    signal memcachedPipeline_memRead_U0_ap_done : STD_LOGIC;
    signal memcachedPipeline_memRead_U0_ap_continue : STD_LOGIC;
    signal memcachedPipeline_memRead_U0_ap_idle : STD_LOGIC;
    signal memcachedPipeline_memRead_U0_ap_ready : STD_LOGIC;
    signal memcachedPipeline_memRead_U0_cc2memReadMd_V_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal memcachedPipeline_memRead_U0_cc2memReadMd_V_empty_n : STD_LOGIC;
    signal memcachedPipeline_memRead_U0_cc2memReadMd_V_read : STD_LOGIC;
    signal memcachedPipeline_memRead_U0_cc2memRead_V_dout : STD_LOGIC_VECTOR (129 downto 0);
    signal memcachedPipeline_memRead_U0_cc2memRead_V_empty_n : STD_LOGIC;
    signal memcachedPipeline_memRead_U0_cc2memRead_V_read : STD_LOGIC;
    signal memcachedPipeline_memRead_U0_memRd2comp_V_din : STD_LOGIC_VECTOR (129 downto 0);
    signal memcachedPipeline_memRead_U0_memRd2comp_V_full_n : STD_LOGIC;
    signal memcachedPipeline_memRead_U0_memRd2comp_V_write : STD_LOGIC;
    signal memcachedPipeline_memRead_U0_memRd2compMd_V_din : STD_LOGIC_VECTOR (63 downto 0);
    signal memcachedPipeline_memRead_U0_memRd2compMd_V_full_n : STD_LOGIC;
    signal memcachedPipeline_memRead_U0_memRd2compMd_V_write : STD_LOGIC;
    signal memcachedPipeline_memRead_U0_memRdCtrl_V_TREADY : STD_LOGIC;
    signal memcachedPipeline_memRead_U0_memRdCtrl_V_TDATA : STD_LOGIC_VECTOR (39 downto 0);
    signal memcachedPipeline_memRead_U0_memRdCtrl_V_TVALID : STD_LOGIC;
    signal ap_sig_hs_continue : STD_LOGIC;
    signal memcachedPipeline_ht_compare_U0_ap_start : STD_LOGIC;
    signal memcachedPipeline_ht_compare_U0_ap_done : STD_LOGIC;
    signal memcachedPipeline_ht_compare_U0_ap_continue : STD_LOGIC;
    signal memcachedPipeline_ht_compare_U0_ap_idle : STD_LOGIC;
    signal memcachedPipeline_ht_compare_U0_ap_ready : STD_LOGIC;
    signal memcachedPipeline_ht_compare_U0_memRd2comp_V_dout : STD_LOGIC_VECTOR (129 downto 0);
    signal memcachedPipeline_ht_compare_U0_memRd2comp_V_empty_n : STD_LOGIC;
    signal memcachedPipeline_ht_compare_U0_memRd2comp_V_read : STD_LOGIC;
    signal memcachedPipeline_ht_compare_U0_memRdData_V_V_TVALID : STD_LOGIC;
    signal memcachedPipeline_ht_compare_U0_memRd2compMd_V_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal memcachedPipeline_ht_compare_U0_memRd2compMd_V_empty_n : STD_LOGIC;
    signal memcachedPipeline_ht_compare_U0_memRd2compMd_V_read : STD_LOGIC;
    signal memcachedPipeline_ht_compare_U0_comp2memWrKey_V_din : STD_LOGIC_VECTOR (129 downto 0);
    signal memcachedPipeline_ht_compare_U0_comp2memWrKey_V_full_n : STD_LOGIC;
    signal memcachedPipeline_ht_compare_U0_comp2memWrKey_V_write : STD_LOGIC;
    signal memcachedPipeline_ht_compare_U0_comp2memWrMd_V_din : STD_LOGIC_VECTOR (63 downto 0);
    signal memcachedPipeline_ht_compare_U0_comp2memWrMd_V_full_n : STD_LOGIC;
    signal memcachedPipeline_ht_compare_U0_comp2memWrMd_V_write : STD_LOGIC;
    signal memcachedPipeline_ht_compare_U0_comp2memWrStatus_V_bin_din : STD_LOGIC_VECTOR (7 downto 0);
    signal memcachedPipeline_ht_compare_U0_comp2memWrStatus_V_bin_full_n : STD_LOGIC;
    signal memcachedPipeline_ht_compare_U0_comp2memWrStatus_V_bin_write : STD_LOGIC;
    signal memcachedPipeline_ht_compare_U0_comp2memWrMemData_V_V_din : STD_LOGIC_VECTOR (511 downto 0);
    signal memcachedPipeline_ht_compare_U0_comp2memWrMemData_V_V_full_n : STD_LOGIC;
    signal memcachedPipeline_ht_compare_U0_comp2memWrMemData_V_V_write : STD_LOGIC;
    signal memcachedPipeline_ht_compare_U0_memRdData_V_V_TDATA : STD_LOGIC_VECTOR (511 downto 0);
    signal memcachedPipeline_ht_compare_U0_memRdData_V_V_TREADY : STD_LOGIC;
    signal memcachedPipeline_memWrite_U0_ap_start : STD_LOGIC;
    signal memcachedPipeline_memWrite_U0_ap_done : STD_LOGIC;
    signal memcachedPipeline_memWrite_U0_ap_continue : STD_LOGIC;
    signal memcachedPipeline_memWrite_U0_ap_idle : STD_LOGIC;
    signal memcachedPipeline_memWrite_U0_ap_ready : STD_LOGIC;
    signal memcachedPipeline_memWrite_U0_comp2memWrKey_V_dout : STD_LOGIC_VECTOR (129 downto 0);
    signal memcachedPipeline_memWrite_U0_comp2memWrKey_V_empty_n : STD_LOGIC;
    signal memcachedPipeline_memWrite_U0_comp2memWrKey_V_read : STD_LOGIC;
    signal memcachedPipeline_memWrite_U0_comp2memWrMemData_V_V_dout : STD_LOGIC_VECTOR (511 downto 0);
    signal memcachedPipeline_memWrite_U0_comp2memWrMemData_V_V_empty_n : STD_LOGIC;
    signal memcachedPipeline_memWrite_U0_comp2memWrMemData_V_V_read : STD_LOGIC;
    signal memcachedPipeline_memWrite_U0_addressAssignFlashIn_V_V_TVALID : STD_LOGIC;
    signal memcachedPipeline_memWrite_U0_addressAssignDramIn_V_V_TVALID : STD_LOGIC;
    signal memcachedPipeline_memWrite_U0_comp2memWrStatus_V_bin_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal memcachedPipeline_memWrite_U0_comp2memWrStatus_V_bin_empty_n : STD_LOGIC;
    signal memcachedPipeline_memWrite_U0_comp2memWrStatus_V_bin_read : STD_LOGIC;
    signal memcachedPipeline_memWrite_U0_comp2memWrMd_V_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal memcachedPipeline_memWrite_U0_comp2memWrMd_V_empty_n : STD_LOGIC;
    signal memcachedPipeline_memWrite_U0_comp2memWrMd_V_read : STD_LOGIC;
    signal memcachedPipeline_memWrite_U0_dec2cc_V_V_din : STD_LOGIC_VECTOR (0 downto 0);
    signal memcachedPipeline_memWrite_U0_dec2cc_V_V_full_n : STD_LOGIC;
    signal memcachedPipeline_memWrite_U0_dec2cc_V_V_write : STD_LOGIC;
    signal memcachedPipeline_memWrite_U0_memWr2out_V_din : STD_LOGIC_VECTOR (56 downto 0);
    signal memcachedPipeline_memWrite_U0_memWr2out_V_full_n : STD_LOGIC;
    signal memcachedPipeline_memWrite_U0_memWr2out_V_write : STD_LOGIC;
    signal memcachedPipeline_memWrite_U0_memWrCtrl_V_TREADY : STD_LOGIC;
    signal memcachedPipeline_memWrite_U0_memWrData_V_V_TREADY : STD_LOGIC;
    signal memcachedPipeline_memWrite_U0_addressReturnOut_V_V_TREADY : STD_LOGIC;
    signal memcachedPipeline_memWrite_U0_memWrCtrl_V_TDATA : STD_LOGIC_VECTOR (39 downto 0);
    signal memcachedPipeline_memWrite_U0_memWrCtrl_V_TVALID : STD_LOGIC;
    signal memcachedPipeline_memWrite_U0_memWrData_V_V_TDATA : STD_LOGIC_VECTOR (511 downto 0);
    signal memcachedPipeline_memWrite_U0_memWrData_V_V_TVALID : STD_LOGIC;
    signal memcachedPipeline_memWrite_U0_addressReturnOut_V_V_TDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal memcachedPipeline_memWrite_U0_addressReturnOut_V_V_TVALID : STD_LOGIC;
    signal memcachedPipeline_memWrite_U0_addressAssignDramIn_V_V_TDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal memcachedPipeline_memWrite_U0_addressAssignDramIn_V_V_TREADY : STD_LOGIC;
    signal memcachedPipeline_memWrite_U0_addressAssignFlashIn_V_V_TDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal memcachedPipeline_memWrite_U0_addressAssignFlashIn_V_V_TREADY : STD_LOGIC;
    signal memcachedPipeline_memWrite_U0_flushReq_V : STD_LOGIC_VECTOR (0 downto 0);
    signal memcachedPipeline_memWrite_U0_flushReq_V_ap_vld : STD_LOGIC;
    signal memcachedPipeline_memWrite_U0_flushAck_V : STD_LOGIC_VECTOR (0 downto 0);
    signal memcachedPipeline_memWrite_U0_flushDone_V : STD_LOGIC_VECTOR (0 downto 0);
    signal memcachedPipeline_memWrite_U0_flushDone_V_ap_vld : STD_LOGIC;
    signal memcachedPipeline_ht_outputLogic_U0_ap_start : STD_LOGIC := '0';
    signal memcachedPipeline_ht_outputLogic_U0_ap_done : STD_LOGIC;
    signal memcachedPipeline_ht_outputLogic_U0_ap_continue : STD_LOGIC;
    signal memcachedPipeline_ht_outputLogic_U0_ap_idle : STD_LOGIC;
    signal memcachedPipeline_ht_outputLogic_U0_ap_ready : STD_LOGIC;
    signal memcachedPipeline_ht_outputLogic_U0_hashKeyBuffer_V_V_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal memcachedPipeline_ht_outputLogic_U0_hashKeyBuffer_V_V_empty_n : STD_LOGIC;
    signal memcachedPipeline_ht_outputLogic_U0_hashKeyBuffer_V_V_read : STD_LOGIC;
    signal memcachedPipeline_ht_outputLogic_U0_hashValueBuffer_V_V_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal memcachedPipeline_ht_outputLogic_U0_hashValueBuffer_V_V_empty_n : STD_LOGIC;
    signal memcachedPipeline_ht_outputLogic_U0_hashValueBuffer_V_V_read : STD_LOGIC;
    signal memcachedPipeline_ht_outputLogic_U0_hashMdBuffer_V_V_dout : STD_LOGIC_VECTOR (127 downto 0);
    signal memcachedPipeline_ht_outputLogic_U0_hashMdBuffer_V_V_empty_n : STD_LOGIC;
    signal memcachedPipeline_ht_outputLogic_U0_hashMdBuffer_V_V_read : STD_LOGIC;
    signal memcachedPipeline_ht_outputLogic_U0_memWr2out_V_dout : STD_LOGIC_VECTOR (56 downto 0);
    signal memcachedPipeline_ht_outputLogic_U0_memWr2out_V_empty_n : STD_LOGIC;
    signal memcachedPipeline_ht_outputLogic_U0_memWr2out_V_read : STD_LOGIC;
    signal memcachedPipeline_ht_outputLogic_U0_hashTable2splitter_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal memcachedPipeline_ht_outputLogic_U0_hashTable2splitter_V_full_n : STD_LOGIC;
    signal memcachedPipeline_ht_outputLogic_U0_hashTable2splitter_V_write : STD_LOGIC;
    signal memcachedPipeline_splitter_U0_ap_start : STD_LOGIC := '0';
    signal memcachedPipeline_splitter_U0_ap_done : STD_LOGIC;
    signal memcachedPipeline_splitter_U0_ap_continue : STD_LOGIC;
    signal memcachedPipeline_splitter_U0_ap_idle : STD_LOGIC;
    signal memcachedPipeline_splitter_U0_ap_ready : STD_LOGIC;
    signal memcachedPipeline_splitter_U0_hashTable2splitter_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal memcachedPipeline_splitter_U0_hashTable2splitter_V_empty_n : STD_LOGIC;
    signal memcachedPipeline_splitter_U0_hashTable2splitter_V_read : STD_LOGIC;
    signal memcachedPipeline_splitter_U0_splitter2valueStoreFlash_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal memcachedPipeline_splitter_U0_splitter2valueStoreFlash_V_full_n : STD_LOGIC;
    signal memcachedPipeline_splitter_U0_splitter2valueStoreFlash_V_write : STD_LOGIC;
    signal memcachedPipeline_splitter_U0_splitter2valueStoreDram_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal memcachedPipeline_splitter_U0_splitter2valueStoreDram_V_full_n : STD_LOGIC;
    signal memcachedPipeline_splitter_U0_splitter2valueStoreDram_V_write : STD_LOGIC;
    signal memcachedPipeline_accessControl_U0_ap_start : STD_LOGIC := '0';
    signal memcachedPipeline_accessControl_U0_ap_done : STD_LOGIC;
    signal memcachedPipeline_accessControl_U0_ap_continue : STD_LOGIC;
    signal memcachedPipeline_accessControl_U0_ap_idle : STD_LOGIC;
    signal memcachedPipeline_accessControl_U0_ap_ready : STD_LOGIC;
    signal memcachedPipeline_accessControl_U0_filterPopGet_V_V_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal memcachedPipeline_accessControl_U0_filterPopGet_V_V_empty_n : STD_LOGIC;
    signal memcachedPipeline_accessControl_U0_filterPopGet_V_V_read : STD_LOGIC;
    signal memcachedPipeline_accessControl_U0_filterPopSet_V_V_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal memcachedPipeline_accessControl_U0_filterPopSet_V_V_empty_n : STD_LOGIC;
    signal memcachedPipeline_accessControl_U0_filterPopSet_V_V_read : STD_LOGIC;
    signal memcachedPipeline_accessControl_U0_splitter2valueStoreDram_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal memcachedPipeline_accessControl_U0_splitter2valueStoreDram_V_empty_n : STD_LOGIC;
    signal memcachedPipeline_accessControl_U0_splitter2valueStoreDram_V_read : STD_LOGIC;
    signal memcachedPipeline_accessControl_U0_accCtrl2demux_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal memcachedPipeline_accessControl_U0_accCtrl2demux_V_full_n : STD_LOGIC;
    signal memcachedPipeline_accessControl_U0_accCtrl2demux_V_write : STD_LOGIC;
    signal memcachedPipeline_demux_U0_ap_start : STD_LOGIC := '0';
    signal memcachedPipeline_demux_U0_ap_done : STD_LOGIC;
    signal memcachedPipeline_demux_U0_ap_continue : STD_LOGIC;
    signal memcachedPipeline_demux_U0_ap_idle : STD_LOGIC;
    signal memcachedPipeline_demux_U0_ap_ready : STD_LOGIC;
    signal memcachedPipeline_demux_U0_accCtrl2demux_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal memcachedPipeline_demux_U0_accCtrl2demux_V_empty_n : STD_LOGIC;
    signal memcachedPipeline_demux_U0_accCtrl2demux_V_read : STD_LOGIC;
    signal memcachedPipeline_demux_U0_metadataBuffer_V_din : STD_LOGIC_VECTOR (127 downto 0);
    signal memcachedPipeline_demux_U0_metadataBuffer_V_full_n : STD_LOGIC;
    signal memcachedPipeline_demux_U0_metadataBuffer_V_write : STD_LOGIC;
    signal memcachedPipeline_demux_U0_keyBuffer_V_V_din : STD_LOGIC_VECTOR (63 downto 0);
    signal memcachedPipeline_demux_U0_keyBuffer_V_V_full_n : STD_LOGIC;
    signal memcachedPipeline_demux_U0_keyBuffer_V_V_write : STD_LOGIC;
    signal memcachedPipeline_demux_U0_demux2setPathValue_V_din : STD_LOGIC_VECTOR (65 downto 0);
    signal memcachedPipeline_demux_U0_demux2setPathValue_V_full_n : STD_LOGIC;
    signal memcachedPipeline_demux_U0_demux2setPathValue_V_write : STD_LOGIC;
    signal memcachedPipeline_demux_U0_demux2setPathMetadata_V_din : STD_LOGIC_VECTOR (44 downto 0);
    signal memcachedPipeline_demux_U0_demux2setPathMetadata_V_full_n : STD_LOGIC;
    signal memcachedPipeline_demux_U0_demux2setPathMetadata_V_write : STD_LOGIC;
    signal memcachedPipeline_demux_U0_demux2getPath_V_din : STD_LOGIC_VECTOR (44 downto 0);
    signal memcachedPipeline_demux_U0_demux2getPath_V_full_n : STD_LOGIC;
    signal memcachedPipeline_demux_U0_demux2getPath_V_write : STD_LOGIC;
    signal memcachedPipeline_setPath_U0_ap_start : STD_LOGIC := '0';
    signal memcachedPipeline_setPath_U0_ap_done : STD_LOGIC;
    signal memcachedPipeline_setPath_U0_ap_continue : STD_LOGIC;
    signal memcachedPipeline_setPath_U0_ap_idle : STD_LOGIC;
    signal memcachedPipeline_setPath_U0_ap_ready : STD_LOGIC;
    signal memcachedPipeline_setPath_U0_demux2setPathValue_V_dout : STD_LOGIC_VECTOR (65 downto 0);
    signal memcachedPipeline_setPath_U0_demux2setPathValue_V_empty_n : STD_LOGIC;
    signal memcachedPipeline_setPath_U0_demux2setPathValue_V_read : STD_LOGIC;
    signal memcachedPipeline_setPath_U0_demux2setPathMetadata_V_dout : STD_LOGIC_VECTOR (44 downto 0);
    signal memcachedPipeline_setPath_U0_demux2setPathMetadata_V_empty_n : STD_LOGIC;
    signal memcachedPipeline_setPath_U0_demux2setPathMetadata_V_read : STD_LOGIC;
    signal memcachedPipeline_setPath_U0_filterPopSet_V_V_din : STD_LOGIC_VECTOR (0 downto 0);
    signal memcachedPipeline_setPath_U0_filterPopSet_V_V_full_n : STD_LOGIC;
    signal memcachedPipeline_setPath_U0_filterPopSet_V_V_write : STD_LOGIC;
    signal memcachedPipeline_setPath_U0_memWrData_V_V_TREADY : STD_LOGIC;
    signal memcachedPipeline_setPath_U0_memWrCmd_V_TREADY : STD_LOGIC;
    signal memcachedPipeline_setPath_U0_memWrCmd_V_TDATA : STD_LOGIC_VECTOR (39 downto 0);
    signal memcachedPipeline_setPath_U0_memWrCmd_V_TVALID : STD_LOGIC;
    signal memcachedPipeline_setPath_U0_memWrData_V_V_TDATA : STD_LOGIC_VECTOR (511 downto 0);
    signal memcachedPipeline_setPath_U0_memWrData_V_V_TVALID : STD_LOGIC;
    signal memcachedPipeline_dispatch_U0_ap_start : STD_LOGIC := '0';
    signal memcachedPipeline_dispatch_U0_ap_done : STD_LOGIC;
    signal memcachedPipeline_dispatch_U0_ap_continue : STD_LOGIC;
    signal memcachedPipeline_dispatch_U0_ap_idle : STD_LOGIC;
    signal memcachedPipeline_dispatch_U0_ap_ready : STD_LOGIC;
    signal memcachedPipeline_dispatch_U0_demux2getPath_V_dout : STD_LOGIC_VECTOR (44 downto 0);
    signal memcachedPipeline_dispatch_U0_demux2getPath_V_empty_n : STD_LOGIC;
    signal memcachedPipeline_dispatch_U0_demux2getPath_V_read : STD_LOGIC;
    signal memcachedPipeline_dispatch_U0_disp2rec_V_V_din : STD_LOGIC_VECTOR (11 downto 0);
    signal memcachedPipeline_dispatch_U0_disp2rec_V_V_full_n : STD_LOGIC;
    signal memcachedPipeline_dispatch_U0_disp2rec_V_V_write : STD_LOGIC;
    signal memcachedPipeline_dispatch_U0_memRdCmd_V_TREADY : STD_LOGIC;
    signal memcachedPipeline_dispatch_U0_memRdCmd_V_TDATA : STD_LOGIC_VECTOR (39 downto 0);
    signal memcachedPipeline_dispatch_U0_memRdCmd_V_TVALID : STD_LOGIC;
    signal memcachedPipeline_receive_U0_ap_start : STD_LOGIC;
    signal memcachedPipeline_receive_U0_ap_done : STD_LOGIC;
    signal memcachedPipeline_receive_U0_ap_continue : STD_LOGIC;
    signal memcachedPipeline_receive_U0_ap_idle : STD_LOGIC;
    signal memcachedPipeline_receive_U0_ap_ready : STD_LOGIC;
    signal memcachedPipeline_receive_U0_disp2rec_V_V_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal memcachedPipeline_receive_U0_disp2rec_V_V_empty_n : STD_LOGIC;
    signal memcachedPipeline_receive_U0_disp2rec_V_V_read : STD_LOGIC;
    signal memcachedPipeline_receive_U0_memRdData_V_V_TVALID : STD_LOGIC;
    signal memcachedPipeline_receive_U0_getPath2remux_V_V_din : STD_LOGIC_VECTOR (63 downto 0);
    signal memcachedPipeline_receive_U0_getPath2remux_V_V_full_n : STD_LOGIC;
    signal memcachedPipeline_receive_U0_getPath2remux_V_V_write : STD_LOGIC;
    signal memcachedPipeline_receive_U0_filterPopGet_V_V_din : STD_LOGIC_VECTOR (0 downto 0);
    signal memcachedPipeline_receive_U0_filterPopGet_V_V_full_n : STD_LOGIC;
    signal memcachedPipeline_receive_U0_filterPopGet_V_V_write : STD_LOGIC;
    signal memcachedPipeline_receive_U0_memRdData_V_V_TDATA : STD_LOGIC_VECTOR (511 downto 0);
    signal memcachedPipeline_receive_U0_memRdData_V_V_TREADY : STD_LOGIC;
    signal memcachedPipeline_remux_U0_ap_start : STD_LOGIC := '0';
    signal memcachedPipeline_remux_U0_ap_done : STD_LOGIC;
    signal memcachedPipeline_remux_U0_ap_continue : STD_LOGIC;
    signal memcachedPipeline_remux_U0_ap_idle : STD_LOGIC;
    signal memcachedPipeline_remux_U0_ap_ready : STD_LOGIC;
    signal memcachedPipeline_remux_U0_keyBuffer_V_V_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal memcachedPipeline_remux_U0_keyBuffer_V_V_empty_n : STD_LOGIC;
    signal memcachedPipeline_remux_U0_keyBuffer_V_V_read : STD_LOGIC;
    signal memcachedPipeline_remux_U0_getPath2remux_V_V_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal memcachedPipeline_remux_U0_getPath2remux_V_V_empty_n : STD_LOGIC;
    signal memcachedPipeline_remux_U0_getPath2remux_V_V_read : STD_LOGIC;
    signal memcachedPipeline_remux_U0_metadataBuffer_V_dout : STD_LOGIC_VECTOR (127 downto 0);
    signal memcachedPipeline_remux_U0_metadataBuffer_V_empty_n : STD_LOGIC;
    signal memcachedPipeline_remux_U0_metadataBuffer_V_read : STD_LOGIC;
    signal memcachedPipeline_remux_U0_valueStoreDram2merger_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal memcachedPipeline_remux_U0_valueStoreDram2merger_V_full_n : STD_LOGIC;
    signal memcachedPipeline_remux_U0_valueStoreDram2merger_V_write : STD_LOGIC;
    signal memcachedPipeline_flashDemux_U0_ap_start : STD_LOGIC := '0';
    signal memcachedPipeline_flashDemux_U0_ap_done : STD_LOGIC;
    signal memcachedPipeline_flashDemux_U0_ap_continue : STD_LOGIC;
    signal memcachedPipeline_flashDemux_U0_ap_idle : STD_LOGIC;
    signal memcachedPipeline_flashDemux_U0_ap_ready : STD_LOGIC;
    signal memcachedPipeline_flashDemux_U0_splitter2valueStoreFlash_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal memcachedPipeline_flashDemux_U0_splitter2valueStoreFlash_V_empty_n : STD_LOGIC;
    signal memcachedPipeline_flashDemux_U0_splitter2valueStoreFlash_V_read : STD_LOGIC;
    signal memcachedPipeline_flashDemux_U0_flashMetadataBuffer_V_din : STD_LOGIC_VECTOR (127 downto 0);
    signal memcachedPipeline_flashDemux_U0_flashMetadataBuffer_V_full_n : STD_LOGIC;
    signal memcachedPipeline_flashDemux_U0_flashMetadataBuffer_V_write : STD_LOGIC;
    signal memcachedPipeline_flashDemux_U0_flashKeyBuffer_V_V_din : STD_LOGIC_VECTOR (63 downto 0);
    signal memcachedPipeline_flashDemux_U0_flashKeyBuffer_V_V_full_n : STD_LOGIC;
    signal memcachedPipeline_flashDemux_U0_flashKeyBuffer_V_V_write : STD_LOGIC;
    signal memcachedPipeline_flashDemux_U0_flashDemux2setPathValue_V_din : STD_LOGIC_VECTOR (65 downto 0);
    signal memcachedPipeline_flashDemux_U0_flashDemux2setPathValue_V_full_n : STD_LOGIC;
    signal memcachedPipeline_flashDemux_U0_flashDemux2setPathValue_V_write : STD_LOGIC;
    signal memcachedPipeline_flashDemux_U0_flashDemux2setPathMetadata_V_din : STD_LOGIC_VECTOR (47 downto 0);
    signal memcachedPipeline_flashDemux_U0_flashDemux2setPathMetadata_V_full_n : STD_LOGIC;
    signal memcachedPipeline_flashDemux_U0_flashDemux2setPathMetadata_V_write : STD_LOGIC;
    signal memcachedPipeline_flashDemux_U0_flashDemux2getPath_V_din : STD_LOGIC_VECTOR (47 downto 0);
    signal memcachedPipeline_flashDemux_U0_flashDemux2getPath_V_full_n : STD_LOGIC;
    signal memcachedPipeline_flashDemux_U0_flashDemux2getPath_V_write : STD_LOGIC;
    signal memcachedPipeline_flashSetPathNoFilter_U0_ap_start : STD_LOGIC := '0';
    signal memcachedPipeline_flashSetPathNoFilter_U0_ap_done : STD_LOGIC;
    signal memcachedPipeline_flashSetPathNoFilter_U0_ap_continue : STD_LOGIC;
    signal memcachedPipeline_flashSetPathNoFilter_U0_ap_idle : STD_LOGIC;
    signal memcachedPipeline_flashSetPathNoFilter_U0_ap_ready : STD_LOGIC;
    signal memcachedPipeline_flashSetPathNoFilter_U0_flashDemux2setPathMetadata_V_dout : STD_LOGIC_VECTOR (47 downto 0);
    signal memcachedPipeline_flashSetPathNoFilter_U0_flashDemux2setPathMetadata_V_empty_n : STD_LOGIC;
    signal memcachedPipeline_flashSetPathNoFilter_U0_flashDemux2setPathMetadata_V_read : STD_LOGIC;
    signal memcachedPipeline_flashSetPathNoFilter_U0_flashDemux2setPathValue_V_dout : STD_LOGIC_VECTOR (65 downto 0);
    signal memcachedPipeline_flashSetPathNoFilter_U0_flashDemux2setPathValue_V_empty_n : STD_LOGIC;
    signal memcachedPipeline_flashSetPathNoFilter_U0_flashDemux2setPathValue_V_read : STD_LOGIC;
    signal memcachedPipeline_flashSetPathNoFilter_U0_memWrCmd_V_TREADY : STD_LOGIC;
    signal memcachedPipeline_flashSetPathNoFilter_U0_memWrData_V_V_TREADY : STD_LOGIC;
    signal memcachedPipeline_flashSetPathNoFilter_U0_memWrCmd_V_TDATA : STD_LOGIC_VECTOR (47 downto 0);
    signal memcachedPipeline_flashSetPathNoFilter_U0_memWrCmd_V_TVALID : STD_LOGIC;
    signal memcachedPipeline_flashSetPathNoFilter_U0_memWrData_V_V_TDATA : STD_LOGIC_VECTOR (63 downto 0);
    signal memcachedPipeline_flashSetPathNoFilter_U0_memWrData_V_V_TVALID : STD_LOGIC;
    signal memcachedPipeline_flashDispatch_U0_ap_start : STD_LOGIC := '0';
    signal memcachedPipeline_flashDispatch_U0_ap_done : STD_LOGIC;
    signal memcachedPipeline_flashDispatch_U0_ap_continue : STD_LOGIC;
    signal memcachedPipeline_flashDispatch_U0_ap_idle : STD_LOGIC;
    signal memcachedPipeline_flashDispatch_U0_ap_ready : STD_LOGIC;
    signal memcachedPipeline_flashDispatch_U0_flashDemux2getPath_V_dout : STD_LOGIC_VECTOR (47 downto 0);
    signal memcachedPipeline_flashDispatch_U0_flashDemux2getPath_V_empty_n : STD_LOGIC;
    signal memcachedPipeline_flashDispatch_U0_flashDemux2getPath_V_read : STD_LOGIC;
    signal memcachedPipeline_flashDispatch_U0_flash_Disp2rec_V_V_din : STD_LOGIC_VECTOR (15 downto 0);
    signal memcachedPipeline_flashDispatch_U0_flash_Disp2rec_V_V_full_n : STD_LOGIC;
    signal memcachedPipeline_flashDispatch_U0_flash_Disp2rec_V_V_write : STD_LOGIC;
    signal memcachedPipeline_flashDispatch_U0_memRdCmd_V_TREADY : STD_LOGIC;
    signal memcachedPipeline_flashDispatch_U0_memRdCmd_V_TDATA : STD_LOGIC_VECTOR (47 downto 0);
    signal memcachedPipeline_flashDispatch_U0_memRdCmd_V_TVALID : STD_LOGIC;
    signal memcachedPipeline_flashReceiveNoFilter_U0_ap_start : STD_LOGIC;
    signal memcachedPipeline_flashReceiveNoFilter_U0_ap_done : STD_LOGIC;
    signal memcachedPipeline_flashReceiveNoFilter_U0_ap_continue : STD_LOGIC;
    signal memcachedPipeline_flashReceiveNoFilter_U0_ap_idle : STD_LOGIC;
    signal memcachedPipeline_flashReceiveNoFilter_U0_ap_ready : STD_LOGIC;
    signal memcachedPipeline_flashReceiveNoFilter_U0_flash_Disp2rec_V_V_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal memcachedPipeline_flashReceiveNoFilter_U0_flash_Disp2rec_V_V_empty_n : STD_LOGIC;
    signal memcachedPipeline_flashReceiveNoFilter_U0_flash_Disp2rec_V_V_read : STD_LOGIC;
    signal memcachedPipeline_flashReceiveNoFilter_U0_memRdData_V_V_TVALID : STD_LOGIC;
    signal memcachedPipeline_flashReceiveNoFilter_U0_flashGetPath2remux_V_V_din : STD_LOGIC_VECTOR (63 downto 0);
    signal memcachedPipeline_flashReceiveNoFilter_U0_flashGetPath2remux_V_V_full_n : STD_LOGIC;
    signal memcachedPipeline_flashReceiveNoFilter_U0_flashGetPath2remux_V_V_write : STD_LOGIC;
    signal memcachedPipeline_flashReceiveNoFilter_U0_memRdData_V_V_TDATA : STD_LOGIC_VECTOR (63 downto 0);
    signal memcachedPipeline_flashReceiveNoFilter_U0_memRdData_V_V_TREADY : STD_LOGIC;
    signal memcachedPipeline_flashRemux_U0_ap_start : STD_LOGIC := '0';
    signal memcachedPipeline_flashRemux_U0_ap_done : STD_LOGIC;
    signal memcachedPipeline_flashRemux_U0_ap_continue : STD_LOGIC;
    signal memcachedPipeline_flashRemux_U0_ap_idle : STD_LOGIC;
    signal memcachedPipeline_flashRemux_U0_ap_ready : STD_LOGIC;
    signal memcachedPipeline_flashRemux_U0_flashKeyBuffer_V_V_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal memcachedPipeline_flashRemux_U0_flashKeyBuffer_V_V_empty_n : STD_LOGIC;
    signal memcachedPipeline_flashRemux_U0_flashKeyBuffer_V_V_read : STD_LOGIC;
    signal memcachedPipeline_flashRemux_U0_flashGetPath2remux_V_V_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal memcachedPipeline_flashRemux_U0_flashGetPath2remux_V_V_empty_n : STD_LOGIC;
    signal memcachedPipeline_flashRemux_U0_flashGetPath2remux_V_V_read : STD_LOGIC;
    signal memcachedPipeline_flashRemux_U0_flashMetadataBuffer_V_dout : STD_LOGIC_VECTOR (127 downto 0);
    signal memcachedPipeline_flashRemux_U0_flashMetadataBuffer_V_empty_n : STD_LOGIC;
    signal memcachedPipeline_flashRemux_U0_flashMetadataBuffer_V_read : STD_LOGIC;
    signal memcachedPipeline_flashRemux_U0_valueStoreFlash2merger_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal memcachedPipeline_flashRemux_U0_valueStoreFlash2merger_V_full_n : STD_LOGIC;
    signal memcachedPipeline_flashRemux_U0_valueStoreFlash2merger_V_write : STD_LOGIC;
    signal memcachedPipeline_merger_U0_ap_start : STD_LOGIC := '0';
    signal memcachedPipeline_merger_U0_ap_done : STD_LOGIC;
    signal memcachedPipeline_merger_U0_ap_continue : STD_LOGIC;
    signal memcachedPipeline_merger_U0_ap_idle : STD_LOGIC;
    signal memcachedPipeline_merger_U0_ap_ready : STD_LOGIC;
    signal memcachedPipeline_merger_U0_valueStoreDram2merger_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal memcachedPipeline_merger_U0_valueStoreDram2merger_V_empty_n : STD_LOGIC;
    signal memcachedPipeline_merger_U0_valueStoreDram2merger_V_read : STD_LOGIC;
    signal memcachedPipeline_merger_U0_valueStoreFlash2merger_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal memcachedPipeline_merger_U0_valueStoreFlash2merger_V_empty_n : STD_LOGIC;
    signal memcachedPipeline_merger_U0_valueStoreFlash2merger_V_read : STD_LOGIC;
    signal memcachedPipeline_merger_U0_merger2responseFormatter_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal memcachedPipeline_merger_U0_merger2responseFormatter_V_full_n : STD_LOGIC;
    signal memcachedPipeline_merger_U0_merger2responseFormatter_V_write : STD_LOGIC;
    signal memcachedPipeline_response_f_U0_ap_start : STD_LOGIC := '0';
    signal memcachedPipeline_response_f_U0_ap_done : STD_LOGIC;
    signal memcachedPipeline_response_f_U0_ap_continue : STD_LOGIC;
    signal memcachedPipeline_response_f_U0_ap_idle : STD_LOGIC;
    signal memcachedPipeline_response_f_U0_ap_ready : STD_LOGIC;
    signal memcachedPipeline_response_f_U0_valueBuffer_rf_V_V_din : STD_LOGIC_VECTOR (63 downto 0);
    signal memcachedPipeline_response_f_U0_valueBuffer_rf_V_V_full_n : STD_LOGIC;
    signal memcachedPipeline_response_f_U0_valueBuffer_rf_V_V_write : STD_LOGIC;
    signal memcachedPipeline_response_f_U0_metadataBuffer_rf_V_V_din : STD_LOGIC_VECTOR (247 downto 0);
    signal memcachedPipeline_response_f_U0_metadataBuffer_rf_V_V_full_n : STD_LOGIC;
    signal memcachedPipeline_response_f_U0_metadataBuffer_rf_V_V_write : STD_LOGIC;
    signal memcachedPipeline_response_f_U0_merger2responseFormatter_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal memcachedPipeline_response_f_U0_merger2responseFormatter_V_empty_n : STD_LOGIC;
    signal memcachedPipeline_response_f_U0_merger2responseFormatter_V_read : STD_LOGIC;
    signal memcachedPipeline_response_r_U0_ap_start : STD_LOGIC := '0';
    signal memcachedPipeline_response_r_U0_ap_done : STD_LOGIC;
    signal memcachedPipeline_response_r_U0_ap_continue : STD_LOGIC;
    signal memcachedPipeline_response_r_U0_ap_idle : STD_LOGIC;
    signal memcachedPipeline_response_r_U0_ap_ready : STD_LOGIC;
    signal memcachedPipeline_response_r_U0_valueBuffer_rf_V_V_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal memcachedPipeline_response_r_U0_valueBuffer_rf_V_V_empty_n : STD_LOGIC;
    signal memcachedPipeline_response_r_U0_valueBuffer_rf_V_V_read : STD_LOGIC;
    signal memcachedPipeline_response_r_U0_metadataBuffer_rf_V_V_dout : STD_LOGIC_VECTOR (247 downto 0);
    signal memcachedPipeline_response_r_U0_metadataBuffer_rf_V_V_empty_n : STD_LOGIC;
    signal memcachedPipeline_response_r_U0_metadataBuffer_rf_V_V_read : STD_LOGIC;
    signal memcachedPipeline_response_r_U0_outData_TREADY : STD_LOGIC;
    signal memcachedPipeline_response_r_U0_outData_TDATA : STD_LOGIC_VECTOR (63 downto 0);
    signal memcachedPipeline_response_r_U0_outData_TVALID : STD_LOGIC;
    signal memcachedPipeline_response_r_U0_outData_TUSER : STD_LOGIC_VECTOR (111 downto 0);
    signal memcachedPipeline_response_r_U0_outData_TKEEP : STD_LOGIC_VECTOR (7 downto 0);
    signal memcachedPipeline_response_r_U0_outData_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal metadataBuffer_rp_V_V_U_ap_dummy_ce : STD_LOGIC;
    signal metadataBuffer_rp_V_V_din : STD_LOGIC_VECTOR (247 downto 0);
    signal metadataBuffer_rp_V_V_full_n : STD_LOGIC;
    signal metadataBuffer_rp_V_V_write : STD_LOGIC;
    signal metadataBuffer_rp_V_V_dout : STD_LOGIC_VECTOR (247 downto 0);
    signal metadataBuffer_rp_V_V_empty_n : STD_LOGIC;
    signal metadataBuffer_rp_V_V_read : STD_LOGIC;
    signal valueBuffer_rp_V_V_U_ap_dummy_ce : STD_LOGIC;
    signal valueBuffer_rp_V_V_din : STD_LOGIC_VECTOR (63 downto 0);
    signal valueBuffer_rp_V_V_full_n : STD_LOGIC;
    signal valueBuffer_rp_V_V_write : STD_LOGIC;
    signal valueBuffer_rp_V_V_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal valueBuffer_rp_V_V_empty_n : STD_LOGIC;
    signal valueBuffer_rp_V_V_read : STD_LOGIC;
    signal keyBuffer_rp_V_V_U_ap_dummy_ce : STD_LOGIC;
    signal keyBuffer_rp_V_V_din : STD_LOGIC_VECTOR (63 downto 0);
    signal keyBuffer_rp_V_V_full_n : STD_LOGIC;
    signal keyBuffer_rp_V_V_write : STD_LOGIC;
    signal keyBuffer_rp_V_V_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal keyBuffer_rp_V_V_empty_n : STD_LOGIC;
    signal keyBuffer_rp_V_V_read : STD_LOGIC;
    signal requestParser2hashTable_V_U_ap_dummy_ce : STD_LOGIC;
    signal requestParser2hashTable_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal requestParser2hashTable_V_full_n : STD_LOGIC;
    signal requestParser2hashTable_V_write : STD_LOGIC;
    signal requestParser2hashTable_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal requestParser2hashTable_V_empty_n : STD_LOGIC;
    signal requestParser2hashTable_V_read : STD_LOGIC;
    signal hashKeyBuffer_V_V_U_ap_dummy_ce : STD_LOGIC;
    signal hashKeyBuffer_V_V_din : STD_LOGIC_VECTOR (63 downto 0);
    signal hashKeyBuffer_V_V_full_n : STD_LOGIC;
    signal hashKeyBuffer_V_V_write : STD_LOGIC;
    signal hashKeyBuffer_V_V_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal hashKeyBuffer_V_V_empty_n : STD_LOGIC;
    signal hashKeyBuffer_V_V_read : STD_LOGIC;
    signal in2hashKeyLength_V_V_U_ap_dummy_ce : STD_LOGIC;
    signal in2hashKeyLength_V_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal in2hashKeyLength_V_V_full_n : STD_LOGIC;
    signal in2hashKeyLength_V_V_write : STD_LOGIC;
    signal in2hashKeyLength_V_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal in2hashKeyLength_V_V_empty_n : STD_LOGIC;
    signal in2hashKeyLength_V_V_read : STD_LOGIC;
    signal in2cc_V_U_ap_dummy_ce : STD_LOGIC;
    signal in2cc_V_din : STD_LOGIC_VECTOR (129 downto 0);
    signal in2cc_V_full_n : STD_LOGIC;
    signal in2cc_V_write : STD_LOGIC;
    signal in2cc_V_dout : STD_LOGIC_VECTOR (129 downto 0);
    signal in2cc_V_empty_n : STD_LOGIC;
    signal in2cc_V_read : STD_LOGIC;
    signal in2ccMd_V_U_ap_dummy_ce : STD_LOGIC;
    signal in2ccMd_V_din : STD_LOGIC_VECTOR (63 downto 0);
    signal in2ccMd_V_full_n : STD_LOGIC;
    signal in2ccMd_V_write : STD_LOGIC;
    signal in2ccMd_V_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal in2ccMd_V_empty_n : STD_LOGIC;
    signal in2ccMd_V_read : STD_LOGIC;
    signal in2hash_V_U_ap_dummy_ce : STD_LOGIC;
    signal in2hash_V_din : STD_LOGIC_VECTOR (129 downto 0);
    signal in2hash_V_full_n : STD_LOGIC;
    signal in2hash_V_write : STD_LOGIC;
    signal in2hash_V_dout : STD_LOGIC_VECTOR (129 downto 0);
    signal in2hash_V_empty_n : STD_LOGIC;
    signal in2hash_V_read : STD_LOGIC;
    signal hashValueBuffer_V_V_U_ap_dummy_ce : STD_LOGIC;
    signal hashValueBuffer_V_V_din : STD_LOGIC_VECTOR (63 downto 0);
    signal hashValueBuffer_V_V_full_n : STD_LOGIC;
    signal hashValueBuffer_V_V_write : STD_LOGIC;
    signal hashValueBuffer_V_V_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal hashValueBuffer_V_V_empty_n : STD_LOGIC;
    signal hashValueBuffer_V_V_read : STD_LOGIC;
    signal hashMdBuffer_V_V_U_ap_dummy_ce : STD_LOGIC;
    signal hashMdBuffer_V_V_din : STD_LOGIC_VECTOR (127 downto 0);
    signal hashMdBuffer_V_V_full_n : STD_LOGIC;
    signal hashMdBuffer_V_V_write : STD_LOGIC;
    signal hashMdBuffer_V_V_dout : STD_LOGIC_VECTOR (127 downto 0);
    signal hashMdBuffer_V_V_empty_n : STD_LOGIC;
    signal hashMdBuffer_V_V_read : STD_LOGIC;
    signal resizedKeyLength_V_U_ap_dummy_ce : STD_LOGIC;
    signal resizedKeyLength_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal resizedKeyLength_V_full_n : STD_LOGIC;
    signal resizedKeyLength_V_write : STD_LOGIC;
    signal resizedKeyLength_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal resizedKeyLength_V_empty_n : STD_LOGIC;
    signal resizedKeyLength_V_read : STD_LOGIC;
    signal resizedInitValue_V_U_ap_dummy_ce : STD_LOGIC;
    signal resizedInitValue_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal resizedInitValue_V_full_n : STD_LOGIC;
    signal resizedInitValue_V_write : STD_LOGIC;
    signal resizedInitValue_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal resizedInitValue_V_empty_n : STD_LOGIC;
    signal resizedInitValue_V_read : STD_LOGIC;
    signal resizedKey_V_V_U_ap_dummy_ce : STD_LOGIC;
    signal resizedKey_V_V_din : STD_LOGIC_VECTOR (95 downto 0);
    signal resizedKey_V_V_full_n : STD_LOGIC;
    signal resizedKey_V_V_write : STD_LOGIC;
    signal resizedKey_V_V_dout : STD_LOGIC_VECTOR (95 downto 0);
    signal resizedKey_V_V_empty_n : STD_LOGIC;
    signal resizedKey_V_V_read : STD_LOGIC;
    signal hash2cc_V_V_U_ap_dummy_ce : STD_LOGIC;
    signal hash2cc_V_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal hash2cc_V_V_full_n : STD_LOGIC;
    signal hash2cc_V_V_write : STD_LOGIC;
    signal hash2cc_V_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal hash2cc_V_V_empty_n : STD_LOGIC;
    signal hash2cc_V_V_read : STD_LOGIC;
    signal dec2cc_V_V_U_ap_dummy_ce : STD_LOGIC;
    signal dec2cc_V_V_din : STD_LOGIC_VECTOR (0 downto 0);
    signal dec2cc_V_V_full_n : STD_LOGIC;
    signal dec2cc_V_V_write : STD_LOGIC;
    signal dec2cc_V_V_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal dec2cc_V_V_empty_n : STD_LOGIC;
    signal dec2cc_V_V_read : STD_LOGIC;
    signal cc2memReadMd_V_U_ap_dummy_ce : STD_LOGIC;
    signal cc2memReadMd_V_din : STD_LOGIC_VECTOR (63 downto 0);
    signal cc2memReadMd_V_full_n : STD_LOGIC;
    signal cc2memReadMd_V_write : STD_LOGIC;
    signal cc2memReadMd_V_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal cc2memReadMd_V_empty_n : STD_LOGIC;
    signal cc2memReadMd_V_read : STD_LOGIC;
    signal cc2memRead_V_U_ap_dummy_ce : STD_LOGIC;
    signal cc2memRead_V_din : STD_LOGIC_VECTOR (129 downto 0);
    signal cc2memRead_V_full_n : STD_LOGIC;
    signal cc2memRead_V_write : STD_LOGIC;
    signal cc2memRead_V_dout : STD_LOGIC_VECTOR (129 downto 0);
    signal cc2memRead_V_empty_n : STD_LOGIC;
    signal cc2memRead_V_read : STD_LOGIC;
    signal memRd2comp_V_U_ap_dummy_ce : STD_LOGIC;
    signal memRd2comp_V_din : STD_LOGIC_VECTOR (129 downto 0);
    signal memRd2comp_V_full_n : STD_LOGIC;
    signal memRd2comp_V_write : STD_LOGIC;
    signal memRd2comp_V_dout : STD_LOGIC_VECTOR (129 downto 0);
    signal memRd2comp_V_empty_n : STD_LOGIC;
    signal memRd2comp_V_read : STD_LOGIC;
    signal memRd2compMd_V_U_ap_dummy_ce : STD_LOGIC;
    signal memRd2compMd_V_din : STD_LOGIC_VECTOR (63 downto 0);
    signal memRd2compMd_V_full_n : STD_LOGIC;
    signal memRd2compMd_V_write : STD_LOGIC;
    signal memRd2compMd_V_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal memRd2compMd_V_empty_n : STD_LOGIC;
    signal memRd2compMd_V_read : STD_LOGIC;
    signal comp2memWrMemData_V_V_U_ap_dummy_ce : STD_LOGIC;
    signal comp2memWrMemData_V_V_din : STD_LOGIC_VECTOR (511 downto 0);
    signal comp2memWrMemData_V_V_full_n : STD_LOGIC;
    signal comp2memWrMemData_V_V_write : STD_LOGIC;
    signal comp2memWrMemData_V_V_dout : STD_LOGIC_VECTOR (511 downto 0);
    signal comp2memWrMemData_V_V_empty_n : STD_LOGIC;
    signal comp2memWrMemData_V_V_read : STD_LOGIC;
    signal comp2memWrKey_V_U_ap_dummy_ce : STD_LOGIC;
    signal comp2memWrKey_V_din : STD_LOGIC_VECTOR (129 downto 0);
    signal comp2memWrKey_V_full_n : STD_LOGIC;
    signal comp2memWrKey_V_write : STD_LOGIC;
    signal comp2memWrKey_V_dout : STD_LOGIC_VECTOR (129 downto 0);
    signal comp2memWrKey_V_empty_n : STD_LOGIC;
    signal comp2memWrKey_V_read : STD_LOGIC;
    signal comp2memWrMd_V_U_ap_dummy_ce : STD_LOGIC;
    signal comp2memWrMd_V_din : STD_LOGIC_VECTOR (63 downto 0);
    signal comp2memWrMd_V_full_n : STD_LOGIC;
    signal comp2memWrMd_V_write : STD_LOGIC;
    signal comp2memWrMd_V_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal comp2memWrMd_V_empty_n : STD_LOGIC;
    signal comp2memWrMd_V_read : STD_LOGIC;
    signal comp2memWrStatus_V_bin_U_ap_dummy_ce : STD_LOGIC;
    signal comp2memWrStatus_V_bin_din : STD_LOGIC_VECTOR (7 downto 0);
    signal comp2memWrStatus_V_bin_full_n : STD_LOGIC;
    signal comp2memWrStatus_V_bin_write : STD_LOGIC;
    signal comp2memWrStatus_V_bin_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal comp2memWrStatus_V_bin_empty_n : STD_LOGIC;
    signal comp2memWrStatus_V_bin_read : STD_LOGIC;
    signal memWr2out_V_U_ap_dummy_ce : STD_LOGIC;
    signal memWr2out_V_din : STD_LOGIC_VECTOR (56 downto 0);
    signal memWr2out_V_full_n : STD_LOGIC;
    signal memWr2out_V_write : STD_LOGIC;
    signal memWr2out_V_dout : STD_LOGIC_VECTOR (56 downto 0);
    signal memWr2out_V_empty_n : STD_LOGIC;
    signal memWr2out_V_read : STD_LOGIC;
    signal hashTable2splitter_V_U_ap_dummy_ce : STD_LOGIC;
    signal hashTable2splitter_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal hashTable2splitter_V_full_n : STD_LOGIC;
    signal hashTable2splitter_V_write : STD_LOGIC;
    signal hashTable2splitter_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal hashTable2splitter_V_empty_n : STD_LOGIC;
    signal hashTable2splitter_V_read : STD_LOGIC;
    signal splitter2valueStoreFlash_V_U_ap_dummy_ce : STD_LOGIC;
    signal splitter2valueStoreFlash_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal splitter2valueStoreFlash_V_full_n : STD_LOGIC;
    signal splitter2valueStoreFlash_V_write : STD_LOGIC;
    signal splitter2valueStoreFlash_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal splitter2valueStoreFlash_V_empty_n : STD_LOGIC;
    signal splitter2valueStoreFlash_V_read : STD_LOGIC;
    signal splitter2valueStoreDram_V_U_ap_dummy_ce : STD_LOGIC;
    signal splitter2valueStoreDram_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal splitter2valueStoreDram_V_full_n : STD_LOGIC;
    signal splitter2valueStoreDram_V_write : STD_LOGIC;
    signal splitter2valueStoreDram_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal splitter2valueStoreDram_V_empty_n : STD_LOGIC;
    signal splitter2valueStoreDram_V_read : STD_LOGIC;
    signal filterPopSet_V_V_U_ap_dummy_ce : STD_LOGIC;
    signal filterPopSet_V_V_din : STD_LOGIC_VECTOR (0 downto 0);
    signal filterPopSet_V_V_full_n : STD_LOGIC;
    signal filterPopSet_V_V_write : STD_LOGIC;
    signal filterPopSet_V_V_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal filterPopSet_V_V_empty_n : STD_LOGIC;
    signal filterPopSet_V_V_read : STD_LOGIC;
    signal filterPopGet_V_V_U_ap_dummy_ce : STD_LOGIC;
    signal filterPopGet_V_V_din : STD_LOGIC_VECTOR (0 downto 0);
    signal filterPopGet_V_V_full_n : STD_LOGIC;
    signal filterPopGet_V_V_write : STD_LOGIC;
    signal filterPopGet_V_V_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal filterPopGet_V_V_empty_n : STD_LOGIC;
    signal filterPopGet_V_V_read : STD_LOGIC;
    signal accCtrl2demux_V_U_ap_dummy_ce : STD_LOGIC;
    signal accCtrl2demux_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal accCtrl2demux_V_full_n : STD_LOGIC;
    signal accCtrl2demux_V_write : STD_LOGIC;
    signal accCtrl2demux_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal accCtrl2demux_V_empty_n : STD_LOGIC;
    signal accCtrl2demux_V_read : STD_LOGIC;
    signal metadataBuffer_V_U_ap_dummy_ce : STD_LOGIC;
    signal metadataBuffer_V_din : STD_LOGIC_VECTOR (127 downto 0);
    signal metadataBuffer_V_full_n : STD_LOGIC;
    signal metadataBuffer_V_write : STD_LOGIC;
    signal metadataBuffer_V_dout : STD_LOGIC_VECTOR (127 downto 0);
    signal metadataBuffer_V_empty_n : STD_LOGIC;
    signal metadataBuffer_V_read : STD_LOGIC;
    signal keyBuffer_V_V_U_ap_dummy_ce : STD_LOGIC;
    signal keyBuffer_V_V_din : STD_LOGIC_VECTOR (63 downto 0);
    signal keyBuffer_V_V_full_n : STD_LOGIC;
    signal keyBuffer_V_V_write : STD_LOGIC;
    signal keyBuffer_V_V_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal keyBuffer_V_V_empty_n : STD_LOGIC;
    signal keyBuffer_V_V_read : STD_LOGIC;
    signal demux2getPath_V_U_ap_dummy_ce : STD_LOGIC;
    signal demux2getPath_V_din : STD_LOGIC_VECTOR (44 downto 0);
    signal demux2getPath_V_full_n : STD_LOGIC;
    signal demux2getPath_V_write : STD_LOGIC;
    signal demux2getPath_V_dout : STD_LOGIC_VECTOR (44 downto 0);
    signal demux2getPath_V_empty_n : STD_LOGIC;
    signal demux2getPath_V_read : STD_LOGIC;
    signal demux2setPathMetadata_V_U_ap_dummy_ce : STD_LOGIC;
    signal demux2setPathMetadata_V_din : STD_LOGIC_VECTOR (44 downto 0);
    signal demux2setPathMetadata_V_full_n : STD_LOGIC;
    signal demux2setPathMetadata_V_write : STD_LOGIC;
    signal demux2setPathMetadata_V_dout : STD_LOGIC_VECTOR (44 downto 0);
    signal demux2setPathMetadata_V_empty_n : STD_LOGIC;
    signal demux2setPathMetadata_V_read : STD_LOGIC;
    signal demux2setPathValue_V_U_ap_dummy_ce : STD_LOGIC;
    signal demux2setPathValue_V_din : STD_LOGIC_VECTOR (65 downto 0);
    signal demux2setPathValue_V_full_n : STD_LOGIC;
    signal demux2setPathValue_V_write : STD_LOGIC;
    signal demux2setPathValue_V_dout : STD_LOGIC_VECTOR (65 downto 0);
    signal demux2setPathValue_V_empty_n : STD_LOGIC;
    signal demux2setPathValue_V_read : STD_LOGIC;
    signal disp2rec_V_V_U_ap_dummy_ce : STD_LOGIC;
    signal disp2rec_V_V_din : STD_LOGIC_VECTOR (11 downto 0);
    signal disp2rec_V_V_full_n : STD_LOGIC;
    signal disp2rec_V_V_write : STD_LOGIC;
    signal disp2rec_V_V_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal disp2rec_V_V_empty_n : STD_LOGIC;
    signal disp2rec_V_V_read : STD_LOGIC;
    signal getPath2remux_V_V_U_ap_dummy_ce : STD_LOGIC;
    signal getPath2remux_V_V_din : STD_LOGIC_VECTOR (63 downto 0);
    signal getPath2remux_V_V_full_n : STD_LOGIC;
    signal getPath2remux_V_V_write : STD_LOGIC;
    signal getPath2remux_V_V_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal getPath2remux_V_V_empty_n : STD_LOGIC;
    signal getPath2remux_V_V_read : STD_LOGIC;
    signal valueStoreDram2merger_V_U_ap_dummy_ce : STD_LOGIC;
    signal valueStoreDram2merger_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal valueStoreDram2merger_V_full_n : STD_LOGIC;
    signal valueStoreDram2merger_V_write : STD_LOGIC;
    signal valueStoreDram2merger_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal valueStoreDram2merger_V_empty_n : STD_LOGIC;
    signal valueStoreDram2merger_V_read : STD_LOGIC;
    signal flashMetadataBuffer_V_U_ap_dummy_ce : STD_LOGIC;
    signal flashMetadataBuffer_V_din : STD_LOGIC_VECTOR (127 downto 0);
    signal flashMetadataBuffer_V_full_n : STD_LOGIC;
    signal flashMetadataBuffer_V_write : STD_LOGIC;
    signal flashMetadataBuffer_V_dout : STD_LOGIC_VECTOR (127 downto 0);
    signal flashMetadataBuffer_V_empty_n : STD_LOGIC;
    signal flashMetadataBuffer_V_read : STD_LOGIC;
    signal flashKeyBuffer_V_V_U_ap_dummy_ce : STD_LOGIC;
    signal flashKeyBuffer_V_V_din : STD_LOGIC_VECTOR (63 downto 0);
    signal flashKeyBuffer_V_V_full_n : STD_LOGIC;
    signal flashKeyBuffer_V_V_write : STD_LOGIC;
    signal flashKeyBuffer_V_V_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal flashKeyBuffer_V_V_empty_n : STD_LOGIC;
    signal flashKeyBuffer_V_V_read : STD_LOGIC;
    signal flashDemux2getPath_V_U_ap_dummy_ce : STD_LOGIC;
    signal flashDemux2getPath_V_din : STD_LOGIC_VECTOR (47 downto 0);
    signal flashDemux2getPath_V_full_n : STD_LOGIC;
    signal flashDemux2getPath_V_write : STD_LOGIC;
    signal flashDemux2getPath_V_dout : STD_LOGIC_VECTOR (47 downto 0);
    signal flashDemux2getPath_V_empty_n : STD_LOGIC;
    signal flashDemux2getPath_V_read : STD_LOGIC;
    signal flashDemux2setPathMetadata_V_U_ap_dummy_ce : STD_LOGIC;
    signal flashDemux2setPathMetadata_V_din : STD_LOGIC_VECTOR (47 downto 0);
    signal flashDemux2setPathMetadata_V_full_n : STD_LOGIC;
    signal flashDemux2setPathMetadata_V_write : STD_LOGIC;
    signal flashDemux2setPathMetadata_V_dout : STD_LOGIC_VECTOR (47 downto 0);
    signal flashDemux2setPathMetadata_V_empty_n : STD_LOGIC;
    signal flashDemux2setPathMetadata_V_read : STD_LOGIC;
    signal flashDemux2setPathValue_V_U_ap_dummy_ce : STD_LOGIC;
    signal flashDemux2setPathValue_V_din : STD_LOGIC_VECTOR (65 downto 0);
    signal flashDemux2setPathValue_V_full_n : STD_LOGIC;
    signal flashDemux2setPathValue_V_write : STD_LOGIC;
    signal flashDemux2setPathValue_V_dout : STD_LOGIC_VECTOR (65 downto 0);
    signal flashDemux2setPathValue_V_empty_n : STD_LOGIC;
    signal flashDemux2setPathValue_V_read : STD_LOGIC;
    signal flash_Disp2rec_V_V_U_ap_dummy_ce : STD_LOGIC;
    signal flash_Disp2rec_V_V_din : STD_LOGIC_VECTOR (15 downto 0);
    signal flash_Disp2rec_V_V_full_n : STD_LOGIC;
    signal flash_Disp2rec_V_V_write : STD_LOGIC;
    signal flash_Disp2rec_V_V_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal flash_Disp2rec_V_V_empty_n : STD_LOGIC;
    signal flash_Disp2rec_V_V_read : STD_LOGIC;
    signal flashGetPath2remux_V_V_U_ap_dummy_ce : STD_LOGIC;
    signal flashGetPath2remux_V_V_din : STD_LOGIC_VECTOR (63 downto 0);
    signal flashGetPath2remux_V_V_full_n : STD_LOGIC;
    signal flashGetPath2remux_V_V_write : STD_LOGIC;
    signal flashGetPath2remux_V_V_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal flashGetPath2remux_V_V_empty_n : STD_LOGIC;
    signal flashGetPath2remux_V_V_read : STD_LOGIC;
    signal valueStoreFlash2merger_V_U_ap_dummy_ce : STD_LOGIC;
    signal valueStoreFlash2merger_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal valueStoreFlash2merger_V_full_n : STD_LOGIC;
    signal valueStoreFlash2merger_V_write : STD_LOGIC;
    signal valueStoreFlash2merger_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal valueStoreFlash2merger_V_empty_n : STD_LOGIC;
    signal valueStoreFlash2merger_V_read : STD_LOGIC;
    signal merger2responseFormatter_V_U_ap_dummy_ce : STD_LOGIC;
    signal merger2responseFormatter_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal merger2responseFormatter_V_full_n : STD_LOGIC;
    signal merger2responseFormatter_V_write : STD_LOGIC;
    signal merger2responseFormatter_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal merger2responseFormatter_V_empty_n : STD_LOGIC;
    signal merger2responseFormatter_V_read : STD_LOGIC;
    signal valueBuffer_rf_V_V_U_ap_dummy_ce : STD_LOGIC;
    signal valueBuffer_rf_V_V_din : STD_LOGIC_VECTOR (63 downto 0);
    signal valueBuffer_rf_V_V_full_n : STD_LOGIC;
    signal valueBuffer_rf_V_V_write : STD_LOGIC;
    signal valueBuffer_rf_V_V_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal valueBuffer_rf_V_V_empty_n : STD_LOGIC;
    signal valueBuffer_rf_V_V_read : STD_LOGIC;
    signal metadataBuffer_rf_V_V_U_ap_dummy_ce : STD_LOGIC;
    signal metadataBuffer_rf_V_V_din : STD_LOGIC_VECTOR (247 downto 0);
    signal metadataBuffer_rf_V_V_full_n : STD_LOGIC;
    signal metadataBuffer_rf_V_V_write : STD_LOGIC;
    signal metadataBuffer_rf_V_V_dout : STD_LOGIC_VECTOR (247 downto 0);
    signal metadataBuffer_rf_V_V_empty_n : STD_LOGIC;
    signal metadataBuffer_rf_V_V_read : STD_LOGIC;
    signal ap_CS : STD_LOGIC := '0';
    signal ap_reg_procdone_memcachedPipeline_memRead_U0 : STD_LOGIC := '0';
    signal ap_reg_procdone_memcachedPipeline_memWrite_U0 : STD_LOGIC := '0';
    signal ap_reg_procdone_memcachedPipeline_setPath_U0 : STD_LOGIC := '0';
    signal ap_reg_procdone_memcachedPipeline_dispatch_U0 : STD_LOGIC := '0';
    signal ap_reg_procdone_memcachedPipeline_flashSetPathNoFilter_U0 : STD_LOGIC := '0';
    signal ap_reg_procdone_memcachedPipeline_flashDispatch_U0 : STD_LOGIC := '0';
    signal ap_reg_procdone_memcachedPipeline_response_r_U0 : STD_LOGIC := '0';
    signal ap_sig_hs_done : STD_LOGIC;

    component memcachedPipeline_bp_f IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        inData_TVALID : IN STD_LOGIC;
        valueBuffer_rp_V_V_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        valueBuffer_rp_V_V_full_n : IN STD_LOGIC;
        valueBuffer_rp_V_V_write : OUT STD_LOGIC;
        keyBuffer_rp_V_V_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        keyBuffer_rp_V_V_full_n : IN STD_LOGIC;
        keyBuffer_rp_V_V_write : OUT STD_LOGIC;
        metadataBuffer_rp_V_V_din : OUT STD_LOGIC_VECTOR (247 downto 0);
        metadataBuffer_rp_V_V_full_n : IN STD_LOGIC;
        metadataBuffer_rp_V_V_write : OUT STD_LOGIC;
        inData_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
        inData_TREADY : OUT STD_LOGIC;
        inData_TUSER : IN STD_LOGIC_VECTOR (111 downto 0);
        inData_TKEEP : IN STD_LOGIC_VECTOR (7 downto 0);
        inData_TLAST : IN STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component memcachedPipeline_bp_r IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        keyBuffer_rp_V_V_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        keyBuffer_rp_V_V_empty_n : IN STD_LOGIC;
        keyBuffer_rp_V_V_read : OUT STD_LOGIC;
        valueBuffer_rp_V_V_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        valueBuffer_rp_V_V_empty_n : IN STD_LOGIC;
        valueBuffer_rp_V_V_read : OUT STD_LOGIC;
        metadataBuffer_rp_V_V_dout : IN STD_LOGIC_VECTOR (247 downto 0);
        metadataBuffer_rp_V_V_empty_n : IN STD_LOGIC;
        metadataBuffer_rp_V_V_read : OUT STD_LOGIC;
        requestParser2hashTable_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        requestParser2hashTable_V_full_n : IN STD_LOGIC;
        requestParser2hashTable_V_write : OUT STD_LOGIC );
    end component;


    component memcachedPipeline_ht_inputLogic IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        requestParser2hashTable_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        requestParser2hashTable_V_empty_n : IN STD_LOGIC;
        requestParser2hashTable_V_read : OUT STD_LOGIC;
        hashValueBuffer_V_V_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        hashValueBuffer_V_V_full_n : IN STD_LOGIC;
        hashValueBuffer_V_V_write : OUT STD_LOGIC;
        hashKeyBuffer_V_V_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        hashKeyBuffer_V_V_full_n : IN STD_LOGIC;
        hashKeyBuffer_V_V_write : OUT STD_LOGIC;
        in2hashKeyLength_V_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        in2hashKeyLength_V_V_full_n : IN STD_LOGIC;
        in2hashKeyLength_V_V_write : OUT STD_LOGIC;
        hashMdBuffer_V_V_din : OUT STD_LOGIC_VECTOR (127 downto 0);
        hashMdBuffer_V_V_full_n : IN STD_LOGIC;
        hashMdBuffer_V_V_write : OUT STD_LOGIC;
        in2cc_V_din : OUT STD_LOGIC_VECTOR (129 downto 0);
        in2cc_V_full_n : IN STD_LOGIC;
        in2cc_V_write : OUT STD_LOGIC;
        in2ccMd_V_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        in2ccMd_V_full_n : IN STD_LOGIC;
        in2ccMd_V_write : OUT STD_LOGIC;
        in2hash_V_din : OUT STD_LOGIC_VECTOR (129 downto 0);
        in2hash_V_full_n : IN STD_LOGIC;
        in2hash_V_write : OUT STD_LOGIC );
    end component;


    component memcachedPipeline_hashKeyResizer IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in2hash_V_dout : IN STD_LOGIC_VECTOR (129 downto 0);
        in2hash_V_empty_n : IN STD_LOGIC;
        in2hash_V_read : OUT STD_LOGIC;
        in2hashKeyLength_V_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        in2hashKeyLength_V_V_empty_n : IN STD_LOGIC;
        in2hashKeyLength_V_V_read : OUT STD_LOGIC;
        resizedKey_V_V_din : OUT STD_LOGIC_VECTOR (95 downto 0);
        resizedKey_V_V_full_n : IN STD_LOGIC;
        resizedKey_V_V_write : OUT STD_LOGIC;
        resizedKeyLength_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        resizedKeyLength_V_full_n : IN STD_LOGIC;
        resizedKeyLength_V_write : OUT STD_LOGIC;
        resizedInitValue_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        resizedInitValue_V_full_n : IN STD_LOGIC;
        resizedInitValue_V_write : OUT STD_LOGIC );
    end component;


    component memcachedPipeline_bobj IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        resizedKey_V_V_dout : IN STD_LOGIC_VECTOR (95 downto 0);
        resizedKey_V_V_empty_n : IN STD_LOGIC;
        resizedKey_V_V_read : OUT STD_LOGIC;
        resizedKeyLength_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        resizedKeyLength_V_empty_n : IN STD_LOGIC;
        resizedKeyLength_V_read : OUT STD_LOGIC;
        resizedInitValue_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        resizedInitValue_V_empty_n : IN STD_LOGIC;
        resizedInitValue_V_read : OUT STD_LOGIC;
        hash2cc_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        hash2cc_V_V_full_n : IN STD_LOGIC;
        hash2cc_V_V_write : OUT STD_LOGIC );
    end component;


    component memcachedPipeline_concurrencyControl IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        dec2cc_V_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        dec2cc_V_V_empty_n : IN STD_LOGIC;
        dec2cc_V_V_read : OUT STD_LOGIC;
        in2cc_V_dout : IN STD_LOGIC_VECTOR (129 downto 0);
        in2cc_V_empty_n : IN STD_LOGIC;
        in2cc_V_read : OUT STD_LOGIC;
        in2ccMd_V_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        in2ccMd_V_empty_n : IN STD_LOGIC;
        in2ccMd_V_read : OUT STD_LOGIC;
        hash2cc_V_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        hash2cc_V_V_empty_n : IN STD_LOGIC;
        hash2cc_V_V_read : OUT STD_LOGIC;
        cc2memRead_V_din : OUT STD_LOGIC_VECTOR (129 downto 0);
        cc2memRead_V_full_n : IN STD_LOGIC;
        cc2memRead_V_write : OUT STD_LOGIC;
        cc2memReadMd_V_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        cc2memReadMd_V_full_n : IN STD_LOGIC;
        cc2memReadMd_V_write : OUT STD_LOGIC );
    end component;


    component memcachedPipeline_memRead IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        cc2memReadMd_V_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        cc2memReadMd_V_empty_n : IN STD_LOGIC;
        cc2memReadMd_V_read : OUT STD_LOGIC;
        cc2memRead_V_dout : IN STD_LOGIC_VECTOR (129 downto 0);
        cc2memRead_V_empty_n : IN STD_LOGIC;
        cc2memRead_V_read : OUT STD_LOGIC;
        memRd2comp_V_din : OUT STD_LOGIC_VECTOR (129 downto 0);
        memRd2comp_V_full_n : IN STD_LOGIC;
        memRd2comp_V_write : OUT STD_LOGIC;
        memRd2compMd_V_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        memRd2compMd_V_full_n : IN STD_LOGIC;
        memRd2compMd_V_write : OUT STD_LOGIC;
        memRdCtrl_V_TREADY : IN STD_LOGIC;
        memRdCtrl_V_TDATA : OUT STD_LOGIC_VECTOR (39 downto 0);
        memRdCtrl_V_TVALID : OUT STD_LOGIC );
    end component;


    component memcachedPipeline_ht_compare IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        memRd2comp_V_dout : IN STD_LOGIC_VECTOR (129 downto 0);
        memRd2comp_V_empty_n : IN STD_LOGIC;
        memRd2comp_V_read : OUT STD_LOGIC;
        memRdData_V_V_TVALID : IN STD_LOGIC;
        memRd2compMd_V_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        memRd2compMd_V_empty_n : IN STD_LOGIC;
        memRd2compMd_V_read : OUT STD_LOGIC;
        comp2memWrKey_V_din : OUT STD_LOGIC_VECTOR (129 downto 0);
        comp2memWrKey_V_full_n : IN STD_LOGIC;
        comp2memWrKey_V_write : OUT STD_LOGIC;
        comp2memWrMd_V_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        comp2memWrMd_V_full_n : IN STD_LOGIC;
        comp2memWrMd_V_write : OUT STD_LOGIC;
        comp2memWrStatus_V_bin_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        comp2memWrStatus_V_bin_full_n : IN STD_LOGIC;
        comp2memWrStatus_V_bin_write : OUT STD_LOGIC;
        comp2memWrMemData_V_V_din : OUT STD_LOGIC_VECTOR (511 downto 0);
        comp2memWrMemData_V_V_full_n : IN STD_LOGIC;
        comp2memWrMemData_V_V_write : OUT STD_LOGIC;
        memRdData_V_V_TDATA : IN STD_LOGIC_VECTOR (511 downto 0);
        memRdData_V_V_TREADY : OUT STD_LOGIC );
    end component;


    component memcachedPipeline_memWrite IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        comp2memWrKey_V_dout : IN STD_LOGIC_VECTOR (129 downto 0);
        comp2memWrKey_V_empty_n : IN STD_LOGIC;
        comp2memWrKey_V_read : OUT STD_LOGIC;
        comp2memWrMemData_V_V_dout : IN STD_LOGIC_VECTOR (511 downto 0);
        comp2memWrMemData_V_V_empty_n : IN STD_LOGIC;
        comp2memWrMemData_V_V_read : OUT STD_LOGIC;
        addressAssignFlashIn_V_V_TVALID : IN STD_LOGIC;
        addressAssignDramIn_V_V_TVALID : IN STD_LOGIC;
        comp2memWrStatus_V_bin_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        comp2memWrStatus_V_bin_empty_n : IN STD_LOGIC;
        comp2memWrStatus_V_bin_read : OUT STD_LOGIC;
        comp2memWrMd_V_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        comp2memWrMd_V_empty_n : IN STD_LOGIC;
        comp2memWrMd_V_read : OUT STD_LOGIC;
        dec2cc_V_V_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        dec2cc_V_V_full_n : IN STD_LOGIC;
        dec2cc_V_V_write : OUT STD_LOGIC;
        memWr2out_V_din : OUT STD_LOGIC_VECTOR (56 downto 0);
        memWr2out_V_full_n : IN STD_LOGIC;
        memWr2out_V_write : OUT STD_LOGIC;
        memWrCtrl_V_TREADY : IN STD_LOGIC;
        memWrData_V_V_TREADY : IN STD_LOGIC;
        addressReturnOut_V_V_TREADY : IN STD_LOGIC;
        memWrCtrl_V_TDATA : OUT STD_LOGIC_VECTOR (39 downto 0);
        memWrCtrl_V_TVALID : OUT STD_LOGIC;
        memWrData_V_V_TDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
        memWrData_V_V_TVALID : OUT STD_LOGIC;
        addressReturnOut_V_V_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        addressReturnOut_V_V_TVALID : OUT STD_LOGIC;
        addressAssignDramIn_V_V_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        addressAssignDramIn_V_V_TREADY : OUT STD_LOGIC;
        addressAssignFlashIn_V_V_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        addressAssignFlashIn_V_V_TREADY : OUT STD_LOGIC;
        flushReq_V : OUT STD_LOGIC_VECTOR (0 downto 0);
        flushReq_V_ap_vld : OUT STD_LOGIC;
        flushAck_V : IN STD_LOGIC_VECTOR (0 downto 0);
        flushDone_V : OUT STD_LOGIC_VECTOR (0 downto 0);
        flushDone_V_ap_vld : OUT STD_LOGIC );
    end component;


    component memcachedPipeline_ht_outputLogic IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        hashKeyBuffer_V_V_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        hashKeyBuffer_V_V_empty_n : IN STD_LOGIC;
        hashKeyBuffer_V_V_read : OUT STD_LOGIC;
        hashValueBuffer_V_V_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        hashValueBuffer_V_V_empty_n : IN STD_LOGIC;
        hashValueBuffer_V_V_read : OUT STD_LOGIC;
        hashMdBuffer_V_V_dout : IN STD_LOGIC_VECTOR (127 downto 0);
        hashMdBuffer_V_V_empty_n : IN STD_LOGIC;
        hashMdBuffer_V_V_read : OUT STD_LOGIC;
        memWr2out_V_dout : IN STD_LOGIC_VECTOR (56 downto 0);
        memWr2out_V_empty_n : IN STD_LOGIC;
        memWr2out_V_read : OUT STD_LOGIC;
        hashTable2splitter_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        hashTable2splitter_V_full_n : IN STD_LOGIC;
        hashTable2splitter_V_write : OUT STD_LOGIC );
    end component;


    component memcachedPipeline_splitter IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        hashTable2splitter_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        hashTable2splitter_V_empty_n : IN STD_LOGIC;
        hashTable2splitter_V_read : OUT STD_LOGIC;
        splitter2valueStoreFlash_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        splitter2valueStoreFlash_V_full_n : IN STD_LOGIC;
        splitter2valueStoreFlash_V_write : OUT STD_LOGIC;
        splitter2valueStoreDram_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        splitter2valueStoreDram_V_full_n : IN STD_LOGIC;
        splitter2valueStoreDram_V_write : OUT STD_LOGIC );
    end component;


    component memcachedPipeline_accessControl IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        filterPopGet_V_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        filterPopGet_V_V_empty_n : IN STD_LOGIC;
        filterPopGet_V_V_read : OUT STD_LOGIC;
        filterPopSet_V_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        filterPopSet_V_V_empty_n : IN STD_LOGIC;
        filterPopSet_V_V_read : OUT STD_LOGIC;
        splitter2valueStoreDram_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        splitter2valueStoreDram_V_empty_n : IN STD_LOGIC;
        splitter2valueStoreDram_V_read : OUT STD_LOGIC;
        accCtrl2demux_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        accCtrl2demux_V_full_n : IN STD_LOGIC;
        accCtrl2demux_V_write : OUT STD_LOGIC );
    end component;


    component memcachedPipeline_demux IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        accCtrl2demux_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        accCtrl2demux_V_empty_n : IN STD_LOGIC;
        accCtrl2demux_V_read : OUT STD_LOGIC;
        metadataBuffer_V_din : OUT STD_LOGIC_VECTOR (127 downto 0);
        metadataBuffer_V_full_n : IN STD_LOGIC;
        metadataBuffer_V_write : OUT STD_LOGIC;
        keyBuffer_V_V_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        keyBuffer_V_V_full_n : IN STD_LOGIC;
        keyBuffer_V_V_write : OUT STD_LOGIC;
        demux2setPathValue_V_din : OUT STD_LOGIC_VECTOR (65 downto 0);
        demux2setPathValue_V_full_n : IN STD_LOGIC;
        demux2setPathValue_V_write : OUT STD_LOGIC;
        demux2setPathMetadata_V_din : OUT STD_LOGIC_VECTOR (44 downto 0);
        demux2setPathMetadata_V_full_n : IN STD_LOGIC;
        demux2setPathMetadata_V_write : OUT STD_LOGIC;
        demux2getPath_V_din : OUT STD_LOGIC_VECTOR (44 downto 0);
        demux2getPath_V_full_n : IN STD_LOGIC;
        demux2getPath_V_write : OUT STD_LOGIC );
    end component;


    component memcachedPipeline_setPath IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        demux2setPathValue_V_dout : IN STD_LOGIC_VECTOR (65 downto 0);
        demux2setPathValue_V_empty_n : IN STD_LOGIC;
        demux2setPathValue_V_read : OUT STD_LOGIC;
        demux2setPathMetadata_V_dout : IN STD_LOGIC_VECTOR (44 downto 0);
        demux2setPathMetadata_V_empty_n : IN STD_LOGIC;
        demux2setPathMetadata_V_read : OUT STD_LOGIC;
        filterPopSet_V_V_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        filterPopSet_V_V_full_n : IN STD_LOGIC;
        filterPopSet_V_V_write : OUT STD_LOGIC;
        memWrData_V_V_TREADY : IN STD_LOGIC;
        memWrCmd_V_TREADY : IN STD_LOGIC;
        memWrCmd_V_TDATA : OUT STD_LOGIC_VECTOR (39 downto 0);
        memWrCmd_V_TVALID : OUT STD_LOGIC;
        memWrData_V_V_TDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
        memWrData_V_V_TVALID : OUT STD_LOGIC );
    end component;


    component memcachedPipeline_dispatch IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        demux2getPath_V_dout : IN STD_LOGIC_VECTOR (44 downto 0);
        demux2getPath_V_empty_n : IN STD_LOGIC;
        demux2getPath_V_read : OUT STD_LOGIC;
        disp2rec_V_V_din : OUT STD_LOGIC_VECTOR (11 downto 0);
        disp2rec_V_V_full_n : IN STD_LOGIC;
        disp2rec_V_V_write : OUT STD_LOGIC;
        memRdCmd_V_TREADY : IN STD_LOGIC;
        memRdCmd_V_TDATA : OUT STD_LOGIC_VECTOR (39 downto 0);
        memRdCmd_V_TVALID : OUT STD_LOGIC );
    end component;


    component memcachedPipeline_receive IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        disp2rec_V_V_dout : IN STD_LOGIC_VECTOR (11 downto 0);
        disp2rec_V_V_empty_n : IN STD_LOGIC;
        disp2rec_V_V_read : OUT STD_LOGIC;
        memRdData_V_V_TVALID : IN STD_LOGIC;
        getPath2remux_V_V_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        getPath2remux_V_V_full_n : IN STD_LOGIC;
        getPath2remux_V_V_write : OUT STD_LOGIC;
        filterPopGet_V_V_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        filterPopGet_V_V_full_n : IN STD_LOGIC;
        filterPopGet_V_V_write : OUT STD_LOGIC;
        memRdData_V_V_TDATA : IN STD_LOGIC_VECTOR (511 downto 0);
        memRdData_V_V_TREADY : OUT STD_LOGIC );
    end component;


    component memcachedPipeline_remux IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        keyBuffer_V_V_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        keyBuffer_V_V_empty_n : IN STD_LOGIC;
        keyBuffer_V_V_read : OUT STD_LOGIC;
        getPath2remux_V_V_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        getPath2remux_V_V_empty_n : IN STD_LOGIC;
        getPath2remux_V_V_read : OUT STD_LOGIC;
        metadataBuffer_V_dout : IN STD_LOGIC_VECTOR (127 downto 0);
        metadataBuffer_V_empty_n : IN STD_LOGIC;
        metadataBuffer_V_read : OUT STD_LOGIC;
        valueStoreDram2merger_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        valueStoreDram2merger_V_full_n : IN STD_LOGIC;
        valueStoreDram2merger_V_write : OUT STD_LOGIC );
    end component;


    component memcachedPipeline_flashDemux IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        splitter2valueStoreFlash_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        splitter2valueStoreFlash_V_empty_n : IN STD_LOGIC;
        splitter2valueStoreFlash_V_read : OUT STD_LOGIC;
        flashMetadataBuffer_V_din : OUT STD_LOGIC_VECTOR (127 downto 0);
        flashMetadataBuffer_V_full_n : IN STD_LOGIC;
        flashMetadataBuffer_V_write : OUT STD_LOGIC;
        flashKeyBuffer_V_V_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        flashKeyBuffer_V_V_full_n : IN STD_LOGIC;
        flashKeyBuffer_V_V_write : OUT STD_LOGIC;
        flashDemux2setPathValue_V_din : OUT STD_LOGIC_VECTOR (65 downto 0);
        flashDemux2setPathValue_V_full_n : IN STD_LOGIC;
        flashDemux2setPathValue_V_write : OUT STD_LOGIC;
        flashDemux2setPathMetadata_V_din : OUT STD_LOGIC_VECTOR (47 downto 0);
        flashDemux2setPathMetadata_V_full_n : IN STD_LOGIC;
        flashDemux2setPathMetadata_V_write : OUT STD_LOGIC;
        flashDemux2getPath_V_din : OUT STD_LOGIC_VECTOR (47 downto 0);
        flashDemux2getPath_V_full_n : IN STD_LOGIC;
        flashDemux2getPath_V_write : OUT STD_LOGIC );
    end component;


    component memcachedPipeline_flashSetPathNoFilter IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        flashDemux2setPathMetadata_V_dout : IN STD_LOGIC_VECTOR (47 downto 0);
        flashDemux2setPathMetadata_V_empty_n : IN STD_LOGIC;
        flashDemux2setPathMetadata_V_read : OUT STD_LOGIC;
        flashDemux2setPathValue_V_dout : IN STD_LOGIC_VECTOR (65 downto 0);
        flashDemux2setPathValue_V_empty_n : IN STD_LOGIC;
        flashDemux2setPathValue_V_read : OUT STD_LOGIC;
        memWrCmd_V_TREADY : IN STD_LOGIC;
        memWrData_V_V_TREADY : IN STD_LOGIC;
        memWrCmd_V_TDATA : OUT STD_LOGIC_VECTOR (47 downto 0);
        memWrCmd_V_TVALID : OUT STD_LOGIC;
        memWrData_V_V_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
        memWrData_V_V_TVALID : OUT STD_LOGIC );
    end component;


    component memcachedPipeline_flashDispatch IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        flashDemux2getPath_V_dout : IN STD_LOGIC_VECTOR (47 downto 0);
        flashDemux2getPath_V_empty_n : IN STD_LOGIC;
        flashDemux2getPath_V_read : OUT STD_LOGIC;
        flash_Disp2rec_V_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        flash_Disp2rec_V_V_full_n : IN STD_LOGIC;
        flash_Disp2rec_V_V_write : OUT STD_LOGIC;
        memRdCmd_V_TREADY : IN STD_LOGIC;
        memRdCmd_V_TDATA : OUT STD_LOGIC_VECTOR (47 downto 0);
        memRdCmd_V_TVALID : OUT STD_LOGIC );
    end component;


    component memcachedPipeline_flashReceiveNoFilter IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        flash_Disp2rec_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        flash_Disp2rec_V_V_empty_n : IN STD_LOGIC;
        flash_Disp2rec_V_V_read : OUT STD_LOGIC;
        memRdData_V_V_TVALID : IN STD_LOGIC;
        flashGetPath2remux_V_V_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        flashGetPath2remux_V_V_full_n : IN STD_LOGIC;
        flashGetPath2remux_V_V_write : OUT STD_LOGIC;
        memRdData_V_V_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
        memRdData_V_V_TREADY : OUT STD_LOGIC );
    end component;


    component memcachedPipeline_flashRemux IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        flashKeyBuffer_V_V_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        flashKeyBuffer_V_V_empty_n : IN STD_LOGIC;
        flashKeyBuffer_V_V_read : OUT STD_LOGIC;
        flashGetPath2remux_V_V_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        flashGetPath2remux_V_V_empty_n : IN STD_LOGIC;
        flashGetPath2remux_V_V_read : OUT STD_LOGIC;
        flashMetadataBuffer_V_dout : IN STD_LOGIC_VECTOR (127 downto 0);
        flashMetadataBuffer_V_empty_n : IN STD_LOGIC;
        flashMetadataBuffer_V_read : OUT STD_LOGIC;
        valueStoreFlash2merger_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        valueStoreFlash2merger_V_full_n : IN STD_LOGIC;
        valueStoreFlash2merger_V_write : OUT STD_LOGIC );
    end component;


    component memcachedPipeline_merger IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        valueStoreDram2merger_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        valueStoreDram2merger_V_empty_n : IN STD_LOGIC;
        valueStoreDram2merger_V_read : OUT STD_LOGIC;
        valueStoreFlash2merger_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        valueStoreFlash2merger_V_empty_n : IN STD_LOGIC;
        valueStoreFlash2merger_V_read : OUT STD_LOGIC;
        merger2responseFormatter_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        merger2responseFormatter_V_full_n : IN STD_LOGIC;
        merger2responseFormatter_V_write : OUT STD_LOGIC );
    end component;


    component memcachedPipeline_response_f IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        valueBuffer_rf_V_V_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        valueBuffer_rf_V_V_full_n : IN STD_LOGIC;
        valueBuffer_rf_V_V_write : OUT STD_LOGIC;
        metadataBuffer_rf_V_V_din : OUT STD_LOGIC_VECTOR (247 downto 0);
        metadataBuffer_rf_V_V_full_n : IN STD_LOGIC;
        metadataBuffer_rf_V_V_write : OUT STD_LOGIC;
        merger2responseFormatter_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        merger2responseFormatter_V_empty_n : IN STD_LOGIC;
        merger2responseFormatter_V_read : OUT STD_LOGIC );
    end component;


    component memcachedPipeline_response_r IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        valueBuffer_rf_V_V_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        valueBuffer_rf_V_V_empty_n : IN STD_LOGIC;
        valueBuffer_rf_V_V_read : OUT STD_LOGIC;
        metadataBuffer_rf_V_V_dout : IN STD_LOGIC_VECTOR (247 downto 0);
        metadataBuffer_rf_V_V_empty_n : IN STD_LOGIC;
        metadataBuffer_rf_V_V_read : OUT STD_LOGIC;
        outData_TREADY : IN STD_LOGIC;
        outData_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
        outData_TVALID : OUT STD_LOGIC;
        outData_TUSER : OUT STD_LOGIC_VECTOR (111 downto 0);
        outData_TKEEP : OUT STD_LOGIC_VECTOR (7 downto 0);
        outData_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component FIFO_memcachedPipeline_metadataBuffer_rp_V_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (247 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (247 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_memcachedPipeline_valueBuffer_rp_V_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (63 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (63 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_memcachedPipeline_keyBuffer_rp_V_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (63 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (63 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_memcachedPipeline_requestParser2hashTable_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (255 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (255 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_memcachedPipeline_hashKeyBuffer_V_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (63 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (63 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_memcachedPipeline_in2hashKeyLength_V_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_memcachedPipeline_in2cc_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (129 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (129 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_memcachedPipeline_in2ccMd_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (63 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (63 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_memcachedPipeline_in2hash_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (129 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (129 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_memcachedPipeline_hashValueBuffer_V_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (63 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (63 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_memcachedPipeline_hashMdBuffer_V_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (127 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (127 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_memcachedPipeline_resizedKeyLength_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_memcachedPipeline_resizedInitValue_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_memcachedPipeline_resizedKey_V_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (95 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (95 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_memcachedPipeline_hash2cc_V_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_memcachedPipeline_dec2cc_V_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_memcachedPipeline_cc2memReadMd_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (63 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (63 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_memcachedPipeline_cc2memRead_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (129 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (129 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_memcachedPipeline_memRd2comp_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (129 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (129 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_memcachedPipeline_memRd2compMd_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (63 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (63 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_memcachedPipeline_comp2memWrMemData_V_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (511 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (511 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_memcachedPipeline_comp2memWrKey_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (129 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (129 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_memcachedPipeline_comp2memWrMd_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (63 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (63 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_memcachedPipeline_comp2memWrStatus_V_bin IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_memcachedPipeline_memWr2out_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (56 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (56 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_memcachedPipeline_hashTable2splitter_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (255 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (255 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_memcachedPipeline_splitter2valueStoreFlash_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (255 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (255 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_memcachedPipeline_splitter2valueStoreDram_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (255 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (255 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_memcachedPipeline_filterPopSet_V_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_memcachedPipeline_filterPopGet_V_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_memcachedPipeline_accCtrl2demux_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (255 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (255 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_memcachedPipeline_metadataBuffer_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (127 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (127 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_memcachedPipeline_keyBuffer_V_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (63 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (63 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_memcachedPipeline_demux2getPath_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (44 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (44 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_memcachedPipeline_demux2setPathMetadata_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (44 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (44 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_memcachedPipeline_demux2setPathValue_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (65 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (65 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_memcachedPipeline_disp2rec_V_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (11 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (11 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_memcachedPipeline_getPath2remux_V_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (63 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (63 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_memcachedPipeline_valueStoreDram2merger_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (255 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (255 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_memcachedPipeline_flashMetadataBuffer_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (127 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (127 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_memcachedPipeline_flashKeyBuffer_V_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (63 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (63 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_memcachedPipeline_flashDemux2getPath_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (47 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (47 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_memcachedPipeline_flashDemux2setPathMetadata_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (47 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (47 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_memcachedPipeline_flashDemux2setPathValue_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (65 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (65 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_memcachedPipeline_flash_Disp2rec_V_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (15 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (15 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_memcachedPipeline_flashGetPath2remux_V_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (63 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (63 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_memcachedPipeline_valueStoreFlash2merger_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (255 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (255 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_memcachedPipeline_merger2responseFormatter_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (255 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (255 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_memcachedPipeline_valueBuffer_rf_V_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (63 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (63 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_memcachedPipeline_metadataBuffer_rf_V_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (247 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (247 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    memcachedPipeline_bp_f_U0 : component memcachedPipeline_bp_f
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => memcachedPipeline_bp_f_U0_ap_start,
        ap_done => memcachedPipeline_bp_f_U0_ap_done,
        ap_continue => memcachedPipeline_bp_f_U0_ap_continue,
        ap_idle => memcachedPipeline_bp_f_U0_ap_idle,
        ap_ready => memcachedPipeline_bp_f_U0_ap_ready,
        inData_TVALID => memcachedPipeline_bp_f_U0_inData_TVALID,
        valueBuffer_rp_V_V_din => memcachedPipeline_bp_f_U0_valueBuffer_rp_V_V_din,
        valueBuffer_rp_V_V_full_n => memcachedPipeline_bp_f_U0_valueBuffer_rp_V_V_full_n,
        valueBuffer_rp_V_V_write => memcachedPipeline_bp_f_U0_valueBuffer_rp_V_V_write,
        keyBuffer_rp_V_V_din => memcachedPipeline_bp_f_U0_keyBuffer_rp_V_V_din,
        keyBuffer_rp_V_V_full_n => memcachedPipeline_bp_f_U0_keyBuffer_rp_V_V_full_n,
        keyBuffer_rp_V_V_write => memcachedPipeline_bp_f_U0_keyBuffer_rp_V_V_write,
        metadataBuffer_rp_V_V_din => memcachedPipeline_bp_f_U0_metadataBuffer_rp_V_V_din,
        metadataBuffer_rp_V_V_full_n => memcachedPipeline_bp_f_U0_metadataBuffer_rp_V_V_full_n,
        metadataBuffer_rp_V_V_write => memcachedPipeline_bp_f_U0_metadataBuffer_rp_V_V_write,
        inData_TDATA => memcachedPipeline_bp_f_U0_inData_TDATA,
        inData_TREADY => memcachedPipeline_bp_f_U0_inData_TREADY,
        inData_TUSER => memcachedPipeline_bp_f_U0_inData_TUSER,
        inData_TKEEP => memcachedPipeline_bp_f_U0_inData_TKEEP,
        inData_TLAST => memcachedPipeline_bp_f_U0_inData_TLAST);

    memcachedPipeline_bp_r_U0 : component memcachedPipeline_bp_r
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => memcachedPipeline_bp_r_U0_ap_start,
        ap_done => memcachedPipeline_bp_r_U0_ap_done,
        ap_continue => memcachedPipeline_bp_r_U0_ap_continue,
        ap_idle => memcachedPipeline_bp_r_U0_ap_idle,
        ap_ready => memcachedPipeline_bp_r_U0_ap_ready,
        keyBuffer_rp_V_V_dout => memcachedPipeline_bp_r_U0_keyBuffer_rp_V_V_dout,
        keyBuffer_rp_V_V_empty_n => memcachedPipeline_bp_r_U0_keyBuffer_rp_V_V_empty_n,
        keyBuffer_rp_V_V_read => memcachedPipeline_bp_r_U0_keyBuffer_rp_V_V_read,
        valueBuffer_rp_V_V_dout => memcachedPipeline_bp_r_U0_valueBuffer_rp_V_V_dout,
        valueBuffer_rp_V_V_empty_n => memcachedPipeline_bp_r_U0_valueBuffer_rp_V_V_empty_n,
        valueBuffer_rp_V_V_read => memcachedPipeline_bp_r_U0_valueBuffer_rp_V_V_read,
        metadataBuffer_rp_V_V_dout => memcachedPipeline_bp_r_U0_metadataBuffer_rp_V_V_dout,
        metadataBuffer_rp_V_V_empty_n => memcachedPipeline_bp_r_U0_metadataBuffer_rp_V_V_empty_n,
        metadataBuffer_rp_V_V_read => memcachedPipeline_bp_r_U0_metadataBuffer_rp_V_V_read,
        requestParser2hashTable_V_din => memcachedPipeline_bp_r_U0_requestParser2hashTable_V_din,
        requestParser2hashTable_V_full_n => memcachedPipeline_bp_r_U0_requestParser2hashTable_V_full_n,
        requestParser2hashTable_V_write => memcachedPipeline_bp_r_U0_requestParser2hashTable_V_write);

    memcachedPipeline_ht_inputLogic_U0 : component memcachedPipeline_ht_inputLogic
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => memcachedPipeline_ht_inputLogic_U0_ap_start,
        ap_done => memcachedPipeline_ht_inputLogic_U0_ap_done,
        ap_continue => memcachedPipeline_ht_inputLogic_U0_ap_continue,
        ap_idle => memcachedPipeline_ht_inputLogic_U0_ap_idle,
        ap_ready => memcachedPipeline_ht_inputLogic_U0_ap_ready,
        requestParser2hashTable_V_dout => memcachedPipeline_ht_inputLogic_U0_requestParser2hashTable_V_dout,
        requestParser2hashTable_V_empty_n => memcachedPipeline_ht_inputLogic_U0_requestParser2hashTable_V_empty_n,
        requestParser2hashTable_V_read => memcachedPipeline_ht_inputLogic_U0_requestParser2hashTable_V_read,
        hashValueBuffer_V_V_din => memcachedPipeline_ht_inputLogic_U0_hashValueBuffer_V_V_din,
        hashValueBuffer_V_V_full_n => memcachedPipeline_ht_inputLogic_U0_hashValueBuffer_V_V_full_n,
        hashValueBuffer_V_V_write => memcachedPipeline_ht_inputLogic_U0_hashValueBuffer_V_V_write,
        hashKeyBuffer_V_V_din => memcachedPipeline_ht_inputLogic_U0_hashKeyBuffer_V_V_din,
        hashKeyBuffer_V_V_full_n => memcachedPipeline_ht_inputLogic_U0_hashKeyBuffer_V_V_full_n,
        hashKeyBuffer_V_V_write => memcachedPipeline_ht_inputLogic_U0_hashKeyBuffer_V_V_write,
        in2hashKeyLength_V_V_din => memcachedPipeline_ht_inputLogic_U0_in2hashKeyLength_V_V_din,
        in2hashKeyLength_V_V_full_n => memcachedPipeline_ht_inputLogic_U0_in2hashKeyLength_V_V_full_n,
        in2hashKeyLength_V_V_write => memcachedPipeline_ht_inputLogic_U0_in2hashKeyLength_V_V_write,
        hashMdBuffer_V_V_din => memcachedPipeline_ht_inputLogic_U0_hashMdBuffer_V_V_din,
        hashMdBuffer_V_V_full_n => memcachedPipeline_ht_inputLogic_U0_hashMdBuffer_V_V_full_n,
        hashMdBuffer_V_V_write => memcachedPipeline_ht_inputLogic_U0_hashMdBuffer_V_V_write,
        in2cc_V_din => memcachedPipeline_ht_inputLogic_U0_in2cc_V_din,
        in2cc_V_full_n => memcachedPipeline_ht_inputLogic_U0_in2cc_V_full_n,
        in2cc_V_write => memcachedPipeline_ht_inputLogic_U0_in2cc_V_write,
        in2ccMd_V_din => memcachedPipeline_ht_inputLogic_U0_in2ccMd_V_din,
        in2ccMd_V_full_n => memcachedPipeline_ht_inputLogic_U0_in2ccMd_V_full_n,
        in2ccMd_V_write => memcachedPipeline_ht_inputLogic_U0_in2ccMd_V_write,
        in2hash_V_din => memcachedPipeline_ht_inputLogic_U0_in2hash_V_din,
        in2hash_V_full_n => memcachedPipeline_ht_inputLogic_U0_in2hash_V_full_n,
        in2hash_V_write => memcachedPipeline_ht_inputLogic_U0_in2hash_V_write);

    memcachedPipeline_hashKeyResizer_U0 : component memcachedPipeline_hashKeyResizer
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => memcachedPipeline_hashKeyResizer_U0_ap_start,
        ap_done => memcachedPipeline_hashKeyResizer_U0_ap_done,
        ap_continue => memcachedPipeline_hashKeyResizer_U0_ap_continue,
        ap_idle => memcachedPipeline_hashKeyResizer_U0_ap_idle,
        ap_ready => memcachedPipeline_hashKeyResizer_U0_ap_ready,
        in2hash_V_dout => memcachedPipeline_hashKeyResizer_U0_in2hash_V_dout,
        in2hash_V_empty_n => memcachedPipeline_hashKeyResizer_U0_in2hash_V_empty_n,
        in2hash_V_read => memcachedPipeline_hashKeyResizer_U0_in2hash_V_read,
        in2hashKeyLength_V_V_dout => memcachedPipeline_hashKeyResizer_U0_in2hashKeyLength_V_V_dout,
        in2hashKeyLength_V_V_empty_n => memcachedPipeline_hashKeyResizer_U0_in2hashKeyLength_V_V_empty_n,
        in2hashKeyLength_V_V_read => memcachedPipeline_hashKeyResizer_U0_in2hashKeyLength_V_V_read,
        resizedKey_V_V_din => memcachedPipeline_hashKeyResizer_U0_resizedKey_V_V_din,
        resizedKey_V_V_full_n => memcachedPipeline_hashKeyResizer_U0_resizedKey_V_V_full_n,
        resizedKey_V_V_write => memcachedPipeline_hashKeyResizer_U0_resizedKey_V_V_write,
        resizedKeyLength_V_din => memcachedPipeline_hashKeyResizer_U0_resizedKeyLength_V_din,
        resizedKeyLength_V_full_n => memcachedPipeline_hashKeyResizer_U0_resizedKeyLength_V_full_n,
        resizedKeyLength_V_write => memcachedPipeline_hashKeyResizer_U0_resizedKeyLength_V_write,
        resizedInitValue_V_din => memcachedPipeline_hashKeyResizer_U0_resizedInitValue_V_din,
        resizedInitValue_V_full_n => memcachedPipeline_hashKeyResizer_U0_resizedInitValue_V_full_n,
        resizedInitValue_V_write => memcachedPipeline_hashKeyResizer_U0_resizedInitValue_V_write);

    memcachedPipeline_bobj_U0 : component memcachedPipeline_bobj
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => memcachedPipeline_bobj_U0_ap_start,
        ap_done => memcachedPipeline_bobj_U0_ap_done,
        ap_continue => memcachedPipeline_bobj_U0_ap_continue,
        ap_idle => memcachedPipeline_bobj_U0_ap_idle,
        ap_ready => memcachedPipeline_bobj_U0_ap_ready,
        resizedKey_V_V_dout => memcachedPipeline_bobj_U0_resizedKey_V_V_dout,
        resizedKey_V_V_empty_n => memcachedPipeline_bobj_U0_resizedKey_V_V_empty_n,
        resizedKey_V_V_read => memcachedPipeline_bobj_U0_resizedKey_V_V_read,
        resizedKeyLength_V_dout => memcachedPipeline_bobj_U0_resizedKeyLength_V_dout,
        resizedKeyLength_V_empty_n => memcachedPipeline_bobj_U0_resizedKeyLength_V_empty_n,
        resizedKeyLength_V_read => memcachedPipeline_bobj_U0_resizedKeyLength_V_read,
        resizedInitValue_V_dout => memcachedPipeline_bobj_U0_resizedInitValue_V_dout,
        resizedInitValue_V_empty_n => memcachedPipeline_bobj_U0_resizedInitValue_V_empty_n,
        resizedInitValue_V_read => memcachedPipeline_bobj_U0_resizedInitValue_V_read,
        hash2cc_V_V_din => memcachedPipeline_bobj_U0_hash2cc_V_V_din,
        hash2cc_V_V_full_n => memcachedPipeline_bobj_U0_hash2cc_V_V_full_n,
        hash2cc_V_V_write => memcachedPipeline_bobj_U0_hash2cc_V_V_write);

    memcachedPipeline_concurrencyControl_U0 : component memcachedPipeline_concurrencyControl
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => memcachedPipeline_concurrencyControl_U0_ap_start,
        ap_done => memcachedPipeline_concurrencyControl_U0_ap_done,
        ap_continue => memcachedPipeline_concurrencyControl_U0_ap_continue,
        ap_idle => memcachedPipeline_concurrencyControl_U0_ap_idle,
        ap_ready => memcachedPipeline_concurrencyControl_U0_ap_ready,
        dec2cc_V_V_dout => memcachedPipeline_concurrencyControl_U0_dec2cc_V_V_dout,
        dec2cc_V_V_empty_n => memcachedPipeline_concurrencyControl_U0_dec2cc_V_V_empty_n,
        dec2cc_V_V_read => memcachedPipeline_concurrencyControl_U0_dec2cc_V_V_read,
        in2cc_V_dout => memcachedPipeline_concurrencyControl_U0_in2cc_V_dout,
        in2cc_V_empty_n => memcachedPipeline_concurrencyControl_U0_in2cc_V_empty_n,
        in2cc_V_read => memcachedPipeline_concurrencyControl_U0_in2cc_V_read,
        in2ccMd_V_dout => memcachedPipeline_concurrencyControl_U0_in2ccMd_V_dout,
        in2ccMd_V_empty_n => memcachedPipeline_concurrencyControl_U0_in2ccMd_V_empty_n,
        in2ccMd_V_read => memcachedPipeline_concurrencyControl_U0_in2ccMd_V_read,
        hash2cc_V_V_dout => memcachedPipeline_concurrencyControl_U0_hash2cc_V_V_dout,
        hash2cc_V_V_empty_n => memcachedPipeline_concurrencyControl_U0_hash2cc_V_V_empty_n,
        hash2cc_V_V_read => memcachedPipeline_concurrencyControl_U0_hash2cc_V_V_read,
        cc2memRead_V_din => memcachedPipeline_concurrencyControl_U0_cc2memRead_V_din,
        cc2memRead_V_full_n => memcachedPipeline_concurrencyControl_U0_cc2memRead_V_full_n,
        cc2memRead_V_write => memcachedPipeline_concurrencyControl_U0_cc2memRead_V_write,
        cc2memReadMd_V_din => memcachedPipeline_concurrencyControl_U0_cc2memReadMd_V_din,
        cc2memReadMd_V_full_n => memcachedPipeline_concurrencyControl_U0_cc2memReadMd_V_full_n,
        cc2memReadMd_V_write => memcachedPipeline_concurrencyControl_U0_cc2memReadMd_V_write);

    memcachedPipeline_memRead_U0 : component memcachedPipeline_memRead
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => memcachedPipeline_memRead_U0_ap_start,
        ap_done => memcachedPipeline_memRead_U0_ap_done,
        ap_continue => memcachedPipeline_memRead_U0_ap_continue,
        ap_idle => memcachedPipeline_memRead_U0_ap_idle,
        ap_ready => memcachedPipeline_memRead_U0_ap_ready,
        cc2memReadMd_V_dout => memcachedPipeline_memRead_U0_cc2memReadMd_V_dout,
        cc2memReadMd_V_empty_n => memcachedPipeline_memRead_U0_cc2memReadMd_V_empty_n,
        cc2memReadMd_V_read => memcachedPipeline_memRead_U0_cc2memReadMd_V_read,
        cc2memRead_V_dout => memcachedPipeline_memRead_U0_cc2memRead_V_dout,
        cc2memRead_V_empty_n => memcachedPipeline_memRead_U0_cc2memRead_V_empty_n,
        cc2memRead_V_read => memcachedPipeline_memRead_U0_cc2memRead_V_read,
        memRd2comp_V_din => memcachedPipeline_memRead_U0_memRd2comp_V_din,
        memRd2comp_V_full_n => memcachedPipeline_memRead_U0_memRd2comp_V_full_n,
        memRd2comp_V_write => memcachedPipeline_memRead_U0_memRd2comp_V_write,
        memRd2compMd_V_din => memcachedPipeline_memRead_U0_memRd2compMd_V_din,
        memRd2compMd_V_full_n => memcachedPipeline_memRead_U0_memRd2compMd_V_full_n,
        memRd2compMd_V_write => memcachedPipeline_memRead_U0_memRd2compMd_V_write,
        memRdCtrl_V_TREADY => memcachedPipeline_memRead_U0_memRdCtrl_V_TREADY,
        memRdCtrl_V_TDATA => memcachedPipeline_memRead_U0_memRdCtrl_V_TDATA,
        memRdCtrl_V_TVALID => memcachedPipeline_memRead_U0_memRdCtrl_V_TVALID);

    memcachedPipeline_ht_compare_U0 : component memcachedPipeline_ht_compare
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => memcachedPipeline_ht_compare_U0_ap_start,
        ap_done => memcachedPipeline_ht_compare_U0_ap_done,
        ap_continue => memcachedPipeline_ht_compare_U0_ap_continue,
        ap_idle => memcachedPipeline_ht_compare_U0_ap_idle,
        ap_ready => memcachedPipeline_ht_compare_U0_ap_ready,
        memRd2comp_V_dout => memcachedPipeline_ht_compare_U0_memRd2comp_V_dout,
        memRd2comp_V_empty_n => memcachedPipeline_ht_compare_U0_memRd2comp_V_empty_n,
        memRd2comp_V_read => memcachedPipeline_ht_compare_U0_memRd2comp_V_read,
        memRdData_V_V_TVALID => memcachedPipeline_ht_compare_U0_memRdData_V_V_TVALID,
        memRd2compMd_V_dout => memcachedPipeline_ht_compare_U0_memRd2compMd_V_dout,
        memRd2compMd_V_empty_n => memcachedPipeline_ht_compare_U0_memRd2compMd_V_empty_n,
        memRd2compMd_V_read => memcachedPipeline_ht_compare_U0_memRd2compMd_V_read,
        comp2memWrKey_V_din => memcachedPipeline_ht_compare_U0_comp2memWrKey_V_din,
        comp2memWrKey_V_full_n => memcachedPipeline_ht_compare_U0_comp2memWrKey_V_full_n,
        comp2memWrKey_V_write => memcachedPipeline_ht_compare_U0_comp2memWrKey_V_write,
        comp2memWrMd_V_din => memcachedPipeline_ht_compare_U0_comp2memWrMd_V_din,
        comp2memWrMd_V_full_n => memcachedPipeline_ht_compare_U0_comp2memWrMd_V_full_n,
        comp2memWrMd_V_write => memcachedPipeline_ht_compare_U0_comp2memWrMd_V_write,
        comp2memWrStatus_V_bin_din => memcachedPipeline_ht_compare_U0_comp2memWrStatus_V_bin_din,
        comp2memWrStatus_V_bin_full_n => memcachedPipeline_ht_compare_U0_comp2memWrStatus_V_bin_full_n,
        comp2memWrStatus_V_bin_write => memcachedPipeline_ht_compare_U0_comp2memWrStatus_V_bin_write,
        comp2memWrMemData_V_V_din => memcachedPipeline_ht_compare_U0_comp2memWrMemData_V_V_din,
        comp2memWrMemData_V_V_full_n => memcachedPipeline_ht_compare_U0_comp2memWrMemData_V_V_full_n,
        comp2memWrMemData_V_V_write => memcachedPipeline_ht_compare_U0_comp2memWrMemData_V_V_write,
        memRdData_V_V_TDATA => memcachedPipeline_ht_compare_U0_memRdData_V_V_TDATA,
        memRdData_V_V_TREADY => memcachedPipeline_ht_compare_U0_memRdData_V_V_TREADY);

    memcachedPipeline_memWrite_U0 : component memcachedPipeline_memWrite
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => memcachedPipeline_memWrite_U0_ap_start,
        ap_done => memcachedPipeline_memWrite_U0_ap_done,
        ap_continue => memcachedPipeline_memWrite_U0_ap_continue,
        ap_idle => memcachedPipeline_memWrite_U0_ap_idle,
        ap_ready => memcachedPipeline_memWrite_U0_ap_ready,
        comp2memWrKey_V_dout => memcachedPipeline_memWrite_U0_comp2memWrKey_V_dout,
        comp2memWrKey_V_empty_n => memcachedPipeline_memWrite_U0_comp2memWrKey_V_empty_n,
        comp2memWrKey_V_read => memcachedPipeline_memWrite_U0_comp2memWrKey_V_read,
        comp2memWrMemData_V_V_dout => memcachedPipeline_memWrite_U0_comp2memWrMemData_V_V_dout,
        comp2memWrMemData_V_V_empty_n => memcachedPipeline_memWrite_U0_comp2memWrMemData_V_V_empty_n,
        comp2memWrMemData_V_V_read => memcachedPipeline_memWrite_U0_comp2memWrMemData_V_V_read,
        addressAssignFlashIn_V_V_TVALID => memcachedPipeline_memWrite_U0_addressAssignFlashIn_V_V_TVALID,
        addressAssignDramIn_V_V_TVALID => memcachedPipeline_memWrite_U0_addressAssignDramIn_V_V_TVALID,
        comp2memWrStatus_V_bin_dout => memcachedPipeline_memWrite_U0_comp2memWrStatus_V_bin_dout,
        comp2memWrStatus_V_bin_empty_n => memcachedPipeline_memWrite_U0_comp2memWrStatus_V_bin_empty_n,
        comp2memWrStatus_V_bin_read => memcachedPipeline_memWrite_U0_comp2memWrStatus_V_bin_read,
        comp2memWrMd_V_dout => memcachedPipeline_memWrite_U0_comp2memWrMd_V_dout,
        comp2memWrMd_V_empty_n => memcachedPipeline_memWrite_U0_comp2memWrMd_V_empty_n,
        comp2memWrMd_V_read => memcachedPipeline_memWrite_U0_comp2memWrMd_V_read,
        dec2cc_V_V_din => memcachedPipeline_memWrite_U0_dec2cc_V_V_din,
        dec2cc_V_V_full_n => memcachedPipeline_memWrite_U0_dec2cc_V_V_full_n,
        dec2cc_V_V_write => memcachedPipeline_memWrite_U0_dec2cc_V_V_write,
        memWr2out_V_din => memcachedPipeline_memWrite_U0_memWr2out_V_din,
        memWr2out_V_full_n => memcachedPipeline_memWrite_U0_memWr2out_V_full_n,
        memWr2out_V_write => memcachedPipeline_memWrite_U0_memWr2out_V_write,
        memWrCtrl_V_TREADY => memcachedPipeline_memWrite_U0_memWrCtrl_V_TREADY,
        memWrData_V_V_TREADY => memcachedPipeline_memWrite_U0_memWrData_V_V_TREADY,
        addressReturnOut_V_V_TREADY => memcachedPipeline_memWrite_U0_addressReturnOut_V_V_TREADY,
        memWrCtrl_V_TDATA => memcachedPipeline_memWrite_U0_memWrCtrl_V_TDATA,
        memWrCtrl_V_TVALID => memcachedPipeline_memWrite_U0_memWrCtrl_V_TVALID,
        memWrData_V_V_TDATA => memcachedPipeline_memWrite_U0_memWrData_V_V_TDATA,
        memWrData_V_V_TVALID => memcachedPipeline_memWrite_U0_memWrData_V_V_TVALID,
        addressReturnOut_V_V_TDATA => memcachedPipeline_memWrite_U0_addressReturnOut_V_V_TDATA,
        addressReturnOut_V_V_TVALID => memcachedPipeline_memWrite_U0_addressReturnOut_V_V_TVALID,
        addressAssignDramIn_V_V_TDATA => memcachedPipeline_memWrite_U0_addressAssignDramIn_V_V_TDATA,
        addressAssignDramIn_V_V_TREADY => memcachedPipeline_memWrite_U0_addressAssignDramIn_V_V_TREADY,
        addressAssignFlashIn_V_V_TDATA => memcachedPipeline_memWrite_U0_addressAssignFlashIn_V_V_TDATA,
        addressAssignFlashIn_V_V_TREADY => memcachedPipeline_memWrite_U0_addressAssignFlashIn_V_V_TREADY,
        flushReq_V => memcachedPipeline_memWrite_U0_flushReq_V,
        flushReq_V_ap_vld => memcachedPipeline_memWrite_U0_flushReq_V_ap_vld,
        flushAck_V => memcachedPipeline_memWrite_U0_flushAck_V,
        flushDone_V => memcachedPipeline_memWrite_U0_flushDone_V,
        flushDone_V_ap_vld => memcachedPipeline_memWrite_U0_flushDone_V_ap_vld);

    memcachedPipeline_ht_outputLogic_U0 : component memcachedPipeline_ht_outputLogic
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => memcachedPipeline_ht_outputLogic_U0_ap_start,
        ap_done => memcachedPipeline_ht_outputLogic_U0_ap_done,
        ap_continue => memcachedPipeline_ht_outputLogic_U0_ap_continue,
        ap_idle => memcachedPipeline_ht_outputLogic_U0_ap_idle,
        ap_ready => memcachedPipeline_ht_outputLogic_U0_ap_ready,
        hashKeyBuffer_V_V_dout => memcachedPipeline_ht_outputLogic_U0_hashKeyBuffer_V_V_dout,
        hashKeyBuffer_V_V_empty_n => memcachedPipeline_ht_outputLogic_U0_hashKeyBuffer_V_V_empty_n,
        hashKeyBuffer_V_V_read => memcachedPipeline_ht_outputLogic_U0_hashKeyBuffer_V_V_read,
        hashValueBuffer_V_V_dout => memcachedPipeline_ht_outputLogic_U0_hashValueBuffer_V_V_dout,
        hashValueBuffer_V_V_empty_n => memcachedPipeline_ht_outputLogic_U0_hashValueBuffer_V_V_empty_n,
        hashValueBuffer_V_V_read => memcachedPipeline_ht_outputLogic_U0_hashValueBuffer_V_V_read,
        hashMdBuffer_V_V_dout => memcachedPipeline_ht_outputLogic_U0_hashMdBuffer_V_V_dout,
        hashMdBuffer_V_V_empty_n => memcachedPipeline_ht_outputLogic_U0_hashMdBuffer_V_V_empty_n,
        hashMdBuffer_V_V_read => memcachedPipeline_ht_outputLogic_U0_hashMdBuffer_V_V_read,
        memWr2out_V_dout => memcachedPipeline_ht_outputLogic_U0_memWr2out_V_dout,
        memWr2out_V_empty_n => memcachedPipeline_ht_outputLogic_U0_memWr2out_V_empty_n,
        memWr2out_V_read => memcachedPipeline_ht_outputLogic_U0_memWr2out_V_read,
        hashTable2splitter_V_din => memcachedPipeline_ht_outputLogic_U0_hashTable2splitter_V_din,
        hashTable2splitter_V_full_n => memcachedPipeline_ht_outputLogic_U0_hashTable2splitter_V_full_n,
        hashTable2splitter_V_write => memcachedPipeline_ht_outputLogic_U0_hashTable2splitter_V_write);

    memcachedPipeline_splitter_U0 : component memcachedPipeline_splitter
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => memcachedPipeline_splitter_U0_ap_start,
        ap_done => memcachedPipeline_splitter_U0_ap_done,
        ap_continue => memcachedPipeline_splitter_U0_ap_continue,
        ap_idle => memcachedPipeline_splitter_U0_ap_idle,
        ap_ready => memcachedPipeline_splitter_U0_ap_ready,
        hashTable2splitter_V_dout => memcachedPipeline_splitter_U0_hashTable2splitter_V_dout,
        hashTable2splitter_V_empty_n => memcachedPipeline_splitter_U0_hashTable2splitter_V_empty_n,
        hashTable2splitter_V_read => memcachedPipeline_splitter_U0_hashTable2splitter_V_read,
        splitter2valueStoreFlash_V_din => memcachedPipeline_splitter_U0_splitter2valueStoreFlash_V_din,
        splitter2valueStoreFlash_V_full_n => memcachedPipeline_splitter_U0_splitter2valueStoreFlash_V_full_n,
        splitter2valueStoreFlash_V_write => memcachedPipeline_splitter_U0_splitter2valueStoreFlash_V_write,
        splitter2valueStoreDram_V_din => memcachedPipeline_splitter_U0_splitter2valueStoreDram_V_din,
        splitter2valueStoreDram_V_full_n => memcachedPipeline_splitter_U0_splitter2valueStoreDram_V_full_n,
        splitter2valueStoreDram_V_write => memcachedPipeline_splitter_U0_splitter2valueStoreDram_V_write);

    memcachedPipeline_accessControl_U0 : component memcachedPipeline_accessControl
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => memcachedPipeline_accessControl_U0_ap_start,
        ap_done => memcachedPipeline_accessControl_U0_ap_done,
        ap_continue => memcachedPipeline_accessControl_U0_ap_continue,
        ap_idle => memcachedPipeline_accessControl_U0_ap_idle,
        ap_ready => memcachedPipeline_accessControl_U0_ap_ready,
        filterPopGet_V_V_dout => memcachedPipeline_accessControl_U0_filterPopGet_V_V_dout,
        filterPopGet_V_V_empty_n => memcachedPipeline_accessControl_U0_filterPopGet_V_V_empty_n,
        filterPopGet_V_V_read => memcachedPipeline_accessControl_U0_filterPopGet_V_V_read,
        filterPopSet_V_V_dout => memcachedPipeline_accessControl_U0_filterPopSet_V_V_dout,
        filterPopSet_V_V_empty_n => memcachedPipeline_accessControl_U0_filterPopSet_V_V_empty_n,
        filterPopSet_V_V_read => memcachedPipeline_accessControl_U0_filterPopSet_V_V_read,
        splitter2valueStoreDram_V_dout => memcachedPipeline_accessControl_U0_splitter2valueStoreDram_V_dout,
        splitter2valueStoreDram_V_empty_n => memcachedPipeline_accessControl_U0_splitter2valueStoreDram_V_empty_n,
        splitter2valueStoreDram_V_read => memcachedPipeline_accessControl_U0_splitter2valueStoreDram_V_read,
        accCtrl2demux_V_din => memcachedPipeline_accessControl_U0_accCtrl2demux_V_din,
        accCtrl2demux_V_full_n => memcachedPipeline_accessControl_U0_accCtrl2demux_V_full_n,
        accCtrl2demux_V_write => memcachedPipeline_accessControl_U0_accCtrl2demux_V_write);

    memcachedPipeline_demux_U0 : component memcachedPipeline_demux
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => memcachedPipeline_demux_U0_ap_start,
        ap_done => memcachedPipeline_demux_U0_ap_done,
        ap_continue => memcachedPipeline_demux_U0_ap_continue,
        ap_idle => memcachedPipeline_demux_U0_ap_idle,
        ap_ready => memcachedPipeline_demux_U0_ap_ready,
        accCtrl2demux_V_dout => memcachedPipeline_demux_U0_accCtrl2demux_V_dout,
        accCtrl2demux_V_empty_n => memcachedPipeline_demux_U0_accCtrl2demux_V_empty_n,
        accCtrl2demux_V_read => memcachedPipeline_demux_U0_accCtrl2demux_V_read,
        metadataBuffer_V_din => memcachedPipeline_demux_U0_metadataBuffer_V_din,
        metadataBuffer_V_full_n => memcachedPipeline_demux_U0_metadataBuffer_V_full_n,
        metadataBuffer_V_write => memcachedPipeline_demux_U0_metadataBuffer_V_write,
        keyBuffer_V_V_din => memcachedPipeline_demux_U0_keyBuffer_V_V_din,
        keyBuffer_V_V_full_n => memcachedPipeline_demux_U0_keyBuffer_V_V_full_n,
        keyBuffer_V_V_write => memcachedPipeline_demux_U0_keyBuffer_V_V_write,
        demux2setPathValue_V_din => memcachedPipeline_demux_U0_demux2setPathValue_V_din,
        demux2setPathValue_V_full_n => memcachedPipeline_demux_U0_demux2setPathValue_V_full_n,
        demux2setPathValue_V_write => memcachedPipeline_demux_U0_demux2setPathValue_V_write,
        demux2setPathMetadata_V_din => memcachedPipeline_demux_U0_demux2setPathMetadata_V_din,
        demux2setPathMetadata_V_full_n => memcachedPipeline_demux_U0_demux2setPathMetadata_V_full_n,
        demux2setPathMetadata_V_write => memcachedPipeline_demux_U0_demux2setPathMetadata_V_write,
        demux2getPath_V_din => memcachedPipeline_demux_U0_demux2getPath_V_din,
        demux2getPath_V_full_n => memcachedPipeline_demux_U0_demux2getPath_V_full_n,
        demux2getPath_V_write => memcachedPipeline_demux_U0_demux2getPath_V_write);

    memcachedPipeline_setPath_U0 : component memcachedPipeline_setPath
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => memcachedPipeline_setPath_U0_ap_start,
        ap_done => memcachedPipeline_setPath_U0_ap_done,
        ap_continue => memcachedPipeline_setPath_U0_ap_continue,
        ap_idle => memcachedPipeline_setPath_U0_ap_idle,
        ap_ready => memcachedPipeline_setPath_U0_ap_ready,
        demux2setPathValue_V_dout => memcachedPipeline_setPath_U0_demux2setPathValue_V_dout,
        demux2setPathValue_V_empty_n => memcachedPipeline_setPath_U0_demux2setPathValue_V_empty_n,
        demux2setPathValue_V_read => memcachedPipeline_setPath_U0_demux2setPathValue_V_read,
        demux2setPathMetadata_V_dout => memcachedPipeline_setPath_U0_demux2setPathMetadata_V_dout,
        demux2setPathMetadata_V_empty_n => memcachedPipeline_setPath_U0_demux2setPathMetadata_V_empty_n,
        demux2setPathMetadata_V_read => memcachedPipeline_setPath_U0_demux2setPathMetadata_V_read,
        filterPopSet_V_V_din => memcachedPipeline_setPath_U0_filterPopSet_V_V_din,
        filterPopSet_V_V_full_n => memcachedPipeline_setPath_U0_filterPopSet_V_V_full_n,
        filterPopSet_V_V_write => memcachedPipeline_setPath_U0_filterPopSet_V_V_write,
        memWrData_V_V_TREADY => memcachedPipeline_setPath_U0_memWrData_V_V_TREADY,
        memWrCmd_V_TREADY => memcachedPipeline_setPath_U0_memWrCmd_V_TREADY,
        memWrCmd_V_TDATA => memcachedPipeline_setPath_U0_memWrCmd_V_TDATA,
        memWrCmd_V_TVALID => memcachedPipeline_setPath_U0_memWrCmd_V_TVALID,
        memWrData_V_V_TDATA => memcachedPipeline_setPath_U0_memWrData_V_V_TDATA,
        memWrData_V_V_TVALID => memcachedPipeline_setPath_U0_memWrData_V_V_TVALID);

    memcachedPipeline_dispatch_U0 : component memcachedPipeline_dispatch
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => memcachedPipeline_dispatch_U0_ap_start,
        ap_done => memcachedPipeline_dispatch_U0_ap_done,
        ap_continue => memcachedPipeline_dispatch_U0_ap_continue,
        ap_idle => memcachedPipeline_dispatch_U0_ap_idle,
        ap_ready => memcachedPipeline_dispatch_U0_ap_ready,
        demux2getPath_V_dout => memcachedPipeline_dispatch_U0_demux2getPath_V_dout,
        demux2getPath_V_empty_n => memcachedPipeline_dispatch_U0_demux2getPath_V_empty_n,
        demux2getPath_V_read => memcachedPipeline_dispatch_U0_demux2getPath_V_read,
        disp2rec_V_V_din => memcachedPipeline_dispatch_U0_disp2rec_V_V_din,
        disp2rec_V_V_full_n => memcachedPipeline_dispatch_U0_disp2rec_V_V_full_n,
        disp2rec_V_V_write => memcachedPipeline_dispatch_U0_disp2rec_V_V_write,
        memRdCmd_V_TREADY => memcachedPipeline_dispatch_U0_memRdCmd_V_TREADY,
        memRdCmd_V_TDATA => memcachedPipeline_dispatch_U0_memRdCmd_V_TDATA,
        memRdCmd_V_TVALID => memcachedPipeline_dispatch_U0_memRdCmd_V_TVALID);

    memcachedPipeline_receive_U0 : component memcachedPipeline_receive
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => memcachedPipeline_receive_U0_ap_start,
        ap_done => memcachedPipeline_receive_U0_ap_done,
        ap_continue => memcachedPipeline_receive_U0_ap_continue,
        ap_idle => memcachedPipeline_receive_U0_ap_idle,
        ap_ready => memcachedPipeline_receive_U0_ap_ready,
        disp2rec_V_V_dout => memcachedPipeline_receive_U0_disp2rec_V_V_dout,
        disp2rec_V_V_empty_n => memcachedPipeline_receive_U0_disp2rec_V_V_empty_n,
        disp2rec_V_V_read => memcachedPipeline_receive_U0_disp2rec_V_V_read,
        memRdData_V_V_TVALID => memcachedPipeline_receive_U0_memRdData_V_V_TVALID,
        getPath2remux_V_V_din => memcachedPipeline_receive_U0_getPath2remux_V_V_din,
        getPath2remux_V_V_full_n => memcachedPipeline_receive_U0_getPath2remux_V_V_full_n,
        getPath2remux_V_V_write => memcachedPipeline_receive_U0_getPath2remux_V_V_write,
        filterPopGet_V_V_din => memcachedPipeline_receive_U0_filterPopGet_V_V_din,
        filterPopGet_V_V_full_n => memcachedPipeline_receive_U0_filterPopGet_V_V_full_n,
        filterPopGet_V_V_write => memcachedPipeline_receive_U0_filterPopGet_V_V_write,
        memRdData_V_V_TDATA => memcachedPipeline_receive_U0_memRdData_V_V_TDATA,
        memRdData_V_V_TREADY => memcachedPipeline_receive_U0_memRdData_V_V_TREADY);

    memcachedPipeline_remux_U0 : component memcachedPipeline_remux
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => memcachedPipeline_remux_U0_ap_start,
        ap_done => memcachedPipeline_remux_U0_ap_done,
        ap_continue => memcachedPipeline_remux_U0_ap_continue,
        ap_idle => memcachedPipeline_remux_U0_ap_idle,
        ap_ready => memcachedPipeline_remux_U0_ap_ready,
        keyBuffer_V_V_dout => memcachedPipeline_remux_U0_keyBuffer_V_V_dout,
        keyBuffer_V_V_empty_n => memcachedPipeline_remux_U0_keyBuffer_V_V_empty_n,
        keyBuffer_V_V_read => memcachedPipeline_remux_U0_keyBuffer_V_V_read,
        getPath2remux_V_V_dout => memcachedPipeline_remux_U0_getPath2remux_V_V_dout,
        getPath2remux_V_V_empty_n => memcachedPipeline_remux_U0_getPath2remux_V_V_empty_n,
        getPath2remux_V_V_read => memcachedPipeline_remux_U0_getPath2remux_V_V_read,
        metadataBuffer_V_dout => memcachedPipeline_remux_U0_metadataBuffer_V_dout,
        metadataBuffer_V_empty_n => memcachedPipeline_remux_U0_metadataBuffer_V_empty_n,
        metadataBuffer_V_read => memcachedPipeline_remux_U0_metadataBuffer_V_read,
        valueStoreDram2merger_V_din => memcachedPipeline_remux_U0_valueStoreDram2merger_V_din,
        valueStoreDram2merger_V_full_n => memcachedPipeline_remux_U0_valueStoreDram2merger_V_full_n,
        valueStoreDram2merger_V_write => memcachedPipeline_remux_U0_valueStoreDram2merger_V_write);

    memcachedPipeline_flashDemux_U0 : component memcachedPipeline_flashDemux
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => memcachedPipeline_flashDemux_U0_ap_start,
        ap_done => memcachedPipeline_flashDemux_U0_ap_done,
        ap_continue => memcachedPipeline_flashDemux_U0_ap_continue,
        ap_idle => memcachedPipeline_flashDemux_U0_ap_idle,
        ap_ready => memcachedPipeline_flashDemux_U0_ap_ready,
        splitter2valueStoreFlash_V_dout => memcachedPipeline_flashDemux_U0_splitter2valueStoreFlash_V_dout,
        splitter2valueStoreFlash_V_empty_n => memcachedPipeline_flashDemux_U0_splitter2valueStoreFlash_V_empty_n,
        splitter2valueStoreFlash_V_read => memcachedPipeline_flashDemux_U0_splitter2valueStoreFlash_V_read,
        flashMetadataBuffer_V_din => memcachedPipeline_flashDemux_U0_flashMetadataBuffer_V_din,
        flashMetadataBuffer_V_full_n => memcachedPipeline_flashDemux_U0_flashMetadataBuffer_V_full_n,
        flashMetadataBuffer_V_write => memcachedPipeline_flashDemux_U0_flashMetadataBuffer_V_write,
        flashKeyBuffer_V_V_din => memcachedPipeline_flashDemux_U0_flashKeyBuffer_V_V_din,
        flashKeyBuffer_V_V_full_n => memcachedPipeline_flashDemux_U0_flashKeyBuffer_V_V_full_n,
        flashKeyBuffer_V_V_write => memcachedPipeline_flashDemux_U0_flashKeyBuffer_V_V_write,
        flashDemux2setPathValue_V_din => memcachedPipeline_flashDemux_U0_flashDemux2setPathValue_V_din,
        flashDemux2setPathValue_V_full_n => memcachedPipeline_flashDemux_U0_flashDemux2setPathValue_V_full_n,
        flashDemux2setPathValue_V_write => memcachedPipeline_flashDemux_U0_flashDemux2setPathValue_V_write,
        flashDemux2setPathMetadata_V_din => memcachedPipeline_flashDemux_U0_flashDemux2setPathMetadata_V_din,
        flashDemux2setPathMetadata_V_full_n => memcachedPipeline_flashDemux_U0_flashDemux2setPathMetadata_V_full_n,
        flashDemux2setPathMetadata_V_write => memcachedPipeline_flashDemux_U0_flashDemux2setPathMetadata_V_write,
        flashDemux2getPath_V_din => memcachedPipeline_flashDemux_U0_flashDemux2getPath_V_din,
        flashDemux2getPath_V_full_n => memcachedPipeline_flashDemux_U0_flashDemux2getPath_V_full_n,
        flashDemux2getPath_V_write => memcachedPipeline_flashDemux_U0_flashDemux2getPath_V_write);

    memcachedPipeline_flashSetPathNoFilter_U0 : component memcachedPipeline_flashSetPathNoFilter
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => memcachedPipeline_flashSetPathNoFilter_U0_ap_start,
        ap_done => memcachedPipeline_flashSetPathNoFilter_U0_ap_done,
        ap_continue => memcachedPipeline_flashSetPathNoFilter_U0_ap_continue,
        ap_idle => memcachedPipeline_flashSetPathNoFilter_U0_ap_idle,
        ap_ready => memcachedPipeline_flashSetPathNoFilter_U0_ap_ready,
        flashDemux2setPathMetadata_V_dout => memcachedPipeline_flashSetPathNoFilter_U0_flashDemux2setPathMetadata_V_dout,
        flashDemux2setPathMetadata_V_empty_n => memcachedPipeline_flashSetPathNoFilter_U0_flashDemux2setPathMetadata_V_empty_n,
        flashDemux2setPathMetadata_V_read => memcachedPipeline_flashSetPathNoFilter_U0_flashDemux2setPathMetadata_V_read,
        flashDemux2setPathValue_V_dout => memcachedPipeline_flashSetPathNoFilter_U0_flashDemux2setPathValue_V_dout,
        flashDemux2setPathValue_V_empty_n => memcachedPipeline_flashSetPathNoFilter_U0_flashDemux2setPathValue_V_empty_n,
        flashDemux2setPathValue_V_read => memcachedPipeline_flashSetPathNoFilter_U0_flashDemux2setPathValue_V_read,
        memWrCmd_V_TREADY => memcachedPipeline_flashSetPathNoFilter_U0_memWrCmd_V_TREADY,
        memWrData_V_V_TREADY => memcachedPipeline_flashSetPathNoFilter_U0_memWrData_V_V_TREADY,
        memWrCmd_V_TDATA => memcachedPipeline_flashSetPathNoFilter_U0_memWrCmd_V_TDATA,
        memWrCmd_V_TVALID => memcachedPipeline_flashSetPathNoFilter_U0_memWrCmd_V_TVALID,
        memWrData_V_V_TDATA => memcachedPipeline_flashSetPathNoFilter_U0_memWrData_V_V_TDATA,
        memWrData_V_V_TVALID => memcachedPipeline_flashSetPathNoFilter_U0_memWrData_V_V_TVALID);

    memcachedPipeline_flashDispatch_U0 : component memcachedPipeline_flashDispatch
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => memcachedPipeline_flashDispatch_U0_ap_start,
        ap_done => memcachedPipeline_flashDispatch_U0_ap_done,
        ap_continue => memcachedPipeline_flashDispatch_U0_ap_continue,
        ap_idle => memcachedPipeline_flashDispatch_U0_ap_idle,
        ap_ready => memcachedPipeline_flashDispatch_U0_ap_ready,
        flashDemux2getPath_V_dout => memcachedPipeline_flashDispatch_U0_flashDemux2getPath_V_dout,
        flashDemux2getPath_V_empty_n => memcachedPipeline_flashDispatch_U0_flashDemux2getPath_V_empty_n,
        flashDemux2getPath_V_read => memcachedPipeline_flashDispatch_U0_flashDemux2getPath_V_read,
        flash_Disp2rec_V_V_din => memcachedPipeline_flashDispatch_U0_flash_Disp2rec_V_V_din,
        flash_Disp2rec_V_V_full_n => memcachedPipeline_flashDispatch_U0_flash_Disp2rec_V_V_full_n,
        flash_Disp2rec_V_V_write => memcachedPipeline_flashDispatch_U0_flash_Disp2rec_V_V_write,
        memRdCmd_V_TREADY => memcachedPipeline_flashDispatch_U0_memRdCmd_V_TREADY,
        memRdCmd_V_TDATA => memcachedPipeline_flashDispatch_U0_memRdCmd_V_TDATA,
        memRdCmd_V_TVALID => memcachedPipeline_flashDispatch_U0_memRdCmd_V_TVALID);

    memcachedPipeline_flashReceiveNoFilter_U0 : component memcachedPipeline_flashReceiveNoFilter
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => memcachedPipeline_flashReceiveNoFilter_U0_ap_start,
        ap_done => memcachedPipeline_flashReceiveNoFilter_U0_ap_done,
        ap_continue => memcachedPipeline_flashReceiveNoFilter_U0_ap_continue,
        ap_idle => memcachedPipeline_flashReceiveNoFilter_U0_ap_idle,
        ap_ready => memcachedPipeline_flashReceiveNoFilter_U0_ap_ready,
        flash_Disp2rec_V_V_dout => memcachedPipeline_flashReceiveNoFilter_U0_flash_Disp2rec_V_V_dout,
        flash_Disp2rec_V_V_empty_n => memcachedPipeline_flashReceiveNoFilter_U0_flash_Disp2rec_V_V_empty_n,
        flash_Disp2rec_V_V_read => memcachedPipeline_flashReceiveNoFilter_U0_flash_Disp2rec_V_V_read,
        memRdData_V_V_TVALID => memcachedPipeline_flashReceiveNoFilter_U0_memRdData_V_V_TVALID,
        flashGetPath2remux_V_V_din => memcachedPipeline_flashReceiveNoFilter_U0_flashGetPath2remux_V_V_din,
        flashGetPath2remux_V_V_full_n => memcachedPipeline_flashReceiveNoFilter_U0_flashGetPath2remux_V_V_full_n,
        flashGetPath2remux_V_V_write => memcachedPipeline_flashReceiveNoFilter_U0_flashGetPath2remux_V_V_write,
        memRdData_V_V_TDATA => memcachedPipeline_flashReceiveNoFilter_U0_memRdData_V_V_TDATA,
        memRdData_V_V_TREADY => memcachedPipeline_flashReceiveNoFilter_U0_memRdData_V_V_TREADY);

    memcachedPipeline_flashRemux_U0 : component memcachedPipeline_flashRemux
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => memcachedPipeline_flashRemux_U0_ap_start,
        ap_done => memcachedPipeline_flashRemux_U0_ap_done,
        ap_continue => memcachedPipeline_flashRemux_U0_ap_continue,
        ap_idle => memcachedPipeline_flashRemux_U0_ap_idle,
        ap_ready => memcachedPipeline_flashRemux_U0_ap_ready,
        flashKeyBuffer_V_V_dout => memcachedPipeline_flashRemux_U0_flashKeyBuffer_V_V_dout,
        flashKeyBuffer_V_V_empty_n => memcachedPipeline_flashRemux_U0_flashKeyBuffer_V_V_empty_n,
        flashKeyBuffer_V_V_read => memcachedPipeline_flashRemux_U0_flashKeyBuffer_V_V_read,
        flashGetPath2remux_V_V_dout => memcachedPipeline_flashRemux_U0_flashGetPath2remux_V_V_dout,
        flashGetPath2remux_V_V_empty_n => memcachedPipeline_flashRemux_U0_flashGetPath2remux_V_V_empty_n,
        flashGetPath2remux_V_V_read => memcachedPipeline_flashRemux_U0_flashGetPath2remux_V_V_read,
        flashMetadataBuffer_V_dout => memcachedPipeline_flashRemux_U0_flashMetadataBuffer_V_dout,
        flashMetadataBuffer_V_empty_n => memcachedPipeline_flashRemux_U0_flashMetadataBuffer_V_empty_n,
        flashMetadataBuffer_V_read => memcachedPipeline_flashRemux_U0_flashMetadataBuffer_V_read,
        valueStoreFlash2merger_V_din => memcachedPipeline_flashRemux_U0_valueStoreFlash2merger_V_din,
        valueStoreFlash2merger_V_full_n => memcachedPipeline_flashRemux_U0_valueStoreFlash2merger_V_full_n,
        valueStoreFlash2merger_V_write => memcachedPipeline_flashRemux_U0_valueStoreFlash2merger_V_write);

    memcachedPipeline_merger_U0 : component memcachedPipeline_merger
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => memcachedPipeline_merger_U0_ap_start,
        ap_done => memcachedPipeline_merger_U0_ap_done,
        ap_continue => memcachedPipeline_merger_U0_ap_continue,
        ap_idle => memcachedPipeline_merger_U0_ap_idle,
        ap_ready => memcachedPipeline_merger_U0_ap_ready,
        valueStoreDram2merger_V_dout => memcachedPipeline_merger_U0_valueStoreDram2merger_V_dout,
        valueStoreDram2merger_V_empty_n => memcachedPipeline_merger_U0_valueStoreDram2merger_V_empty_n,
        valueStoreDram2merger_V_read => memcachedPipeline_merger_U0_valueStoreDram2merger_V_read,
        valueStoreFlash2merger_V_dout => memcachedPipeline_merger_U0_valueStoreFlash2merger_V_dout,
        valueStoreFlash2merger_V_empty_n => memcachedPipeline_merger_U0_valueStoreFlash2merger_V_empty_n,
        valueStoreFlash2merger_V_read => memcachedPipeline_merger_U0_valueStoreFlash2merger_V_read,
        merger2responseFormatter_V_din => memcachedPipeline_merger_U0_merger2responseFormatter_V_din,
        merger2responseFormatter_V_full_n => memcachedPipeline_merger_U0_merger2responseFormatter_V_full_n,
        merger2responseFormatter_V_write => memcachedPipeline_merger_U0_merger2responseFormatter_V_write);

    memcachedPipeline_response_f_U0 : component memcachedPipeline_response_f
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => memcachedPipeline_response_f_U0_ap_start,
        ap_done => memcachedPipeline_response_f_U0_ap_done,
        ap_continue => memcachedPipeline_response_f_U0_ap_continue,
        ap_idle => memcachedPipeline_response_f_U0_ap_idle,
        ap_ready => memcachedPipeline_response_f_U0_ap_ready,
        valueBuffer_rf_V_V_din => memcachedPipeline_response_f_U0_valueBuffer_rf_V_V_din,
        valueBuffer_rf_V_V_full_n => memcachedPipeline_response_f_U0_valueBuffer_rf_V_V_full_n,
        valueBuffer_rf_V_V_write => memcachedPipeline_response_f_U0_valueBuffer_rf_V_V_write,
        metadataBuffer_rf_V_V_din => memcachedPipeline_response_f_U0_metadataBuffer_rf_V_V_din,
        metadataBuffer_rf_V_V_full_n => memcachedPipeline_response_f_U0_metadataBuffer_rf_V_V_full_n,
        metadataBuffer_rf_V_V_write => memcachedPipeline_response_f_U0_metadataBuffer_rf_V_V_write,
        merger2responseFormatter_V_dout => memcachedPipeline_response_f_U0_merger2responseFormatter_V_dout,
        merger2responseFormatter_V_empty_n => memcachedPipeline_response_f_U0_merger2responseFormatter_V_empty_n,
        merger2responseFormatter_V_read => memcachedPipeline_response_f_U0_merger2responseFormatter_V_read);

    memcachedPipeline_response_r_U0 : component memcachedPipeline_response_r
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => memcachedPipeline_response_r_U0_ap_start,
        ap_done => memcachedPipeline_response_r_U0_ap_done,
        ap_continue => memcachedPipeline_response_r_U0_ap_continue,
        ap_idle => memcachedPipeline_response_r_U0_ap_idle,
        ap_ready => memcachedPipeline_response_r_U0_ap_ready,
        valueBuffer_rf_V_V_dout => memcachedPipeline_response_r_U0_valueBuffer_rf_V_V_dout,
        valueBuffer_rf_V_V_empty_n => memcachedPipeline_response_r_U0_valueBuffer_rf_V_V_empty_n,
        valueBuffer_rf_V_V_read => memcachedPipeline_response_r_U0_valueBuffer_rf_V_V_read,
        metadataBuffer_rf_V_V_dout => memcachedPipeline_response_r_U0_metadataBuffer_rf_V_V_dout,
        metadataBuffer_rf_V_V_empty_n => memcachedPipeline_response_r_U0_metadataBuffer_rf_V_V_empty_n,
        metadataBuffer_rf_V_V_read => memcachedPipeline_response_r_U0_metadataBuffer_rf_V_V_read,
        outData_TREADY => memcachedPipeline_response_r_U0_outData_TREADY,
        outData_TDATA => memcachedPipeline_response_r_U0_outData_TDATA,
        outData_TVALID => memcachedPipeline_response_r_U0_outData_TVALID,
        outData_TUSER => memcachedPipeline_response_r_U0_outData_TUSER,
        outData_TKEEP => memcachedPipeline_response_r_U0_outData_TKEEP,
        outData_TLAST => memcachedPipeline_response_r_U0_outData_TLAST);

    metadataBuffer_rp_V_V_U : component FIFO_memcachedPipeline_metadataBuffer_rp_V_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => metadataBuffer_rp_V_V_U_ap_dummy_ce,
        if_write_ce => metadataBuffer_rp_V_V_U_ap_dummy_ce,
        if_din => metadataBuffer_rp_V_V_din,
        if_full_n => metadataBuffer_rp_V_V_full_n,
        if_write => metadataBuffer_rp_V_V_write,
        if_dout => metadataBuffer_rp_V_V_dout,
        if_empty_n => metadataBuffer_rp_V_V_empty_n,
        if_read => metadataBuffer_rp_V_V_read);

    valueBuffer_rp_V_V_U : component FIFO_memcachedPipeline_valueBuffer_rp_V_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => valueBuffer_rp_V_V_U_ap_dummy_ce,
        if_write_ce => valueBuffer_rp_V_V_U_ap_dummy_ce,
        if_din => valueBuffer_rp_V_V_din,
        if_full_n => valueBuffer_rp_V_V_full_n,
        if_write => valueBuffer_rp_V_V_write,
        if_dout => valueBuffer_rp_V_V_dout,
        if_empty_n => valueBuffer_rp_V_V_empty_n,
        if_read => valueBuffer_rp_V_V_read);

    keyBuffer_rp_V_V_U : component FIFO_memcachedPipeline_keyBuffer_rp_V_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => keyBuffer_rp_V_V_U_ap_dummy_ce,
        if_write_ce => keyBuffer_rp_V_V_U_ap_dummy_ce,
        if_din => keyBuffer_rp_V_V_din,
        if_full_n => keyBuffer_rp_V_V_full_n,
        if_write => keyBuffer_rp_V_V_write,
        if_dout => keyBuffer_rp_V_V_dout,
        if_empty_n => keyBuffer_rp_V_V_empty_n,
        if_read => keyBuffer_rp_V_V_read);

    requestParser2hashTable_V_U : component FIFO_memcachedPipeline_requestParser2hashTable_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => requestParser2hashTable_V_U_ap_dummy_ce,
        if_write_ce => requestParser2hashTable_V_U_ap_dummy_ce,
        if_din => requestParser2hashTable_V_din,
        if_full_n => requestParser2hashTable_V_full_n,
        if_write => requestParser2hashTable_V_write,
        if_dout => requestParser2hashTable_V_dout,
        if_empty_n => requestParser2hashTable_V_empty_n,
        if_read => requestParser2hashTable_V_read);

    hashKeyBuffer_V_V_U : component FIFO_memcachedPipeline_hashKeyBuffer_V_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => hashKeyBuffer_V_V_U_ap_dummy_ce,
        if_write_ce => hashKeyBuffer_V_V_U_ap_dummy_ce,
        if_din => hashKeyBuffer_V_V_din,
        if_full_n => hashKeyBuffer_V_V_full_n,
        if_write => hashKeyBuffer_V_V_write,
        if_dout => hashKeyBuffer_V_V_dout,
        if_empty_n => hashKeyBuffer_V_V_empty_n,
        if_read => hashKeyBuffer_V_V_read);

    in2hashKeyLength_V_V_U : component FIFO_memcachedPipeline_in2hashKeyLength_V_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => in2hashKeyLength_V_V_U_ap_dummy_ce,
        if_write_ce => in2hashKeyLength_V_V_U_ap_dummy_ce,
        if_din => in2hashKeyLength_V_V_din,
        if_full_n => in2hashKeyLength_V_V_full_n,
        if_write => in2hashKeyLength_V_V_write,
        if_dout => in2hashKeyLength_V_V_dout,
        if_empty_n => in2hashKeyLength_V_V_empty_n,
        if_read => in2hashKeyLength_V_V_read);

    in2cc_V_U : component FIFO_memcachedPipeline_in2cc_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => in2cc_V_U_ap_dummy_ce,
        if_write_ce => in2cc_V_U_ap_dummy_ce,
        if_din => in2cc_V_din,
        if_full_n => in2cc_V_full_n,
        if_write => in2cc_V_write,
        if_dout => in2cc_V_dout,
        if_empty_n => in2cc_V_empty_n,
        if_read => in2cc_V_read);

    in2ccMd_V_U : component FIFO_memcachedPipeline_in2ccMd_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => in2ccMd_V_U_ap_dummy_ce,
        if_write_ce => in2ccMd_V_U_ap_dummy_ce,
        if_din => in2ccMd_V_din,
        if_full_n => in2ccMd_V_full_n,
        if_write => in2ccMd_V_write,
        if_dout => in2ccMd_V_dout,
        if_empty_n => in2ccMd_V_empty_n,
        if_read => in2ccMd_V_read);

    in2hash_V_U : component FIFO_memcachedPipeline_in2hash_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => in2hash_V_U_ap_dummy_ce,
        if_write_ce => in2hash_V_U_ap_dummy_ce,
        if_din => in2hash_V_din,
        if_full_n => in2hash_V_full_n,
        if_write => in2hash_V_write,
        if_dout => in2hash_V_dout,
        if_empty_n => in2hash_V_empty_n,
        if_read => in2hash_V_read);

    hashValueBuffer_V_V_U : component FIFO_memcachedPipeline_hashValueBuffer_V_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => hashValueBuffer_V_V_U_ap_dummy_ce,
        if_write_ce => hashValueBuffer_V_V_U_ap_dummy_ce,
        if_din => hashValueBuffer_V_V_din,
        if_full_n => hashValueBuffer_V_V_full_n,
        if_write => hashValueBuffer_V_V_write,
        if_dout => hashValueBuffer_V_V_dout,
        if_empty_n => hashValueBuffer_V_V_empty_n,
        if_read => hashValueBuffer_V_V_read);

    hashMdBuffer_V_V_U : component FIFO_memcachedPipeline_hashMdBuffer_V_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => hashMdBuffer_V_V_U_ap_dummy_ce,
        if_write_ce => hashMdBuffer_V_V_U_ap_dummy_ce,
        if_din => hashMdBuffer_V_V_din,
        if_full_n => hashMdBuffer_V_V_full_n,
        if_write => hashMdBuffer_V_V_write,
        if_dout => hashMdBuffer_V_V_dout,
        if_empty_n => hashMdBuffer_V_V_empty_n,
        if_read => hashMdBuffer_V_V_read);

    resizedKeyLength_V_U : component FIFO_memcachedPipeline_resizedKeyLength_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => resizedKeyLength_V_U_ap_dummy_ce,
        if_write_ce => resizedKeyLength_V_U_ap_dummy_ce,
        if_din => resizedKeyLength_V_din,
        if_full_n => resizedKeyLength_V_full_n,
        if_write => resizedKeyLength_V_write,
        if_dout => resizedKeyLength_V_dout,
        if_empty_n => resizedKeyLength_V_empty_n,
        if_read => resizedKeyLength_V_read);

    resizedInitValue_V_U : component FIFO_memcachedPipeline_resizedInitValue_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => resizedInitValue_V_U_ap_dummy_ce,
        if_write_ce => resizedInitValue_V_U_ap_dummy_ce,
        if_din => resizedInitValue_V_din,
        if_full_n => resizedInitValue_V_full_n,
        if_write => resizedInitValue_V_write,
        if_dout => resizedInitValue_V_dout,
        if_empty_n => resizedInitValue_V_empty_n,
        if_read => resizedInitValue_V_read);

    resizedKey_V_V_U : component FIFO_memcachedPipeline_resizedKey_V_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => resizedKey_V_V_U_ap_dummy_ce,
        if_write_ce => resizedKey_V_V_U_ap_dummy_ce,
        if_din => resizedKey_V_V_din,
        if_full_n => resizedKey_V_V_full_n,
        if_write => resizedKey_V_V_write,
        if_dout => resizedKey_V_V_dout,
        if_empty_n => resizedKey_V_V_empty_n,
        if_read => resizedKey_V_V_read);

    hash2cc_V_V_U : component FIFO_memcachedPipeline_hash2cc_V_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => hash2cc_V_V_U_ap_dummy_ce,
        if_write_ce => hash2cc_V_V_U_ap_dummy_ce,
        if_din => hash2cc_V_V_din,
        if_full_n => hash2cc_V_V_full_n,
        if_write => hash2cc_V_V_write,
        if_dout => hash2cc_V_V_dout,
        if_empty_n => hash2cc_V_V_empty_n,
        if_read => hash2cc_V_V_read);

    dec2cc_V_V_U : component FIFO_memcachedPipeline_dec2cc_V_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => dec2cc_V_V_U_ap_dummy_ce,
        if_write_ce => dec2cc_V_V_U_ap_dummy_ce,
        if_din => dec2cc_V_V_din,
        if_full_n => dec2cc_V_V_full_n,
        if_write => dec2cc_V_V_write,
        if_dout => dec2cc_V_V_dout,
        if_empty_n => dec2cc_V_V_empty_n,
        if_read => dec2cc_V_V_read);

    cc2memReadMd_V_U : component FIFO_memcachedPipeline_cc2memReadMd_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => cc2memReadMd_V_U_ap_dummy_ce,
        if_write_ce => cc2memReadMd_V_U_ap_dummy_ce,
        if_din => cc2memReadMd_V_din,
        if_full_n => cc2memReadMd_V_full_n,
        if_write => cc2memReadMd_V_write,
        if_dout => cc2memReadMd_V_dout,
        if_empty_n => cc2memReadMd_V_empty_n,
        if_read => cc2memReadMd_V_read);

    cc2memRead_V_U : component FIFO_memcachedPipeline_cc2memRead_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => cc2memRead_V_U_ap_dummy_ce,
        if_write_ce => cc2memRead_V_U_ap_dummy_ce,
        if_din => cc2memRead_V_din,
        if_full_n => cc2memRead_V_full_n,
        if_write => cc2memRead_V_write,
        if_dout => cc2memRead_V_dout,
        if_empty_n => cc2memRead_V_empty_n,
        if_read => cc2memRead_V_read);

    memRd2comp_V_U : component FIFO_memcachedPipeline_memRd2comp_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => memRd2comp_V_U_ap_dummy_ce,
        if_write_ce => memRd2comp_V_U_ap_dummy_ce,
        if_din => memRd2comp_V_din,
        if_full_n => memRd2comp_V_full_n,
        if_write => memRd2comp_V_write,
        if_dout => memRd2comp_V_dout,
        if_empty_n => memRd2comp_V_empty_n,
        if_read => memRd2comp_V_read);

    memRd2compMd_V_U : component FIFO_memcachedPipeline_memRd2compMd_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => memRd2compMd_V_U_ap_dummy_ce,
        if_write_ce => memRd2compMd_V_U_ap_dummy_ce,
        if_din => memRd2compMd_V_din,
        if_full_n => memRd2compMd_V_full_n,
        if_write => memRd2compMd_V_write,
        if_dout => memRd2compMd_V_dout,
        if_empty_n => memRd2compMd_V_empty_n,
        if_read => memRd2compMd_V_read);

    comp2memWrMemData_V_V_U : component FIFO_memcachedPipeline_comp2memWrMemData_V_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => comp2memWrMemData_V_V_U_ap_dummy_ce,
        if_write_ce => comp2memWrMemData_V_V_U_ap_dummy_ce,
        if_din => comp2memWrMemData_V_V_din,
        if_full_n => comp2memWrMemData_V_V_full_n,
        if_write => comp2memWrMemData_V_V_write,
        if_dout => comp2memWrMemData_V_V_dout,
        if_empty_n => comp2memWrMemData_V_V_empty_n,
        if_read => comp2memWrMemData_V_V_read);

    comp2memWrKey_V_U : component FIFO_memcachedPipeline_comp2memWrKey_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => comp2memWrKey_V_U_ap_dummy_ce,
        if_write_ce => comp2memWrKey_V_U_ap_dummy_ce,
        if_din => comp2memWrKey_V_din,
        if_full_n => comp2memWrKey_V_full_n,
        if_write => comp2memWrKey_V_write,
        if_dout => comp2memWrKey_V_dout,
        if_empty_n => comp2memWrKey_V_empty_n,
        if_read => comp2memWrKey_V_read);

    comp2memWrMd_V_U : component FIFO_memcachedPipeline_comp2memWrMd_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => comp2memWrMd_V_U_ap_dummy_ce,
        if_write_ce => comp2memWrMd_V_U_ap_dummy_ce,
        if_din => comp2memWrMd_V_din,
        if_full_n => comp2memWrMd_V_full_n,
        if_write => comp2memWrMd_V_write,
        if_dout => comp2memWrMd_V_dout,
        if_empty_n => comp2memWrMd_V_empty_n,
        if_read => comp2memWrMd_V_read);

    comp2memWrStatus_V_bin_U : component FIFO_memcachedPipeline_comp2memWrStatus_V_bin
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => comp2memWrStatus_V_bin_U_ap_dummy_ce,
        if_write_ce => comp2memWrStatus_V_bin_U_ap_dummy_ce,
        if_din => comp2memWrStatus_V_bin_din,
        if_full_n => comp2memWrStatus_V_bin_full_n,
        if_write => comp2memWrStatus_V_bin_write,
        if_dout => comp2memWrStatus_V_bin_dout,
        if_empty_n => comp2memWrStatus_V_bin_empty_n,
        if_read => comp2memWrStatus_V_bin_read);

    memWr2out_V_U : component FIFO_memcachedPipeline_memWr2out_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => memWr2out_V_U_ap_dummy_ce,
        if_write_ce => memWr2out_V_U_ap_dummy_ce,
        if_din => memWr2out_V_din,
        if_full_n => memWr2out_V_full_n,
        if_write => memWr2out_V_write,
        if_dout => memWr2out_V_dout,
        if_empty_n => memWr2out_V_empty_n,
        if_read => memWr2out_V_read);

    hashTable2splitter_V_U : component FIFO_memcachedPipeline_hashTable2splitter_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => hashTable2splitter_V_U_ap_dummy_ce,
        if_write_ce => hashTable2splitter_V_U_ap_dummy_ce,
        if_din => hashTable2splitter_V_din,
        if_full_n => hashTable2splitter_V_full_n,
        if_write => hashTable2splitter_V_write,
        if_dout => hashTable2splitter_V_dout,
        if_empty_n => hashTable2splitter_V_empty_n,
        if_read => hashTable2splitter_V_read);

    splitter2valueStoreFlash_V_U : component FIFO_memcachedPipeline_splitter2valueStoreFlash_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => splitter2valueStoreFlash_V_U_ap_dummy_ce,
        if_write_ce => splitter2valueStoreFlash_V_U_ap_dummy_ce,
        if_din => splitter2valueStoreFlash_V_din,
        if_full_n => splitter2valueStoreFlash_V_full_n,
        if_write => splitter2valueStoreFlash_V_write,
        if_dout => splitter2valueStoreFlash_V_dout,
        if_empty_n => splitter2valueStoreFlash_V_empty_n,
        if_read => splitter2valueStoreFlash_V_read);

    splitter2valueStoreDram_V_U : component FIFO_memcachedPipeline_splitter2valueStoreDram_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => splitter2valueStoreDram_V_U_ap_dummy_ce,
        if_write_ce => splitter2valueStoreDram_V_U_ap_dummy_ce,
        if_din => splitter2valueStoreDram_V_din,
        if_full_n => splitter2valueStoreDram_V_full_n,
        if_write => splitter2valueStoreDram_V_write,
        if_dout => splitter2valueStoreDram_V_dout,
        if_empty_n => splitter2valueStoreDram_V_empty_n,
        if_read => splitter2valueStoreDram_V_read);

    filterPopSet_V_V_U : component FIFO_memcachedPipeline_filterPopSet_V_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => filterPopSet_V_V_U_ap_dummy_ce,
        if_write_ce => filterPopSet_V_V_U_ap_dummy_ce,
        if_din => filterPopSet_V_V_din,
        if_full_n => filterPopSet_V_V_full_n,
        if_write => filterPopSet_V_V_write,
        if_dout => filterPopSet_V_V_dout,
        if_empty_n => filterPopSet_V_V_empty_n,
        if_read => filterPopSet_V_V_read);

    filterPopGet_V_V_U : component FIFO_memcachedPipeline_filterPopGet_V_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => filterPopGet_V_V_U_ap_dummy_ce,
        if_write_ce => filterPopGet_V_V_U_ap_dummy_ce,
        if_din => filterPopGet_V_V_din,
        if_full_n => filterPopGet_V_V_full_n,
        if_write => filterPopGet_V_V_write,
        if_dout => filterPopGet_V_V_dout,
        if_empty_n => filterPopGet_V_V_empty_n,
        if_read => filterPopGet_V_V_read);

    accCtrl2demux_V_U : component FIFO_memcachedPipeline_accCtrl2demux_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => accCtrl2demux_V_U_ap_dummy_ce,
        if_write_ce => accCtrl2demux_V_U_ap_dummy_ce,
        if_din => accCtrl2demux_V_din,
        if_full_n => accCtrl2demux_V_full_n,
        if_write => accCtrl2demux_V_write,
        if_dout => accCtrl2demux_V_dout,
        if_empty_n => accCtrl2demux_V_empty_n,
        if_read => accCtrl2demux_V_read);

    metadataBuffer_V_U : component FIFO_memcachedPipeline_metadataBuffer_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => metadataBuffer_V_U_ap_dummy_ce,
        if_write_ce => metadataBuffer_V_U_ap_dummy_ce,
        if_din => metadataBuffer_V_din,
        if_full_n => metadataBuffer_V_full_n,
        if_write => metadataBuffer_V_write,
        if_dout => metadataBuffer_V_dout,
        if_empty_n => metadataBuffer_V_empty_n,
        if_read => metadataBuffer_V_read);

    keyBuffer_V_V_U : component FIFO_memcachedPipeline_keyBuffer_V_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => keyBuffer_V_V_U_ap_dummy_ce,
        if_write_ce => keyBuffer_V_V_U_ap_dummy_ce,
        if_din => keyBuffer_V_V_din,
        if_full_n => keyBuffer_V_V_full_n,
        if_write => keyBuffer_V_V_write,
        if_dout => keyBuffer_V_V_dout,
        if_empty_n => keyBuffer_V_V_empty_n,
        if_read => keyBuffer_V_V_read);

    demux2getPath_V_U : component FIFO_memcachedPipeline_demux2getPath_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => demux2getPath_V_U_ap_dummy_ce,
        if_write_ce => demux2getPath_V_U_ap_dummy_ce,
        if_din => demux2getPath_V_din,
        if_full_n => demux2getPath_V_full_n,
        if_write => demux2getPath_V_write,
        if_dout => demux2getPath_V_dout,
        if_empty_n => demux2getPath_V_empty_n,
        if_read => demux2getPath_V_read);

    demux2setPathMetadata_V_U : component FIFO_memcachedPipeline_demux2setPathMetadata_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => demux2setPathMetadata_V_U_ap_dummy_ce,
        if_write_ce => demux2setPathMetadata_V_U_ap_dummy_ce,
        if_din => demux2setPathMetadata_V_din,
        if_full_n => demux2setPathMetadata_V_full_n,
        if_write => demux2setPathMetadata_V_write,
        if_dout => demux2setPathMetadata_V_dout,
        if_empty_n => demux2setPathMetadata_V_empty_n,
        if_read => demux2setPathMetadata_V_read);

    demux2setPathValue_V_U : component FIFO_memcachedPipeline_demux2setPathValue_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => demux2setPathValue_V_U_ap_dummy_ce,
        if_write_ce => demux2setPathValue_V_U_ap_dummy_ce,
        if_din => demux2setPathValue_V_din,
        if_full_n => demux2setPathValue_V_full_n,
        if_write => demux2setPathValue_V_write,
        if_dout => demux2setPathValue_V_dout,
        if_empty_n => demux2setPathValue_V_empty_n,
        if_read => demux2setPathValue_V_read);

    disp2rec_V_V_U : component FIFO_memcachedPipeline_disp2rec_V_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => disp2rec_V_V_U_ap_dummy_ce,
        if_write_ce => disp2rec_V_V_U_ap_dummy_ce,
        if_din => disp2rec_V_V_din,
        if_full_n => disp2rec_V_V_full_n,
        if_write => disp2rec_V_V_write,
        if_dout => disp2rec_V_V_dout,
        if_empty_n => disp2rec_V_V_empty_n,
        if_read => disp2rec_V_V_read);

    getPath2remux_V_V_U : component FIFO_memcachedPipeline_getPath2remux_V_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => getPath2remux_V_V_U_ap_dummy_ce,
        if_write_ce => getPath2remux_V_V_U_ap_dummy_ce,
        if_din => getPath2remux_V_V_din,
        if_full_n => getPath2remux_V_V_full_n,
        if_write => getPath2remux_V_V_write,
        if_dout => getPath2remux_V_V_dout,
        if_empty_n => getPath2remux_V_V_empty_n,
        if_read => getPath2remux_V_V_read);

    valueStoreDram2merger_V_U : component FIFO_memcachedPipeline_valueStoreDram2merger_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => valueStoreDram2merger_V_U_ap_dummy_ce,
        if_write_ce => valueStoreDram2merger_V_U_ap_dummy_ce,
        if_din => valueStoreDram2merger_V_din,
        if_full_n => valueStoreDram2merger_V_full_n,
        if_write => valueStoreDram2merger_V_write,
        if_dout => valueStoreDram2merger_V_dout,
        if_empty_n => valueStoreDram2merger_V_empty_n,
        if_read => valueStoreDram2merger_V_read);

    flashMetadataBuffer_V_U : component FIFO_memcachedPipeline_flashMetadataBuffer_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => flashMetadataBuffer_V_U_ap_dummy_ce,
        if_write_ce => flashMetadataBuffer_V_U_ap_dummy_ce,
        if_din => flashMetadataBuffer_V_din,
        if_full_n => flashMetadataBuffer_V_full_n,
        if_write => flashMetadataBuffer_V_write,
        if_dout => flashMetadataBuffer_V_dout,
        if_empty_n => flashMetadataBuffer_V_empty_n,
        if_read => flashMetadataBuffer_V_read);

    flashKeyBuffer_V_V_U : component FIFO_memcachedPipeline_flashKeyBuffer_V_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => flashKeyBuffer_V_V_U_ap_dummy_ce,
        if_write_ce => flashKeyBuffer_V_V_U_ap_dummy_ce,
        if_din => flashKeyBuffer_V_V_din,
        if_full_n => flashKeyBuffer_V_V_full_n,
        if_write => flashKeyBuffer_V_V_write,
        if_dout => flashKeyBuffer_V_V_dout,
        if_empty_n => flashKeyBuffer_V_V_empty_n,
        if_read => flashKeyBuffer_V_V_read);

    flashDemux2getPath_V_U : component FIFO_memcachedPipeline_flashDemux2getPath_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => flashDemux2getPath_V_U_ap_dummy_ce,
        if_write_ce => flashDemux2getPath_V_U_ap_dummy_ce,
        if_din => flashDemux2getPath_V_din,
        if_full_n => flashDemux2getPath_V_full_n,
        if_write => flashDemux2getPath_V_write,
        if_dout => flashDemux2getPath_V_dout,
        if_empty_n => flashDemux2getPath_V_empty_n,
        if_read => flashDemux2getPath_V_read);

    flashDemux2setPathMetadata_V_U : component FIFO_memcachedPipeline_flashDemux2setPathMetadata_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => flashDemux2setPathMetadata_V_U_ap_dummy_ce,
        if_write_ce => flashDemux2setPathMetadata_V_U_ap_dummy_ce,
        if_din => flashDemux2setPathMetadata_V_din,
        if_full_n => flashDemux2setPathMetadata_V_full_n,
        if_write => flashDemux2setPathMetadata_V_write,
        if_dout => flashDemux2setPathMetadata_V_dout,
        if_empty_n => flashDemux2setPathMetadata_V_empty_n,
        if_read => flashDemux2setPathMetadata_V_read);

    flashDemux2setPathValue_V_U : component FIFO_memcachedPipeline_flashDemux2setPathValue_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => flashDemux2setPathValue_V_U_ap_dummy_ce,
        if_write_ce => flashDemux2setPathValue_V_U_ap_dummy_ce,
        if_din => flashDemux2setPathValue_V_din,
        if_full_n => flashDemux2setPathValue_V_full_n,
        if_write => flashDemux2setPathValue_V_write,
        if_dout => flashDemux2setPathValue_V_dout,
        if_empty_n => flashDemux2setPathValue_V_empty_n,
        if_read => flashDemux2setPathValue_V_read);

    flash_Disp2rec_V_V_U : component FIFO_memcachedPipeline_flash_Disp2rec_V_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => flash_Disp2rec_V_V_U_ap_dummy_ce,
        if_write_ce => flash_Disp2rec_V_V_U_ap_dummy_ce,
        if_din => flash_Disp2rec_V_V_din,
        if_full_n => flash_Disp2rec_V_V_full_n,
        if_write => flash_Disp2rec_V_V_write,
        if_dout => flash_Disp2rec_V_V_dout,
        if_empty_n => flash_Disp2rec_V_V_empty_n,
        if_read => flash_Disp2rec_V_V_read);

    flashGetPath2remux_V_V_U : component FIFO_memcachedPipeline_flashGetPath2remux_V_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => flashGetPath2remux_V_V_U_ap_dummy_ce,
        if_write_ce => flashGetPath2remux_V_V_U_ap_dummy_ce,
        if_din => flashGetPath2remux_V_V_din,
        if_full_n => flashGetPath2remux_V_V_full_n,
        if_write => flashGetPath2remux_V_V_write,
        if_dout => flashGetPath2remux_V_V_dout,
        if_empty_n => flashGetPath2remux_V_V_empty_n,
        if_read => flashGetPath2remux_V_V_read);

    valueStoreFlash2merger_V_U : component FIFO_memcachedPipeline_valueStoreFlash2merger_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => valueStoreFlash2merger_V_U_ap_dummy_ce,
        if_write_ce => valueStoreFlash2merger_V_U_ap_dummy_ce,
        if_din => valueStoreFlash2merger_V_din,
        if_full_n => valueStoreFlash2merger_V_full_n,
        if_write => valueStoreFlash2merger_V_write,
        if_dout => valueStoreFlash2merger_V_dout,
        if_empty_n => valueStoreFlash2merger_V_empty_n,
        if_read => valueStoreFlash2merger_V_read);

    merger2responseFormatter_V_U : component FIFO_memcachedPipeline_merger2responseFormatter_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => merger2responseFormatter_V_U_ap_dummy_ce,
        if_write_ce => merger2responseFormatter_V_U_ap_dummy_ce,
        if_din => merger2responseFormatter_V_din,
        if_full_n => merger2responseFormatter_V_full_n,
        if_write => merger2responseFormatter_V_write,
        if_dout => merger2responseFormatter_V_dout,
        if_empty_n => merger2responseFormatter_V_empty_n,
        if_read => merger2responseFormatter_V_read);

    valueBuffer_rf_V_V_U : component FIFO_memcachedPipeline_valueBuffer_rf_V_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => valueBuffer_rf_V_V_U_ap_dummy_ce,
        if_write_ce => valueBuffer_rf_V_V_U_ap_dummy_ce,
        if_din => valueBuffer_rf_V_V_din,
        if_full_n => valueBuffer_rf_V_V_full_n,
        if_write => valueBuffer_rf_V_V_write,
        if_dout => valueBuffer_rf_V_V_dout,
        if_empty_n => valueBuffer_rf_V_V_empty_n,
        if_read => valueBuffer_rf_V_V_read);

    metadataBuffer_rf_V_V_U : component FIFO_memcachedPipeline_metadataBuffer_rf_V_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => metadataBuffer_rf_V_V_U_ap_dummy_ce,
        if_write_ce => metadataBuffer_rf_V_V_U_ap_dummy_ce,
        if_din => metadataBuffer_rf_V_V_din,
        if_full_n => metadataBuffer_rf_V_V_full_n,
        if_write => metadataBuffer_rf_V_V_write,
        if_dout => metadataBuffer_rf_V_V_dout,
        if_empty_n => metadataBuffer_rf_V_V_empty_n,
        if_read => metadataBuffer_rf_V_V_read);





    -- ap_CS assign process. --
    ap_CS_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS <= ap_const_logic_0;
            else
                ap_CS <= ap_const_logic_0;
            end if;
        end if;
    end process;


    -- ap_reg_procdone_memcachedPipeline_dispatch_U0 assign process. --
    ap_reg_procdone_memcachedPipeline_dispatch_U0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_procdone_memcachedPipeline_dispatch_U0 <= ap_const_logic_0;
            else
            end if;
        end if;
    end process;


    -- ap_reg_procdone_memcachedPipeline_flashDispatch_U0 assign process. --
    ap_reg_procdone_memcachedPipeline_flashDispatch_U0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_procdone_memcachedPipeline_flashDispatch_U0 <= ap_const_logic_0;
            else
            end if;
        end if;
    end process;


    -- ap_reg_procdone_memcachedPipeline_flashSetPathNoFilter_U0 assign process. --
    ap_reg_procdone_memcachedPipeline_flashSetPathNoFilter_U0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_procdone_memcachedPipeline_flashSetPathNoFilter_U0 <= ap_const_logic_0;
            else
            end if;
        end if;
    end process;


    -- ap_reg_procdone_memcachedPipeline_memRead_U0 assign process. --
    ap_reg_procdone_memcachedPipeline_memRead_U0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_procdone_memcachedPipeline_memRead_U0 <= ap_const_logic_0;
            else
            end if;
        end if;
    end process;


    -- ap_reg_procdone_memcachedPipeline_memWrite_U0 assign process. --
    ap_reg_procdone_memcachedPipeline_memWrite_U0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_procdone_memcachedPipeline_memWrite_U0 <= ap_const_logic_0;
            else
            end if;
        end if;
    end process;


    -- ap_reg_procdone_memcachedPipeline_response_r_U0 assign process. --
    ap_reg_procdone_memcachedPipeline_response_r_U0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_procdone_memcachedPipeline_response_r_U0 <= ap_const_logic_0;
            else
            end if;
        end if;
    end process;


    -- ap_reg_procdone_memcachedPipeline_setPath_U0 assign process. --
    ap_reg_procdone_memcachedPipeline_setPath_U0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_procdone_memcachedPipeline_setPath_U0 <= ap_const_logic_0;
            else
            end if;
        end if;
    end process;


    -- memcachedPipeline_accessControl_U0_ap_start assign process. --
    memcachedPipeline_accessControl_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                memcachedPipeline_accessControl_U0_ap_start <= ap_const_logic_0;
            else
                memcachedPipeline_accessControl_U0_ap_start <= ap_const_logic_1;
            end if;
        end if;
    end process;


    -- memcachedPipeline_bobj_U0_ap_start assign process. --
    memcachedPipeline_bobj_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                memcachedPipeline_bobj_U0_ap_start <= ap_const_logic_0;
            else
                memcachedPipeline_bobj_U0_ap_start <= ap_const_logic_1;
            end if;
        end if;
    end process;


    -- memcachedPipeline_bp_r_U0_ap_start assign process. --
    memcachedPipeline_bp_r_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                memcachedPipeline_bp_r_U0_ap_start <= ap_const_logic_0;
            else
                memcachedPipeline_bp_r_U0_ap_start <= ap_const_logic_1;
            end if;
        end if;
    end process;


    -- memcachedPipeline_concurrencyControl_U0_ap_start assign process. --
    memcachedPipeline_concurrencyControl_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                memcachedPipeline_concurrencyControl_U0_ap_start <= ap_const_logic_0;
            else
                memcachedPipeline_concurrencyControl_U0_ap_start <= ap_const_logic_1;
            end if;
        end if;
    end process;


    -- memcachedPipeline_demux_U0_ap_start assign process. --
    memcachedPipeline_demux_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                memcachedPipeline_demux_U0_ap_start <= ap_const_logic_0;
            else
                memcachedPipeline_demux_U0_ap_start <= ap_const_logic_1;
            end if;
        end if;
    end process;


    -- memcachedPipeline_dispatch_U0_ap_start assign process. --
    memcachedPipeline_dispatch_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                memcachedPipeline_dispatch_U0_ap_start <= ap_const_logic_0;
            else
                memcachedPipeline_dispatch_U0_ap_start <= ap_const_logic_1;
            end if;
        end if;
    end process;


    -- memcachedPipeline_flashDemux_U0_ap_start assign process. --
    memcachedPipeline_flashDemux_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                memcachedPipeline_flashDemux_U0_ap_start <= ap_const_logic_0;
            else
                memcachedPipeline_flashDemux_U0_ap_start <= ap_const_logic_1;
            end if;
        end if;
    end process;


    -- memcachedPipeline_flashDispatch_U0_ap_start assign process. --
    memcachedPipeline_flashDispatch_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                memcachedPipeline_flashDispatch_U0_ap_start <= ap_const_logic_0;
            else
                memcachedPipeline_flashDispatch_U0_ap_start <= ap_const_logic_1;
            end if;
        end if;
    end process;


    -- memcachedPipeline_flashRemux_U0_ap_start assign process. --
    memcachedPipeline_flashRemux_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                memcachedPipeline_flashRemux_U0_ap_start <= ap_const_logic_0;
            else
                memcachedPipeline_flashRemux_U0_ap_start <= ap_const_logic_1;
            end if;
        end if;
    end process;


    -- memcachedPipeline_flashSetPathNoFilter_U0_ap_start assign process. --
    memcachedPipeline_flashSetPathNoFilter_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                memcachedPipeline_flashSetPathNoFilter_U0_ap_start <= ap_const_logic_0;
            else
                memcachedPipeline_flashSetPathNoFilter_U0_ap_start <= ap_const_logic_1;
            end if;
        end if;
    end process;


    -- memcachedPipeline_hashKeyResizer_U0_ap_start assign process. --
    memcachedPipeline_hashKeyResizer_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                memcachedPipeline_hashKeyResizer_U0_ap_start <= ap_const_logic_0;
            else
                memcachedPipeline_hashKeyResizer_U0_ap_start <= ap_const_logic_1;
            end if;
        end if;
    end process;


    -- memcachedPipeline_ht_inputLogic_U0_ap_start assign process. --
    memcachedPipeline_ht_inputLogic_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                memcachedPipeline_ht_inputLogic_U0_ap_start <= ap_const_logic_0;
            else
                memcachedPipeline_ht_inputLogic_U0_ap_start <= ap_const_logic_1;
            end if;
        end if;
    end process;


    -- memcachedPipeline_ht_outputLogic_U0_ap_start assign process. --
    memcachedPipeline_ht_outputLogic_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                memcachedPipeline_ht_outputLogic_U0_ap_start <= ap_const_logic_0;
            else
                memcachedPipeline_ht_outputLogic_U0_ap_start <= ap_const_logic_1;
            end if;
        end if;
    end process;


    -- memcachedPipeline_memRead_U0_ap_start assign process. --
    memcachedPipeline_memRead_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                memcachedPipeline_memRead_U0_ap_start <= ap_const_logic_0;
            else
                memcachedPipeline_memRead_U0_ap_start <= ap_const_logic_1;
            end if;
        end if;
    end process;


    -- memcachedPipeline_merger_U0_ap_start assign process. --
    memcachedPipeline_merger_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                memcachedPipeline_merger_U0_ap_start <= ap_const_logic_0;
            else
                memcachedPipeline_merger_U0_ap_start <= ap_const_logic_1;
            end if;
        end if;
    end process;


    -- memcachedPipeline_remux_U0_ap_start assign process. --
    memcachedPipeline_remux_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                memcachedPipeline_remux_U0_ap_start <= ap_const_logic_0;
            else
                memcachedPipeline_remux_U0_ap_start <= ap_const_logic_1;
            end if;
        end if;
    end process;


    -- memcachedPipeline_response_f_U0_ap_start assign process. --
    memcachedPipeline_response_f_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                memcachedPipeline_response_f_U0_ap_start <= ap_const_logic_0;
            else
                memcachedPipeline_response_f_U0_ap_start <= ap_const_logic_1;
            end if;
        end if;
    end process;


    -- memcachedPipeline_response_r_U0_ap_start assign process. --
    memcachedPipeline_response_r_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                memcachedPipeline_response_r_U0_ap_start <= ap_const_logic_0;
            else
                memcachedPipeline_response_r_U0_ap_start <= ap_const_logic_1;
            end if;
        end if;
    end process;


    -- memcachedPipeline_setPath_U0_ap_start assign process. --
    memcachedPipeline_setPath_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                memcachedPipeline_setPath_U0_ap_start <= ap_const_logic_0;
            else
                memcachedPipeline_setPath_U0_ap_start <= ap_const_logic_1;
            end if;
        end if;
    end process;


    -- memcachedPipeline_splitter_U0_ap_start assign process. --
    memcachedPipeline_splitter_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                memcachedPipeline_splitter_U0_ap_start <= ap_const_logic_0;
            else
                memcachedPipeline_splitter_U0_ap_start <= ap_const_logic_1;
            end if;
        end if;
    end process;

    accCtrl2demux_V_U_ap_dummy_ce <= ap_const_logic_1;
    accCtrl2demux_V_din <= memcachedPipeline_accessControl_U0_accCtrl2demux_V_din;
    accCtrl2demux_V_read <= memcachedPipeline_demux_U0_accCtrl2demux_V_read;
    accCtrl2demux_V_write <= memcachedPipeline_accessControl_U0_accCtrl2demux_V_write;
    addressAssignDramIn_V_V_TREADY <= memcachedPipeline_memWrite_U0_addressAssignDramIn_V_V_TREADY;
    addressAssignFlashIn_V_V_TREADY <= memcachedPipeline_memWrite_U0_addressAssignFlashIn_V_V_TREADY;
    addressReturnOut_V_V_TDATA <= memcachedPipeline_memWrite_U0_addressReturnOut_V_V_TDATA;
    addressReturnOut_V_V_TVALID <= memcachedPipeline_memWrite_U0_addressReturnOut_V_V_TVALID;

    -- ap_rst_n_inv assign process. --
    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    ap_sig_hs_continue <= ap_const_logic_0;

    -- ap_sig_hs_done assign process. --
    ap_sig_hs_done_assign_proc : process(ap_reg_procdone_memcachedPipeline_memRead_U0, ap_reg_procdone_memcachedPipeline_memWrite_U0, ap_reg_procdone_memcachedPipeline_setPath_U0, ap_reg_procdone_memcachedPipeline_dispatch_U0, ap_reg_procdone_memcachedPipeline_flashSetPathNoFilter_U0, ap_reg_procdone_memcachedPipeline_flashDispatch_U0, ap_reg_procdone_memcachedPipeline_response_r_U0)
    begin
        if (((ap_const_logic_1 = ap_reg_procdone_memcachedPipeline_memRead_U0) and (ap_const_logic_1 = ap_reg_procdone_memcachedPipeline_memWrite_U0) and (ap_const_logic_1 = ap_reg_procdone_memcachedPipeline_setPath_U0) and (ap_const_logic_1 = ap_reg_procdone_memcachedPipeline_dispatch_U0) and (ap_const_logic_1 = ap_reg_procdone_memcachedPipeline_flashSetPathNoFilter_U0) and (ap_const_logic_1 = ap_reg_procdone_memcachedPipeline_flashDispatch_U0) and (ap_const_logic_1 = ap_reg_procdone_memcachedPipeline_response_r_U0))) then 
            ap_sig_hs_done <= ap_const_logic_1;
        else 
            ap_sig_hs_done <= ap_const_logic_0;
        end if; 
    end process;

    cc2memReadMd_V_U_ap_dummy_ce <= ap_const_logic_1;
    cc2memReadMd_V_din <= memcachedPipeline_concurrencyControl_U0_cc2memReadMd_V_din;
    cc2memReadMd_V_read <= memcachedPipeline_memRead_U0_cc2memReadMd_V_read;
    cc2memReadMd_V_write <= memcachedPipeline_concurrencyControl_U0_cc2memReadMd_V_write;
    cc2memRead_V_U_ap_dummy_ce <= ap_const_logic_1;
    cc2memRead_V_din <= memcachedPipeline_concurrencyControl_U0_cc2memRead_V_din;
    cc2memRead_V_read <= memcachedPipeline_memRead_U0_cc2memRead_V_read;
    cc2memRead_V_write <= memcachedPipeline_concurrencyControl_U0_cc2memRead_V_write;
    comp2memWrKey_V_U_ap_dummy_ce <= ap_const_logic_1;
    comp2memWrKey_V_din <= memcachedPipeline_ht_compare_U0_comp2memWrKey_V_din;
    comp2memWrKey_V_read <= memcachedPipeline_memWrite_U0_comp2memWrKey_V_read;
    comp2memWrKey_V_write <= memcachedPipeline_ht_compare_U0_comp2memWrKey_V_write;
    comp2memWrMd_V_U_ap_dummy_ce <= ap_const_logic_1;
    comp2memWrMd_V_din <= memcachedPipeline_ht_compare_U0_comp2memWrMd_V_din;
    comp2memWrMd_V_read <= memcachedPipeline_memWrite_U0_comp2memWrMd_V_read;
    comp2memWrMd_V_write <= memcachedPipeline_ht_compare_U0_comp2memWrMd_V_write;
    comp2memWrMemData_V_V_U_ap_dummy_ce <= ap_const_logic_1;
    comp2memWrMemData_V_V_din <= memcachedPipeline_ht_compare_U0_comp2memWrMemData_V_V_din;
    comp2memWrMemData_V_V_read <= memcachedPipeline_memWrite_U0_comp2memWrMemData_V_V_read;
    comp2memWrMemData_V_V_write <= memcachedPipeline_ht_compare_U0_comp2memWrMemData_V_V_write;
    comp2memWrStatus_V_bin_U_ap_dummy_ce <= ap_const_logic_1;
    comp2memWrStatus_V_bin_din <= memcachedPipeline_ht_compare_U0_comp2memWrStatus_V_bin_din;
    comp2memWrStatus_V_bin_read <= memcachedPipeline_memWrite_U0_comp2memWrStatus_V_bin_read;
    comp2memWrStatus_V_bin_write <= memcachedPipeline_ht_compare_U0_comp2memWrStatus_V_bin_write;
    dec2cc_V_V_U_ap_dummy_ce <= ap_const_logic_1;
    dec2cc_V_V_din <= memcachedPipeline_memWrite_U0_dec2cc_V_V_din;
    dec2cc_V_V_read <= memcachedPipeline_concurrencyControl_U0_dec2cc_V_V_read;
    dec2cc_V_V_write <= memcachedPipeline_memWrite_U0_dec2cc_V_V_write;
    demux2getPath_V_U_ap_dummy_ce <= ap_const_logic_1;
    demux2getPath_V_din <= memcachedPipeline_demux_U0_demux2getPath_V_din;
    demux2getPath_V_read <= memcachedPipeline_dispatch_U0_demux2getPath_V_read;
    demux2getPath_V_write <= memcachedPipeline_demux_U0_demux2getPath_V_write;
    demux2setPathMetadata_V_U_ap_dummy_ce <= ap_const_logic_1;
    demux2setPathMetadata_V_din <= memcachedPipeline_demux_U0_demux2setPathMetadata_V_din;
    demux2setPathMetadata_V_read <= memcachedPipeline_setPath_U0_demux2setPathMetadata_V_read;
    demux2setPathMetadata_V_write <= memcachedPipeline_demux_U0_demux2setPathMetadata_V_write;
    demux2setPathValue_V_U_ap_dummy_ce <= ap_const_logic_1;
    demux2setPathValue_V_din <= memcachedPipeline_demux_U0_demux2setPathValue_V_din;
    demux2setPathValue_V_read <= memcachedPipeline_setPath_U0_demux2setPathValue_V_read;
    demux2setPathValue_V_write <= memcachedPipeline_demux_U0_demux2setPathValue_V_write;
    disp2rec_V_V_U_ap_dummy_ce <= ap_const_logic_1;
    disp2rec_V_V_din <= memcachedPipeline_dispatch_U0_disp2rec_V_V_din;
    disp2rec_V_V_read <= memcachedPipeline_receive_U0_disp2rec_V_V_read;
    disp2rec_V_V_write <= memcachedPipeline_dispatch_U0_disp2rec_V_V_write;
    dramValueStoreMemRdCmd_V_TDATA <= memcachedPipeline_dispatch_U0_memRdCmd_V_TDATA;
    dramValueStoreMemRdCmd_V_TVALID <= memcachedPipeline_dispatch_U0_memRdCmd_V_TVALID;
    dramValueStoreMemRdData_V_V_TREADY <= memcachedPipeline_receive_U0_memRdData_V_V_TREADY;
    dramValueStoreMemWrCmd_V_TDATA <= memcachedPipeline_setPath_U0_memWrCmd_V_TDATA;
    dramValueStoreMemWrCmd_V_TVALID <= memcachedPipeline_setPath_U0_memWrCmd_V_TVALID;
    dramValueStoreMemWrData_V_V_TDATA <= memcachedPipeline_setPath_U0_memWrData_V_V_TDATA;
    dramValueStoreMemWrData_V_V_TVALID <= memcachedPipeline_setPath_U0_memWrData_V_V_TVALID;
    filterPopGet_V_V_U_ap_dummy_ce <= ap_const_logic_1;
    filterPopGet_V_V_din <= memcachedPipeline_receive_U0_filterPopGet_V_V_din;
    filterPopGet_V_V_read <= memcachedPipeline_accessControl_U0_filterPopGet_V_V_read;
    filterPopGet_V_V_write <= memcachedPipeline_receive_U0_filterPopGet_V_V_write;
    filterPopSet_V_V_U_ap_dummy_ce <= ap_const_logic_1;
    filterPopSet_V_V_din <= memcachedPipeline_setPath_U0_filterPopSet_V_V_din;
    filterPopSet_V_V_read <= memcachedPipeline_accessControl_U0_filterPopSet_V_V_read;
    filterPopSet_V_V_write <= memcachedPipeline_setPath_U0_filterPopSet_V_V_write;
    flashDemux2getPath_V_U_ap_dummy_ce <= ap_const_logic_1;
    flashDemux2getPath_V_din <= memcachedPipeline_flashDemux_U0_flashDemux2getPath_V_din;
    flashDemux2getPath_V_read <= memcachedPipeline_flashDispatch_U0_flashDemux2getPath_V_read;
    flashDemux2getPath_V_write <= memcachedPipeline_flashDemux_U0_flashDemux2getPath_V_write;
    flashDemux2setPathMetadata_V_U_ap_dummy_ce <= ap_const_logic_1;
    flashDemux2setPathMetadata_V_din <= memcachedPipeline_flashDemux_U0_flashDemux2setPathMetadata_V_din;
    flashDemux2setPathMetadata_V_read <= memcachedPipeline_flashSetPathNoFilter_U0_flashDemux2setPathMetadata_V_read;
    flashDemux2setPathMetadata_V_write <= memcachedPipeline_flashDemux_U0_flashDemux2setPathMetadata_V_write;
    flashDemux2setPathValue_V_U_ap_dummy_ce <= ap_const_logic_1;
    flashDemux2setPathValue_V_din <= memcachedPipeline_flashDemux_U0_flashDemux2setPathValue_V_din;
    flashDemux2setPathValue_V_read <= memcachedPipeline_flashSetPathNoFilter_U0_flashDemux2setPathValue_V_read;
    flashDemux2setPathValue_V_write <= memcachedPipeline_flashDemux_U0_flashDemux2setPathValue_V_write;
    flashGetPath2remux_V_V_U_ap_dummy_ce <= ap_const_logic_1;
    flashGetPath2remux_V_V_din <= memcachedPipeline_flashReceiveNoFilter_U0_flashGetPath2remux_V_V_din;
    flashGetPath2remux_V_V_read <= memcachedPipeline_flashRemux_U0_flashGetPath2remux_V_V_read;
    flashGetPath2remux_V_V_write <= memcachedPipeline_flashReceiveNoFilter_U0_flashGetPath2remux_V_V_write;
    flashKeyBuffer_V_V_U_ap_dummy_ce <= ap_const_logic_1;
    flashKeyBuffer_V_V_din <= memcachedPipeline_flashDemux_U0_flashKeyBuffer_V_V_din;
    flashKeyBuffer_V_V_read <= memcachedPipeline_flashRemux_U0_flashKeyBuffer_V_V_read;
    flashKeyBuffer_V_V_write <= memcachedPipeline_flashDemux_U0_flashKeyBuffer_V_V_write;
    flashMetadataBuffer_V_U_ap_dummy_ce <= ap_const_logic_1;
    flashMetadataBuffer_V_din <= memcachedPipeline_flashDemux_U0_flashMetadataBuffer_V_din;
    flashMetadataBuffer_V_read <= memcachedPipeline_flashRemux_U0_flashMetadataBuffer_V_read;
    flashMetadataBuffer_V_write <= memcachedPipeline_flashDemux_U0_flashMetadataBuffer_V_write;
    flashValueStoreMemRdCmd_V_TDATA <= memcachedPipeline_flashDispatch_U0_memRdCmd_V_TDATA;
    flashValueStoreMemRdCmd_V_TVALID <= memcachedPipeline_flashDispatch_U0_memRdCmd_V_TVALID;
    flashValueStoreMemRdData_V_V_TREADY <= memcachedPipeline_flashReceiveNoFilter_U0_memRdData_V_V_TREADY;
    flashValueStoreMemWrCmd_V_TDATA <= memcachedPipeline_flashSetPathNoFilter_U0_memWrCmd_V_TDATA;
    flashValueStoreMemWrCmd_V_TVALID <= memcachedPipeline_flashSetPathNoFilter_U0_memWrCmd_V_TVALID;
    flashValueStoreMemWrData_V_V_TDATA <= memcachedPipeline_flashSetPathNoFilter_U0_memWrData_V_V_TDATA;
    flashValueStoreMemWrData_V_V_TVALID <= memcachedPipeline_flashSetPathNoFilter_U0_memWrData_V_V_TVALID;
    flash_Disp2rec_V_V_U_ap_dummy_ce <= ap_const_logic_1;
    flash_Disp2rec_V_V_din <= memcachedPipeline_flashDispatch_U0_flash_Disp2rec_V_V_din;
    flash_Disp2rec_V_V_read <= memcachedPipeline_flashReceiveNoFilter_U0_flash_Disp2rec_V_V_read;
    flash_Disp2rec_V_V_write <= memcachedPipeline_flashDispatch_U0_flash_Disp2rec_V_V_write;
    flushDone_V <= memcachedPipeline_memWrite_U0_flushDone_V;
    flushReq_V <= memcachedPipeline_memWrite_U0_flushReq_V;
    getPath2remux_V_V_U_ap_dummy_ce <= ap_const_logic_1;
    getPath2remux_V_V_din <= memcachedPipeline_receive_U0_getPath2remux_V_V_din;
    getPath2remux_V_V_read <= memcachedPipeline_remux_U0_getPath2remux_V_V_read;
    getPath2remux_V_V_write <= memcachedPipeline_receive_U0_getPath2remux_V_V_write;
    hash2cc_V_V_U_ap_dummy_ce <= ap_const_logic_1;
    hash2cc_V_V_din <= memcachedPipeline_bobj_U0_hash2cc_V_V_din;
    hash2cc_V_V_read <= memcachedPipeline_concurrencyControl_U0_hash2cc_V_V_read;
    hash2cc_V_V_write <= memcachedPipeline_bobj_U0_hash2cc_V_V_write;
    hashKeyBuffer_V_V_U_ap_dummy_ce <= ap_const_logic_1;
    hashKeyBuffer_V_V_din <= memcachedPipeline_ht_inputLogic_U0_hashKeyBuffer_V_V_din;
    hashKeyBuffer_V_V_read <= memcachedPipeline_ht_outputLogic_U0_hashKeyBuffer_V_V_read;
    hashKeyBuffer_V_V_write <= memcachedPipeline_ht_inputLogic_U0_hashKeyBuffer_V_V_write;
    hashMdBuffer_V_V_U_ap_dummy_ce <= ap_const_logic_1;
    hashMdBuffer_V_V_din <= memcachedPipeline_ht_inputLogic_U0_hashMdBuffer_V_V_din;
    hashMdBuffer_V_V_read <= memcachedPipeline_ht_outputLogic_U0_hashMdBuffer_V_V_read;
    hashMdBuffer_V_V_write <= memcachedPipeline_ht_inputLogic_U0_hashMdBuffer_V_V_write;
    hashTable2splitter_V_U_ap_dummy_ce <= ap_const_logic_1;
    hashTable2splitter_V_din <= memcachedPipeline_ht_outputLogic_U0_hashTable2splitter_V_din;
    hashTable2splitter_V_read <= memcachedPipeline_splitter_U0_hashTable2splitter_V_read;
    hashTable2splitter_V_write <= memcachedPipeline_ht_outputLogic_U0_hashTable2splitter_V_write;
    hashTableMemRdCmd_V_TDATA <= memcachedPipeline_memRead_U0_memRdCtrl_V_TDATA;
    hashTableMemRdCmd_V_TVALID <= memcachedPipeline_memRead_U0_memRdCtrl_V_TVALID;
    hashTableMemRdData_V_V_TREADY <= memcachedPipeline_ht_compare_U0_memRdData_V_V_TREADY;
    hashTableMemWrCmd_V_TDATA <= memcachedPipeline_memWrite_U0_memWrCtrl_V_TDATA;
    hashTableMemWrCmd_V_TVALID <= memcachedPipeline_memWrite_U0_memWrCtrl_V_TVALID;
    hashTableMemWrData_V_V_TDATA <= memcachedPipeline_memWrite_U0_memWrData_V_V_TDATA;
    hashTableMemWrData_V_V_TVALID <= memcachedPipeline_memWrite_U0_memWrData_V_V_TVALID;
    hashValueBuffer_V_V_U_ap_dummy_ce <= ap_const_logic_1;
    hashValueBuffer_V_V_din <= memcachedPipeline_ht_inputLogic_U0_hashValueBuffer_V_V_din;
    hashValueBuffer_V_V_read <= memcachedPipeline_ht_outputLogic_U0_hashValueBuffer_V_V_read;
    hashValueBuffer_V_V_write <= memcachedPipeline_ht_inputLogic_U0_hashValueBuffer_V_V_write;
    in2ccMd_V_U_ap_dummy_ce <= ap_const_logic_1;
    in2ccMd_V_din <= memcachedPipeline_ht_inputLogic_U0_in2ccMd_V_din;
    in2ccMd_V_read <= memcachedPipeline_concurrencyControl_U0_in2ccMd_V_read;
    in2ccMd_V_write <= memcachedPipeline_ht_inputLogic_U0_in2ccMd_V_write;
    in2cc_V_U_ap_dummy_ce <= ap_const_logic_1;
    in2cc_V_din <= memcachedPipeline_ht_inputLogic_U0_in2cc_V_din;
    in2cc_V_read <= memcachedPipeline_concurrencyControl_U0_in2cc_V_read;
    in2cc_V_write <= memcachedPipeline_ht_inputLogic_U0_in2cc_V_write;
    in2hashKeyLength_V_V_U_ap_dummy_ce <= ap_const_logic_1;
    in2hashKeyLength_V_V_din <= memcachedPipeline_ht_inputLogic_U0_in2hashKeyLength_V_V_din;
    in2hashKeyLength_V_V_read <= memcachedPipeline_hashKeyResizer_U0_in2hashKeyLength_V_V_read;
    in2hashKeyLength_V_V_write <= memcachedPipeline_ht_inputLogic_U0_in2hashKeyLength_V_V_write;
    in2hash_V_U_ap_dummy_ce <= ap_const_logic_1;
    in2hash_V_din <= memcachedPipeline_ht_inputLogic_U0_in2hash_V_din;
    in2hash_V_read <= memcachedPipeline_hashKeyResizer_U0_in2hash_V_read;
    in2hash_V_write <= memcachedPipeline_ht_inputLogic_U0_in2hash_V_write;
    inData_TREADY <= memcachedPipeline_bp_f_U0_inData_TREADY;
    keyBuffer_V_V_U_ap_dummy_ce <= ap_const_logic_1;
    keyBuffer_V_V_din <= memcachedPipeline_demux_U0_keyBuffer_V_V_din;
    keyBuffer_V_V_read <= memcachedPipeline_remux_U0_keyBuffer_V_V_read;
    keyBuffer_V_V_write <= memcachedPipeline_demux_U0_keyBuffer_V_V_write;
    keyBuffer_rp_V_V_U_ap_dummy_ce <= ap_const_logic_1;
    keyBuffer_rp_V_V_din <= memcachedPipeline_bp_f_U0_keyBuffer_rp_V_V_din;
    keyBuffer_rp_V_V_read <= memcachedPipeline_bp_r_U0_keyBuffer_rp_V_V_read;
    keyBuffer_rp_V_V_write <= memcachedPipeline_bp_f_U0_keyBuffer_rp_V_V_write;
    memRd2compMd_V_U_ap_dummy_ce <= ap_const_logic_1;
    memRd2compMd_V_din <= memcachedPipeline_memRead_U0_memRd2compMd_V_din;
    memRd2compMd_V_read <= memcachedPipeline_ht_compare_U0_memRd2compMd_V_read;
    memRd2compMd_V_write <= memcachedPipeline_memRead_U0_memRd2compMd_V_write;
    memRd2comp_V_U_ap_dummy_ce <= ap_const_logic_1;
    memRd2comp_V_din <= memcachedPipeline_memRead_U0_memRd2comp_V_din;
    memRd2comp_V_read <= memcachedPipeline_ht_compare_U0_memRd2comp_V_read;
    memRd2comp_V_write <= memcachedPipeline_memRead_U0_memRd2comp_V_write;
    memWr2out_V_U_ap_dummy_ce <= ap_const_logic_1;
    memWr2out_V_din <= memcachedPipeline_memWrite_U0_memWr2out_V_din;
    memWr2out_V_read <= memcachedPipeline_ht_outputLogic_U0_memWr2out_V_read;
    memWr2out_V_write <= memcachedPipeline_memWrite_U0_memWr2out_V_write;
    memcachedPipeline_accessControl_U0_accCtrl2demux_V_full_n <= accCtrl2demux_V_full_n;
    memcachedPipeline_accessControl_U0_ap_continue <= ap_const_logic_1;
    memcachedPipeline_accessControl_U0_filterPopGet_V_V_dout <= filterPopGet_V_V_dout;
    memcachedPipeline_accessControl_U0_filterPopGet_V_V_empty_n <= filterPopGet_V_V_empty_n;
    memcachedPipeline_accessControl_U0_filterPopSet_V_V_dout <= filterPopSet_V_V_dout;
    memcachedPipeline_accessControl_U0_filterPopSet_V_V_empty_n <= filterPopSet_V_V_empty_n;
    memcachedPipeline_accessControl_U0_splitter2valueStoreDram_V_dout <= splitter2valueStoreDram_V_dout;
    memcachedPipeline_accessControl_U0_splitter2valueStoreDram_V_empty_n <= splitter2valueStoreDram_V_empty_n;
    memcachedPipeline_bobj_U0_ap_continue <= ap_const_logic_1;
    memcachedPipeline_bobj_U0_hash2cc_V_V_full_n <= hash2cc_V_V_full_n;
    memcachedPipeline_bobj_U0_resizedInitValue_V_dout <= resizedInitValue_V_dout;
    memcachedPipeline_bobj_U0_resizedInitValue_V_empty_n <= resizedInitValue_V_empty_n;
    memcachedPipeline_bobj_U0_resizedKeyLength_V_dout <= resizedKeyLength_V_dout;
    memcachedPipeline_bobj_U0_resizedKeyLength_V_empty_n <= resizedKeyLength_V_empty_n;
    memcachedPipeline_bobj_U0_resizedKey_V_V_dout <= resizedKey_V_V_dout;
    memcachedPipeline_bobj_U0_resizedKey_V_V_empty_n <= resizedKey_V_V_empty_n;
    memcachedPipeline_bp_f_U0_ap_continue <= ap_const_logic_1;
    memcachedPipeline_bp_f_U0_ap_start <= ap_const_logic_1;
    memcachedPipeline_bp_f_U0_inData_TDATA <= inData_TDATA;
    memcachedPipeline_bp_f_U0_inData_TKEEP <= inData_TKEEP;
    memcachedPipeline_bp_f_U0_inData_TLAST <= inData_TLAST;
    memcachedPipeline_bp_f_U0_inData_TUSER <= inData_TUSER;
    memcachedPipeline_bp_f_U0_inData_TVALID <= inData_TVALID;
    memcachedPipeline_bp_f_U0_keyBuffer_rp_V_V_full_n <= keyBuffer_rp_V_V_full_n;
    memcachedPipeline_bp_f_U0_metadataBuffer_rp_V_V_full_n <= metadataBuffer_rp_V_V_full_n;
    memcachedPipeline_bp_f_U0_valueBuffer_rp_V_V_full_n <= valueBuffer_rp_V_V_full_n;
    memcachedPipeline_bp_r_U0_ap_continue <= ap_const_logic_1;
    memcachedPipeline_bp_r_U0_keyBuffer_rp_V_V_dout <= keyBuffer_rp_V_V_dout;
    memcachedPipeline_bp_r_U0_keyBuffer_rp_V_V_empty_n <= keyBuffer_rp_V_V_empty_n;
    memcachedPipeline_bp_r_U0_metadataBuffer_rp_V_V_dout <= metadataBuffer_rp_V_V_dout;
    memcachedPipeline_bp_r_U0_metadataBuffer_rp_V_V_empty_n <= metadataBuffer_rp_V_V_empty_n;
    memcachedPipeline_bp_r_U0_requestParser2hashTable_V_full_n <= requestParser2hashTable_V_full_n;
    memcachedPipeline_bp_r_U0_valueBuffer_rp_V_V_dout <= valueBuffer_rp_V_V_dout;
    memcachedPipeline_bp_r_U0_valueBuffer_rp_V_V_empty_n <= valueBuffer_rp_V_V_empty_n;
    memcachedPipeline_concurrencyControl_U0_ap_continue <= ap_const_logic_1;
    memcachedPipeline_concurrencyControl_U0_cc2memReadMd_V_full_n <= cc2memReadMd_V_full_n;
    memcachedPipeline_concurrencyControl_U0_cc2memRead_V_full_n <= cc2memRead_V_full_n;
    memcachedPipeline_concurrencyControl_U0_dec2cc_V_V_dout <= dec2cc_V_V_dout;
    memcachedPipeline_concurrencyControl_U0_dec2cc_V_V_empty_n <= dec2cc_V_V_empty_n;
    memcachedPipeline_concurrencyControl_U0_hash2cc_V_V_dout <= hash2cc_V_V_dout;
    memcachedPipeline_concurrencyControl_U0_hash2cc_V_V_empty_n <= hash2cc_V_V_empty_n;
    memcachedPipeline_concurrencyControl_U0_in2ccMd_V_dout <= in2ccMd_V_dout;
    memcachedPipeline_concurrencyControl_U0_in2ccMd_V_empty_n <= in2ccMd_V_empty_n;
    memcachedPipeline_concurrencyControl_U0_in2cc_V_dout <= in2cc_V_dout;
    memcachedPipeline_concurrencyControl_U0_in2cc_V_empty_n <= in2cc_V_empty_n;
    memcachedPipeline_demux_U0_accCtrl2demux_V_dout <= accCtrl2demux_V_dout;
    memcachedPipeline_demux_U0_accCtrl2demux_V_empty_n <= accCtrl2demux_V_empty_n;
    memcachedPipeline_demux_U0_ap_continue <= ap_const_logic_1;
    memcachedPipeline_demux_U0_demux2getPath_V_full_n <= demux2getPath_V_full_n;
    memcachedPipeline_demux_U0_demux2setPathMetadata_V_full_n <= demux2setPathMetadata_V_full_n;
    memcachedPipeline_demux_U0_demux2setPathValue_V_full_n <= demux2setPathValue_V_full_n;
    memcachedPipeline_demux_U0_keyBuffer_V_V_full_n <= keyBuffer_V_V_full_n;
    memcachedPipeline_demux_U0_metadataBuffer_V_full_n <= metadataBuffer_V_full_n;
    memcachedPipeline_dispatch_U0_ap_continue <= ap_const_logic_1;
    memcachedPipeline_dispatch_U0_demux2getPath_V_dout <= demux2getPath_V_dout;
    memcachedPipeline_dispatch_U0_demux2getPath_V_empty_n <= demux2getPath_V_empty_n;
    memcachedPipeline_dispatch_U0_disp2rec_V_V_full_n <= disp2rec_V_V_full_n;
    memcachedPipeline_dispatch_U0_memRdCmd_V_TREADY <= dramValueStoreMemRdCmd_V_TREADY;
    memcachedPipeline_flashDemux_U0_ap_continue <= ap_const_logic_1;
    memcachedPipeline_flashDemux_U0_flashDemux2getPath_V_full_n <= flashDemux2getPath_V_full_n;
    memcachedPipeline_flashDemux_U0_flashDemux2setPathMetadata_V_full_n <= flashDemux2setPathMetadata_V_full_n;
    memcachedPipeline_flashDemux_U0_flashDemux2setPathValue_V_full_n <= flashDemux2setPathValue_V_full_n;
    memcachedPipeline_flashDemux_U0_flashKeyBuffer_V_V_full_n <= flashKeyBuffer_V_V_full_n;
    memcachedPipeline_flashDemux_U0_flashMetadataBuffer_V_full_n <= flashMetadataBuffer_V_full_n;
    memcachedPipeline_flashDemux_U0_splitter2valueStoreFlash_V_dout <= splitter2valueStoreFlash_V_dout;
    memcachedPipeline_flashDemux_U0_splitter2valueStoreFlash_V_empty_n <= splitter2valueStoreFlash_V_empty_n;
    memcachedPipeline_flashDispatch_U0_ap_continue <= ap_const_logic_1;
    memcachedPipeline_flashDispatch_U0_flashDemux2getPath_V_dout <= flashDemux2getPath_V_dout;
    memcachedPipeline_flashDispatch_U0_flashDemux2getPath_V_empty_n <= flashDemux2getPath_V_empty_n;
    memcachedPipeline_flashDispatch_U0_flash_Disp2rec_V_V_full_n <= flash_Disp2rec_V_V_full_n;
    memcachedPipeline_flashDispatch_U0_memRdCmd_V_TREADY <= flashValueStoreMemRdCmd_V_TREADY;
    memcachedPipeline_flashReceiveNoFilter_U0_ap_continue <= ap_const_logic_1;
    memcachedPipeline_flashReceiveNoFilter_U0_ap_start <= ap_const_logic_1;
    memcachedPipeline_flashReceiveNoFilter_U0_flashGetPath2remux_V_V_full_n <= flashGetPath2remux_V_V_full_n;
    memcachedPipeline_flashReceiveNoFilter_U0_flash_Disp2rec_V_V_dout <= flash_Disp2rec_V_V_dout;
    memcachedPipeline_flashReceiveNoFilter_U0_flash_Disp2rec_V_V_empty_n <= flash_Disp2rec_V_V_empty_n;
    memcachedPipeline_flashReceiveNoFilter_U0_memRdData_V_V_TDATA <= flashValueStoreMemRdData_V_V_TDATA;
    memcachedPipeline_flashReceiveNoFilter_U0_memRdData_V_V_TVALID <= flashValueStoreMemRdData_V_V_TVALID;
    memcachedPipeline_flashRemux_U0_ap_continue <= ap_const_logic_1;
    memcachedPipeline_flashRemux_U0_flashGetPath2remux_V_V_dout <= flashGetPath2remux_V_V_dout;
    memcachedPipeline_flashRemux_U0_flashGetPath2remux_V_V_empty_n <= flashGetPath2remux_V_V_empty_n;
    memcachedPipeline_flashRemux_U0_flashKeyBuffer_V_V_dout <= flashKeyBuffer_V_V_dout;
    memcachedPipeline_flashRemux_U0_flashKeyBuffer_V_V_empty_n <= flashKeyBuffer_V_V_empty_n;
    memcachedPipeline_flashRemux_U0_flashMetadataBuffer_V_dout <= flashMetadataBuffer_V_dout;
    memcachedPipeline_flashRemux_U0_flashMetadataBuffer_V_empty_n <= flashMetadataBuffer_V_empty_n;
    memcachedPipeline_flashRemux_U0_valueStoreFlash2merger_V_full_n <= valueStoreFlash2merger_V_full_n;
    memcachedPipeline_flashSetPathNoFilter_U0_ap_continue <= ap_const_logic_1;
    memcachedPipeline_flashSetPathNoFilter_U0_flashDemux2setPathMetadata_V_dout <= flashDemux2setPathMetadata_V_dout;
    memcachedPipeline_flashSetPathNoFilter_U0_flashDemux2setPathMetadata_V_empty_n <= flashDemux2setPathMetadata_V_empty_n;
    memcachedPipeline_flashSetPathNoFilter_U0_flashDemux2setPathValue_V_dout <= flashDemux2setPathValue_V_dout;
    memcachedPipeline_flashSetPathNoFilter_U0_flashDemux2setPathValue_V_empty_n <= flashDemux2setPathValue_V_empty_n;
    memcachedPipeline_flashSetPathNoFilter_U0_memWrCmd_V_TREADY <= flashValueStoreMemWrCmd_V_TREADY;
    memcachedPipeline_flashSetPathNoFilter_U0_memWrData_V_V_TREADY <= flashValueStoreMemWrData_V_V_TREADY;
    memcachedPipeline_hashKeyResizer_U0_ap_continue <= ap_const_logic_1;
    memcachedPipeline_hashKeyResizer_U0_in2hashKeyLength_V_V_dout <= in2hashKeyLength_V_V_dout;
    memcachedPipeline_hashKeyResizer_U0_in2hashKeyLength_V_V_empty_n <= in2hashKeyLength_V_V_empty_n;
    memcachedPipeline_hashKeyResizer_U0_in2hash_V_dout <= in2hash_V_dout;
    memcachedPipeline_hashKeyResizer_U0_in2hash_V_empty_n <= in2hash_V_empty_n;
    memcachedPipeline_hashKeyResizer_U0_resizedInitValue_V_full_n <= resizedInitValue_V_full_n;
    memcachedPipeline_hashKeyResizer_U0_resizedKeyLength_V_full_n <= resizedKeyLength_V_full_n;
    memcachedPipeline_hashKeyResizer_U0_resizedKey_V_V_full_n <= resizedKey_V_V_full_n;
    memcachedPipeline_ht_compare_U0_ap_continue <= ap_const_logic_1;
    memcachedPipeline_ht_compare_U0_ap_start <= ap_const_logic_1;
    memcachedPipeline_ht_compare_U0_comp2memWrKey_V_full_n <= comp2memWrKey_V_full_n;
    memcachedPipeline_ht_compare_U0_comp2memWrMd_V_full_n <= comp2memWrMd_V_full_n;
    memcachedPipeline_ht_compare_U0_comp2memWrMemData_V_V_full_n <= comp2memWrMemData_V_V_full_n;
    memcachedPipeline_ht_compare_U0_comp2memWrStatus_V_bin_full_n <= comp2memWrStatus_V_bin_full_n;
    memcachedPipeline_ht_compare_U0_memRd2compMd_V_dout <= memRd2compMd_V_dout;
    memcachedPipeline_ht_compare_U0_memRd2compMd_V_empty_n <= memRd2compMd_V_empty_n;
    memcachedPipeline_ht_compare_U0_memRd2comp_V_dout <= memRd2comp_V_dout;
    memcachedPipeline_ht_compare_U0_memRd2comp_V_empty_n <= memRd2comp_V_empty_n;
    memcachedPipeline_ht_compare_U0_memRdData_V_V_TDATA <= hashTableMemRdData_V_V_TDATA;
    memcachedPipeline_ht_compare_U0_memRdData_V_V_TVALID <= hashTableMemRdData_V_V_TVALID;
    memcachedPipeline_ht_inputLogic_U0_ap_continue <= ap_const_logic_1;
    memcachedPipeline_ht_inputLogic_U0_hashKeyBuffer_V_V_full_n <= hashKeyBuffer_V_V_full_n;
    memcachedPipeline_ht_inputLogic_U0_hashMdBuffer_V_V_full_n <= hashMdBuffer_V_V_full_n;
    memcachedPipeline_ht_inputLogic_U0_hashValueBuffer_V_V_full_n <= hashValueBuffer_V_V_full_n;
    memcachedPipeline_ht_inputLogic_U0_in2ccMd_V_full_n <= in2ccMd_V_full_n;
    memcachedPipeline_ht_inputLogic_U0_in2cc_V_full_n <= in2cc_V_full_n;
    memcachedPipeline_ht_inputLogic_U0_in2hashKeyLength_V_V_full_n <= in2hashKeyLength_V_V_full_n;
    memcachedPipeline_ht_inputLogic_U0_in2hash_V_full_n <= in2hash_V_full_n;
    memcachedPipeline_ht_inputLogic_U0_requestParser2hashTable_V_dout <= requestParser2hashTable_V_dout;
    memcachedPipeline_ht_inputLogic_U0_requestParser2hashTable_V_empty_n <= requestParser2hashTable_V_empty_n;
    memcachedPipeline_ht_outputLogic_U0_ap_continue <= ap_const_logic_1;
    memcachedPipeline_ht_outputLogic_U0_hashKeyBuffer_V_V_dout <= hashKeyBuffer_V_V_dout;
    memcachedPipeline_ht_outputLogic_U0_hashKeyBuffer_V_V_empty_n <= hashKeyBuffer_V_V_empty_n;
    memcachedPipeline_ht_outputLogic_U0_hashMdBuffer_V_V_dout <= hashMdBuffer_V_V_dout;
    memcachedPipeline_ht_outputLogic_U0_hashMdBuffer_V_V_empty_n <= hashMdBuffer_V_V_empty_n;
    memcachedPipeline_ht_outputLogic_U0_hashTable2splitter_V_full_n <= hashTable2splitter_V_full_n;
    memcachedPipeline_ht_outputLogic_U0_hashValueBuffer_V_V_dout <= hashValueBuffer_V_V_dout;
    memcachedPipeline_ht_outputLogic_U0_hashValueBuffer_V_V_empty_n <= hashValueBuffer_V_V_empty_n;
    memcachedPipeline_ht_outputLogic_U0_memWr2out_V_dout <= memWr2out_V_dout;
    memcachedPipeline_ht_outputLogic_U0_memWr2out_V_empty_n <= memWr2out_V_empty_n;
    memcachedPipeline_memRead_U0_ap_continue <= ap_const_logic_1;
    memcachedPipeline_memRead_U0_cc2memReadMd_V_dout <= cc2memReadMd_V_dout;
    memcachedPipeline_memRead_U0_cc2memReadMd_V_empty_n <= cc2memReadMd_V_empty_n;
    memcachedPipeline_memRead_U0_cc2memRead_V_dout <= cc2memRead_V_dout;
    memcachedPipeline_memRead_U0_cc2memRead_V_empty_n <= cc2memRead_V_empty_n;
    memcachedPipeline_memRead_U0_memRd2compMd_V_full_n <= memRd2compMd_V_full_n;
    memcachedPipeline_memRead_U0_memRd2comp_V_full_n <= memRd2comp_V_full_n;
    memcachedPipeline_memRead_U0_memRdCtrl_V_TREADY <= hashTableMemRdCmd_V_TREADY;
    memcachedPipeline_memWrite_U0_addressAssignDramIn_V_V_TDATA <= addressAssignDramIn_V_V_TDATA;
    memcachedPipeline_memWrite_U0_addressAssignDramIn_V_V_TVALID <= addressAssignDramIn_V_V_TVALID;
    memcachedPipeline_memWrite_U0_addressAssignFlashIn_V_V_TDATA <= addressAssignFlashIn_V_V_TDATA;
    memcachedPipeline_memWrite_U0_addressAssignFlashIn_V_V_TVALID <= addressAssignFlashIn_V_V_TVALID;
    memcachedPipeline_memWrite_U0_addressReturnOut_V_V_TREADY <= addressReturnOut_V_V_TREADY;
    memcachedPipeline_memWrite_U0_ap_continue <= ap_const_logic_1;
    memcachedPipeline_memWrite_U0_ap_start <= ap_const_logic_1;
    memcachedPipeline_memWrite_U0_comp2memWrKey_V_dout <= comp2memWrKey_V_dout;
    memcachedPipeline_memWrite_U0_comp2memWrKey_V_empty_n <= comp2memWrKey_V_empty_n;
    memcachedPipeline_memWrite_U0_comp2memWrMd_V_dout <= comp2memWrMd_V_dout;
    memcachedPipeline_memWrite_U0_comp2memWrMd_V_empty_n <= comp2memWrMd_V_empty_n;
    memcachedPipeline_memWrite_U0_comp2memWrMemData_V_V_dout <= comp2memWrMemData_V_V_dout;
    memcachedPipeline_memWrite_U0_comp2memWrMemData_V_V_empty_n <= comp2memWrMemData_V_V_empty_n;
    memcachedPipeline_memWrite_U0_comp2memWrStatus_V_bin_dout <= comp2memWrStatus_V_bin_dout;
    memcachedPipeline_memWrite_U0_comp2memWrStatus_V_bin_empty_n <= comp2memWrStatus_V_bin_empty_n;
    memcachedPipeline_memWrite_U0_dec2cc_V_V_full_n <= dec2cc_V_V_full_n;
    memcachedPipeline_memWrite_U0_flushAck_V <= flushAck_V;
    memcachedPipeline_memWrite_U0_memWr2out_V_full_n <= memWr2out_V_full_n;
    memcachedPipeline_memWrite_U0_memWrCtrl_V_TREADY <= hashTableMemWrCmd_V_TREADY;
    memcachedPipeline_memWrite_U0_memWrData_V_V_TREADY <= hashTableMemWrData_V_V_TREADY;
    memcachedPipeline_merger_U0_ap_continue <= ap_const_logic_1;
    memcachedPipeline_merger_U0_merger2responseFormatter_V_full_n <= merger2responseFormatter_V_full_n;
    memcachedPipeline_merger_U0_valueStoreDram2merger_V_dout <= valueStoreDram2merger_V_dout;
    memcachedPipeline_merger_U0_valueStoreDram2merger_V_empty_n <= valueStoreDram2merger_V_empty_n;
    memcachedPipeline_merger_U0_valueStoreFlash2merger_V_dout <= valueStoreFlash2merger_V_dout;
    memcachedPipeline_merger_U0_valueStoreFlash2merger_V_empty_n <= valueStoreFlash2merger_V_empty_n;
    memcachedPipeline_receive_U0_ap_continue <= ap_const_logic_1;
    memcachedPipeline_receive_U0_ap_start <= ap_const_logic_1;
    memcachedPipeline_receive_U0_disp2rec_V_V_dout <= disp2rec_V_V_dout;
    memcachedPipeline_receive_U0_disp2rec_V_V_empty_n <= disp2rec_V_V_empty_n;
    memcachedPipeline_receive_U0_filterPopGet_V_V_full_n <= filterPopGet_V_V_full_n;
    memcachedPipeline_receive_U0_getPath2remux_V_V_full_n <= getPath2remux_V_V_full_n;
    memcachedPipeline_receive_U0_memRdData_V_V_TDATA <= dramValueStoreMemRdData_V_V_TDATA;
    memcachedPipeline_receive_U0_memRdData_V_V_TVALID <= dramValueStoreMemRdData_V_V_TVALID;
    memcachedPipeline_remux_U0_ap_continue <= ap_const_logic_1;
    memcachedPipeline_remux_U0_getPath2remux_V_V_dout <= getPath2remux_V_V_dout;
    memcachedPipeline_remux_U0_getPath2remux_V_V_empty_n <= getPath2remux_V_V_empty_n;
    memcachedPipeline_remux_U0_keyBuffer_V_V_dout <= keyBuffer_V_V_dout;
    memcachedPipeline_remux_U0_keyBuffer_V_V_empty_n <= keyBuffer_V_V_empty_n;
    memcachedPipeline_remux_U0_metadataBuffer_V_dout <= metadataBuffer_V_dout;
    memcachedPipeline_remux_U0_metadataBuffer_V_empty_n <= metadataBuffer_V_empty_n;
    memcachedPipeline_remux_U0_valueStoreDram2merger_V_full_n <= valueStoreDram2merger_V_full_n;
    memcachedPipeline_response_f_U0_ap_continue <= ap_const_logic_1;
    memcachedPipeline_response_f_U0_merger2responseFormatter_V_dout <= merger2responseFormatter_V_dout;
    memcachedPipeline_response_f_U0_merger2responseFormatter_V_empty_n <= merger2responseFormatter_V_empty_n;
    memcachedPipeline_response_f_U0_metadataBuffer_rf_V_V_full_n <= metadataBuffer_rf_V_V_full_n;
    memcachedPipeline_response_f_U0_valueBuffer_rf_V_V_full_n <= valueBuffer_rf_V_V_full_n;
    memcachedPipeline_response_r_U0_ap_continue <= ap_const_logic_1;
    memcachedPipeline_response_r_U0_metadataBuffer_rf_V_V_dout <= metadataBuffer_rf_V_V_dout;
    memcachedPipeline_response_r_U0_metadataBuffer_rf_V_V_empty_n <= metadataBuffer_rf_V_V_empty_n;
    memcachedPipeline_response_r_U0_outData_TREADY <= outData_TREADY;
    memcachedPipeline_response_r_U0_valueBuffer_rf_V_V_dout <= valueBuffer_rf_V_V_dout;
    memcachedPipeline_response_r_U0_valueBuffer_rf_V_V_empty_n <= valueBuffer_rf_V_V_empty_n;
    memcachedPipeline_setPath_U0_ap_continue <= ap_const_logic_1;
    memcachedPipeline_setPath_U0_demux2setPathMetadata_V_dout <= demux2setPathMetadata_V_dout;
    memcachedPipeline_setPath_U0_demux2setPathMetadata_V_empty_n <= demux2setPathMetadata_V_empty_n;
    memcachedPipeline_setPath_U0_demux2setPathValue_V_dout <= demux2setPathValue_V_dout;
    memcachedPipeline_setPath_U0_demux2setPathValue_V_empty_n <= demux2setPathValue_V_empty_n;
    memcachedPipeline_setPath_U0_filterPopSet_V_V_full_n <= filterPopSet_V_V_full_n;
    memcachedPipeline_setPath_U0_memWrCmd_V_TREADY <= dramValueStoreMemWrCmd_V_TREADY;
    memcachedPipeline_setPath_U0_memWrData_V_V_TREADY <= dramValueStoreMemWrData_V_V_TREADY;
    memcachedPipeline_splitter_U0_ap_continue <= ap_const_logic_1;
    memcachedPipeline_splitter_U0_hashTable2splitter_V_dout <= hashTable2splitter_V_dout;
    memcachedPipeline_splitter_U0_hashTable2splitter_V_empty_n <= hashTable2splitter_V_empty_n;
    memcachedPipeline_splitter_U0_splitter2valueStoreDram_V_full_n <= splitter2valueStoreDram_V_full_n;
    memcachedPipeline_splitter_U0_splitter2valueStoreFlash_V_full_n <= splitter2valueStoreFlash_V_full_n;
    merger2responseFormatter_V_U_ap_dummy_ce <= ap_const_logic_1;
    merger2responseFormatter_V_din <= memcachedPipeline_merger_U0_merger2responseFormatter_V_din;
    merger2responseFormatter_V_read <= memcachedPipeline_response_f_U0_merger2responseFormatter_V_read;
    merger2responseFormatter_V_write <= memcachedPipeline_merger_U0_merger2responseFormatter_V_write;
    metadataBuffer_V_U_ap_dummy_ce <= ap_const_logic_1;
    metadataBuffer_V_din <= memcachedPipeline_demux_U0_metadataBuffer_V_din;
    metadataBuffer_V_read <= memcachedPipeline_remux_U0_metadataBuffer_V_read;
    metadataBuffer_V_write <= memcachedPipeline_demux_U0_metadataBuffer_V_write;
    metadataBuffer_rf_V_V_U_ap_dummy_ce <= ap_const_logic_1;
    metadataBuffer_rf_V_V_din <= memcachedPipeline_response_f_U0_metadataBuffer_rf_V_V_din;
    metadataBuffer_rf_V_V_read <= memcachedPipeline_response_r_U0_metadataBuffer_rf_V_V_read;
    metadataBuffer_rf_V_V_write <= memcachedPipeline_response_f_U0_metadataBuffer_rf_V_V_write;
    metadataBuffer_rp_V_V_U_ap_dummy_ce <= ap_const_logic_1;
    metadataBuffer_rp_V_V_din <= memcachedPipeline_bp_f_U0_metadataBuffer_rp_V_V_din;
    metadataBuffer_rp_V_V_read <= memcachedPipeline_bp_r_U0_metadataBuffer_rp_V_V_read;
    metadataBuffer_rp_V_V_write <= memcachedPipeline_bp_f_U0_metadataBuffer_rp_V_V_write;
    outData_TDATA <= memcachedPipeline_response_r_U0_outData_TDATA;
    outData_TKEEP <= memcachedPipeline_response_r_U0_outData_TKEEP;
    outData_TLAST <= memcachedPipeline_response_r_U0_outData_TLAST;
    outData_TUSER <= memcachedPipeline_response_r_U0_outData_TUSER;
    outData_TVALID <= memcachedPipeline_response_r_U0_outData_TVALID;
    requestParser2hashTable_V_U_ap_dummy_ce <= ap_const_logic_1;
    requestParser2hashTable_V_din <= memcachedPipeline_bp_r_U0_requestParser2hashTable_V_din;
    requestParser2hashTable_V_read <= memcachedPipeline_ht_inputLogic_U0_requestParser2hashTable_V_read;
    requestParser2hashTable_V_write <= memcachedPipeline_bp_r_U0_requestParser2hashTable_V_write;
    resizedInitValue_V_U_ap_dummy_ce <= ap_const_logic_1;
    resizedInitValue_V_din <= memcachedPipeline_hashKeyResizer_U0_resizedInitValue_V_din;
    resizedInitValue_V_read <= memcachedPipeline_bobj_U0_resizedInitValue_V_read;
    resizedInitValue_V_write <= memcachedPipeline_hashKeyResizer_U0_resizedInitValue_V_write;
    resizedKeyLength_V_U_ap_dummy_ce <= ap_const_logic_1;
    resizedKeyLength_V_din <= memcachedPipeline_hashKeyResizer_U0_resizedKeyLength_V_din;
    resizedKeyLength_V_read <= memcachedPipeline_bobj_U0_resizedKeyLength_V_read;
    resizedKeyLength_V_write <= memcachedPipeline_hashKeyResizer_U0_resizedKeyLength_V_write;
    resizedKey_V_V_U_ap_dummy_ce <= ap_const_logic_1;
    resizedKey_V_V_din <= memcachedPipeline_hashKeyResizer_U0_resizedKey_V_V_din;
    resizedKey_V_V_read <= memcachedPipeline_bobj_U0_resizedKey_V_V_read;
    resizedKey_V_V_write <= memcachedPipeline_hashKeyResizer_U0_resizedKey_V_V_write;
    splitter2valueStoreDram_V_U_ap_dummy_ce <= ap_const_logic_1;
    splitter2valueStoreDram_V_din <= memcachedPipeline_splitter_U0_splitter2valueStoreDram_V_din;
    splitter2valueStoreDram_V_read <= memcachedPipeline_accessControl_U0_splitter2valueStoreDram_V_read;
    splitter2valueStoreDram_V_write <= memcachedPipeline_splitter_U0_splitter2valueStoreDram_V_write;
    splitter2valueStoreFlash_V_U_ap_dummy_ce <= ap_const_logic_1;
    splitter2valueStoreFlash_V_din <= memcachedPipeline_splitter_U0_splitter2valueStoreFlash_V_din;
    splitter2valueStoreFlash_V_read <= memcachedPipeline_flashDemux_U0_splitter2valueStoreFlash_V_read;
    splitter2valueStoreFlash_V_write <= memcachedPipeline_splitter_U0_splitter2valueStoreFlash_V_write;
    valueBuffer_rf_V_V_U_ap_dummy_ce <= ap_const_logic_1;
    valueBuffer_rf_V_V_din <= memcachedPipeline_response_f_U0_valueBuffer_rf_V_V_din;
    valueBuffer_rf_V_V_read <= memcachedPipeline_response_r_U0_valueBuffer_rf_V_V_read;
    valueBuffer_rf_V_V_write <= memcachedPipeline_response_f_U0_valueBuffer_rf_V_V_write;
    valueBuffer_rp_V_V_U_ap_dummy_ce <= ap_const_logic_1;
    valueBuffer_rp_V_V_din <= memcachedPipeline_bp_f_U0_valueBuffer_rp_V_V_din;
    valueBuffer_rp_V_V_read <= memcachedPipeline_bp_r_U0_valueBuffer_rp_V_V_read;
    valueBuffer_rp_V_V_write <= memcachedPipeline_bp_f_U0_valueBuffer_rp_V_V_write;
    valueStoreDram2merger_V_U_ap_dummy_ce <= ap_const_logic_1;
    valueStoreDram2merger_V_din <= memcachedPipeline_remux_U0_valueStoreDram2merger_V_din;
    valueStoreDram2merger_V_read <= memcachedPipeline_merger_U0_valueStoreDram2merger_V_read;
    valueStoreDram2merger_V_write <= memcachedPipeline_remux_U0_valueStoreDram2merger_V_write;
    valueStoreFlash2merger_V_U_ap_dummy_ce <= ap_const_logic_1;
    valueStoreFlash2merger_V_din <= memcachedPipeline_flashRemux_U0_valueStoreFlash2merger_V_din;
    valueStoreFlash2merger_V_read <= memcachedPipeline_merger_U0_valueStoreFlash2merger_V_read;
    valueStoreFlash2merger_V_write <= memcachedPipeline_flashRemux_U0_valueStoreFlash2merger_V_write;
end behav;

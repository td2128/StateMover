#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst", 1, hls_in, -1, "", "", 1),
	Port_Property("memWrCmd_V_dout", 40, hls_in, 0, "ap_fifo", "fifo_data", 2),
	Port_Property("memWrCmd_V_empty_n", 1, hls_in, 0, "ap_fifo", "fifo_status", 2),
	Port_Property("memWrCmd_V_read", 1, hls_out, 0, "ap_fifo", "fifo_update", 2),
	Port_Property("memWrData_V_V_dout", 512, hls_in, 1, "ap_fifo", "fifo_data", 2),
	Port_Property("memWrData_V_V_empty_n", 1, hls_in, 1, "ap_fifo", "fifo_status", 2),
	Port_Property("memWrData_V_V_read", 1, hls_out, 1, "ap_fifo", "fifo_update", 2),
	Port_Property("dmWrCmd_V_din", 72, hls_out, 2, "ap_fifo", "fifo_data", 2),
	Port_Property("dmWrCmd_V_full_n", 1, hls_in, 2, "ap_fifo", "fifo_status", 2),
	Port_Property("dmWrCmd_V_write", 1, hls_out, 2, "ap_fifo", "fifo_update", 2),
	Port_Property("dmWrData_V_din", 577, hls_out, 3, "ap_fifo", "fifo_data", 2),
	Port_Property("dmWrData_V_full_n", 1, hls_in, 3, "ap_fifo", "fifo_status", 2),
	Port_Property("dmWrData_V_write", 1, hls_out, 3, "ap_fifo", "fifo_update", 2),
	Port_Property("dmWrStatus_V_V_dout", 8, hls_in, 4, "ap_fifo", "fifo_data", 2),
	Port_Property("dmWrStatus_V_V_empty_n", 1, hls_in, 4, "ap_fifo", "fifo_status", 2),
	Port_Property("dmWrStatus_V_V_read", 1, hls_out, 4, "ap_fifo", "fifo_update", 2),
	Port_Property("memRdCmd_V_dout", 40, hls_in, 5, "ap_fifo", "fifo_data", 2),
	Port_Property("memRdCmd_V_empty_n", 1, hls_in, 5, "ap_fifo", "fifo_status", 2),
	Port_Property("memRdCmd_V_read", 1, hls_out, 5, "ap_fifo", "fifo_update", 2),
	Port_Property("memRdData_V_V_din", 512, hls_out, 6, "ap_fifo", "fifo_data", 2),
	Port_Property("memRdData_V_V_full_n", 1, hls_in, 6, "ap_fifo", "fifo_status", 2),
	Port_Property("memRdData_V_V_write", 1, hls_out, 6, "ap_fifo", "fifo_update", 2),
	Port_Property("dmRdCmd_V_din", 72, hls_out, 7, "ap_fifo", "fifo_data", 2),
	Port_Property("dmRdCmd_V_full_n", 1, hls_in, 7, "ap_fifo", "fifo_status", 2),
	Port_Property("dmRdCmd_V_write", 1, hls_out, 7, "ap_fifo", "fifo_update", 2),
	Port_Property("dmRdData_V_dout", 577, hls_in, 8, "ap_fifo", "fifo_data", 2),
	Port_Property("dmRdData_V_empty_n", 1, hls_in, 8, "ap_fifo", "fifo_status", 2),
	Port_Property("dmRdData_V_read", 1, hls_out, 8, "ap_fifo", "fifo_update", 2),
	Port_Property("dmRdStatus_V_V_dout", 8, hls_in, 9, "ap_fifo", "fifo_data", 2),
	Port_Property("dmRdStatus_V_V_empty_n", 1, hls_in, 9, "ap_fifo", "fifo_status", 2),
	Port_Property("dmRdStatus_V_V_read", 1, hls_out, 9, "ap_fifo", "fifo_update", 2),
	Port_Property("dmRdAddrPosted_V", 1, hls_in, 10, "ap_none", "in_data", 1),
	Port_Property("dmWrAddrPosted_V", 1, hls_in, 11, "ap_none", "in_data", 1),
};
const char* HLS_Design_Meta::dut_name = "readWriteConverter";

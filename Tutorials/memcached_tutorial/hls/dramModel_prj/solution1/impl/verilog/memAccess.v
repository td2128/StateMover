// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module memAccess (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        aggregateMemCmd_V_dout,
        aggregateMemCmd_V_empty_n,
        aggregateMemCmd_V_read,
        wrDataIn_V_V_TVALID,
        rdDataOut_V_V_TREADY,
        rdDataOut_V_V_TDATA,
        rdDataOut_V_V_TVALID,
        wrDataIn_V_V_TDATA,
        wrDataIn_V_V_TREADY
);

parameter    ap_ST_iter0_fsm_state1 = 1'd1;
parameter    ap_ST_iter1_fsm_state2 = 2'd2;
parameter    ap_ST_iter2_fsm_state3 = 2'd2;
parameter    ap_ST_iter1_fsm_state0 = 2'd1;
parameter    ap_ST_iter2_fsm_state0 = 2'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [20:0] aggregateMemCmd_V_dout;
input   aggregateMemCmd_V_empty_n;
output   aggregateMemCmd_V_read;
input   wrDataIn_V_V_TVALID;
input   rdDataOut_V_V_TREADY;
output  [511:0] rdDataOut_V_V_TDATA;
output   rdDataOut_V_V_TVALID;
input  [511:0] wrDataIn_V_V_TDATA;
output   wrDataIn_V_V_TREADY;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg aggregateMemCmd_V_read;
reg wrDataIn_V_V_TREADY;

reg    ap_done_reg;
reg   [0:0] ap_CS_iter0_fsm;
wire    ap_CS_iter0_fsm_state1;
reg   [1:0] ap_CS_iter1_fsm;
wire    ap_CS_iter1_fsm_state0;
reg   [1:0] ap_CS_iter2_fsm;
wire    ap_CS_iter2_fsm_state0;
wire   [0:0] tmp_nbreadreq_fu_70_p3;
reg    ap_predicate_op11_read_state1;
wire   [0:0] tmp_1_nbreadreq_fu_84_p3;
reg    ap_predicate_op33_read_state1;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    rdDataOut_V_V_1_ack_in;
reg   [0:0] memState_load_reg_236;
reg   [0:0] inputWord_rdOrWr_V_l_reg_240;
reg    ap_predicate_op44_write_state2;
reg    ap_block_state2_io;
wire    ap_CS_iter1_fsm_state2;
reg    ap_block_state3_pp0_stage0_iter2;
reg   [0:0] memState_load_reg_236_pp0_iter1_reg;
reg   [0:0] inputWord_rdOrWr_V_l_reg_240_pp0_iter1_reg;
reg    ap_predicate_op53_write_state3;
reg    ap_block_state3_io;
wire    ap_CS_iter2_fsm_state3;
reg   [511:0] rdDataOut_V_V_1_data_out;
reg    rdDataOut_V_V_1_vld_in;
wire    rdDataOut_V_V_1_vld_out;
wire    rdDataOut_V_V_1_ack_out;
reg   [511:0] rdDataOut_V_V_1_payload_A;
reg   [511:0] rdDataOut_V_V_1_payload_B;
reg    rdDataOut_V_V_1_sel_rd;
reg    rdDataOut_V_V_1_sel_wr;
wire    rdDataOut_V_V_1_sel;
wire    rdDataOut_V_V_1_load_A;
wire    rdDataOut_V_V_1_load_B;
reg   [1:0] rdDataOut_V_V_1_state;
wire    rdDataOut_V_V_1_state_cmp_full;
reg   [0:0] memState;
reg   [11:0] inputWord_address_V;
reg   [7:0] inputWord_count_V;
reg   [0:0] inputWord_rdOrWr_V;
reg   [11:0] memArray_V_address0;
reg    memArray_V_ce0;
reg    memArray_V_we0;
wire   [511:0] memArray_V_q0;
reg    rdDataOut_V_V_TDATA_blk_n;
reg    wrDataIn_V_V_TDATA_blk_n;
reg    aggregateMemCmd_V_blk_n;
wire   [0:0] grp_fu_128_p2;
reg   [0:0] tmp_1_reg_257;
wire   [63:0] tmp_6_i_fu_226_p1;
wire   [63:0] tmp_9_i_fu_231_p1;
wire   [11:0] tmp_3_fu_180_p1;
wire   [11:0] grp_fu_144_p2;
wire   [7:0] grp_fu_133_p2;
reg   [0:0] ap_NS_iter0_fsm;
reg   [1:0] ap_NS_iter1_fsm;
reg   [1:0] ap_NS_iter2_fsm;
reg    ap_block_pp0_stage0_subdone;
reg    ap_block_pp0;
reg    ap_predicate_op22_load_state1;
reg    ap_enable_operation_22;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_state1_pp0_iter0_stage0;
reg    ap_predicate_op43_load_state2;
reg    ap_enable_operation_43;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_state2_pp0_iter1_stage0;
reg    ap_predicate_op35_store_state1;
reg    ap_enable_operation_35;
reg    ap_predicate_op45_store_state2;
reg    ap_enable_operation_45;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_401;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_iter0_fsm = 1'd1;
#0 ap_CS_iter1_fsm = 2'd1;
#0 ap_CS_iter2_fsm = 2'd1;
#0 rdDataOut_V_V_1_sel_rd = 1'b0;
#0 rdDataOut_V_V_1_sel_wr = 1'b0;
#0 rdDataOut_V_V_1_state = 2'd0;
#0 memState = 1'd0;
#0 inputWord_address_V = 12'd0;
#0 inputWord_count_V = 8'd0;
#0 inputWord_rdOrWr_V = 1'd0;
end

memAccess_memArray_V #(
    .DataWidth( 512 ),
    .AddressRange( 4096 ),
    .AddressWidth( 12 ))
memArray_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(memArray_V_address0),
    .ce0(memArray_V_ce0),
    .we0(memArray_V_we0),
    .d0(wrDataIn_V_V_TDATA),
    .q0(memArray_V_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_iter0_fsm <= ap_ST_iter0_fsm_state1;
    end else begin
        ap_CS_iter0_fsm <= ap_NS_iter0_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_iter1_fsm <= ap_ST_iter1_fsm_state0;
    end else begin
        ap_CS_iter1_fsm <= ap_NS_iter1_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_iter2_fsm <= ap_ST_iter2_fsm_state0;
    end else begin
        ap_CS_iter2_fsm <= ap_NS_iter2_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((rdDataOut_V_V_1_ack_in == 1'b0) | (1'b1 == ap_block_state3_io) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_iter2_fsm_state3))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        rdDataOut_V_V_1_sel_rd <= 1'b0;
    end else begin
        if (((rdDataOut_V_V_1_ack_out == 1'b1) & (rdDataOut_V_V_1_vld_out == 1'b1))) begin
            rdDataOut_V_V_1_sel_rd <= ~rdDataOut_V_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        rdDataOut_V_V_1_sel_wr <= 1'b0;
    end else begin
        if (((rdDataOut_V_V_1_ack_in == 1'b1) & (rdDataOut_V_V_1_vld_in == 1'b1))) begin
            rdDataOut_V_V_1_sel_wr <= ~rdDataOut_V_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        rdDataOut_V_V_1_state <= 2'd0;
    end else begin
        if ((((rdDataOut_V_V_1_vld_in == 1'b0) & (rdDataOut_V_V_1_state == 2'd2)) | ((rdDataOut_V_V_1_vld_in == 1'b0) & (rdDataOut_V_V_1_ack_out == 1'b1) & (rdDataOut_V_V_1_state == 2'd3)))) begin
            rdDataOut_V_V_1_state <= 2'd2;
        end else if ((((rdDataOut_V_V_1_ack_out == 1'b0) & (rdDataOut_V_V_1_state == 2'd1)) | ((rdDataOut_V_V_1_ack_out == 1'b0) & (rdDataOut_V_V_1_vld_in == 1'b1) & (rdDataOut_V_V_1_state == 2'd3)))) begin
            rdDataOut_V_V_1_state <= 2'd1;
        end else if (((~((rdDataOut_V_V_1_vld_in == 1'b0) & (rdDataOut_V_V_1_ack_out == 1'b1)) & ~((rdDataOut_V_V_1_ack_out == 1'b0) & (rdDataOut_V_V_1_vld_in == 1'b1)) & (rdDataOut_V_V_1_state == 2'd3)) | ((rdDataOut_V_V_1_ack_out == 1'b1) & (rdDataOut_V_V_1_state == 2'd1)) | ((rdDataOut_V_V_1_vld_in == 1'b1) & (rdDataOut_V_V_1_state == 2'd2)))) begin
            rdDataOut_V_V_1_state <= 2'd3;
        end else begin
            rdDataOut_V_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((1'b1 == ap_CS_iter1_fsm_state2) & (1'b1 == ap_block_state2_io)) | ((wrDataIn_V_V_TVALID == 1'b0) & (ap_predicate_op33_read_state1 == 1'b1)) | ((1'b0 == aggregateMemCmd_V_empty_n) & (ap_predicate_op11_read_state1 == 1'b1)) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((rdDataOut_V_V_1_ack_in == 1'b0) | (1'b1 == ap_block_state3_io)))) & (tmp_1_nbreadreq_fu_84_p3 == 1'd1) & (inputWord_rdOrWr_V == 1'd1) & (grp_fu_128_p2 == 1'd0) & (memState == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state1)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((1'b1 == ap_CS_iter1_fsm_state2) & (1'b1 == ap_block_state2_io)) | ((wrDataIn_V_V_TVALID == 1'b0) & (ap_predicate_op33_read_state1 == 1'b1)) | ((1'b0 == aggregateMemCmd_V_empty_n) & (ap_predicate_op11_read_state1 == 1'b1)) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((rdDataOut_V_V_1_ack_in == 1'b0) | (1'b1 == ap_block_state3_io)))) & (inputWord_rdOrWr_V == 1'd0) & (grp_fu_128_p2 == 1'd0) & (memState == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state1)))) begin
        inputWord_address_V <= grp_fu_144_p2;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((1'b1 == ap_CS_iter1_fsm_state2) & (1'b1 == ap_block_state2_io)) | ((wrDataIn_V_V_TVALID == 1'b0) & (ap_predicate_op33_read_state1 == 1'b1)) | ((1'b0 == aggregateMemCmd_V_empty_n) & (ap_predicate_op11_read_state1 == 1'b1)) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((rdDataOut_V_V_1_ack_in == 1'b0) | (1'b1 == ap_block_state3_io)))) & (tmp_nbreadreq_fu_70_p3 == 1'd1) & (memState == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        inputWord_address_V <= tmp_3_fu_180_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((1'b1 == ap_CS_iter1_fsm_state2) & (1'b1 == ap_block_state2_io)) | ((wrDataIn_V_V_TVALID == 1'b0) & (ap_predicate_op33_read_state1 == 1'b1)) | ((1'b0 == aggregateMemCmd_V_empty_n) & (ap_predicate_op11_read_state1 == 1'b1)) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((rdDataOut_V_V_1_ack_in == 1'b0) | (1'b1 == ap_block_state3_io)))) & (tmp_1_nbreadreq_fu_84_p3 == 1'd1) & (inputWord_rdOrWr_V == 1'd1) & (grp_fu_128_p2 == 1'd0) & (memState == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state1)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((1'b1 == ap_CS_iter1_fsm_state2) & (1'b1 == ap_block_state2_io)) | ((wrDataIn_V_V_TVALID == 1'b0) & (ap_predicate_op33_read_state1 == 1'b1)) | ((1'b0 == aggregateMemCmd_V_empty_n) & (ap_predicate_op11_read_state1 == 1'b1)) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((rdDataOut_V_V_1_ack_in == 1'b0) | (1'b1 == ap_block_state3_io)))) & (inputWord_rdOrWr_V == 1'd0) & (grp_fu_128_p2 == 1'd0) & (memState == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state1)))) begin
        inputWord_count_V <= grp_fu_133_p2;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((1'b1 == ap_CS_iter1_fsm_state2) & (1'b1 == ap_block_state2_io)) | ((wrDataIn_V_V_TVALID == 1'b0) & (ap_predicate_op33_read_state1 == 1'b1)) | ((1'b0 == aggregateMemCmd_V_empty_n) & (ap_predicate_op11_read_state1 == 1'b1)) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((rdDataOut_V_V_1_ack_in == 1'b0) | (1'b1 == ap_block_state3_io)))) & (tmp_nbreadreq_fu_70_p3 == 1'd1) & (memState == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        inputWord_count_V <= {{aggregateMemCmd_V_dout[19:12]}};
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((1'b1 == ap_CS_iter1_fsm_state2) & (1'b1 == ap_block_state2_io)) | ((wrDataIn_V_V_TVALID == 1'b0) & (ap_predicate_op33_read_state1 == 1'b1)) | ((1'b0 == aggregateMemCmd_V_empty_n) & (ap_predicate_op11_read_state1 == 1'b1)) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((rdDataOut_V_V_1_ack_in == 1'b0) | (1'b1 == ap_block_state3_io)))) & (tmp_1_nbreadreq_fu_84_p3 == 1'd1) & (inputWord_rdOrWr_V == 1'd1) & (grp_fu_128_p2 == 1'd1) & (memState == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state1)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((1'b1 == ap_CS_iter1_fsm_state2) & (1'b1 == ap_block_state2_io)) | ((wrDataIn_V_V_TVALID == 1'b0) & (ap_predicate_op33_read_state1 == 1'b1)) | ((1'b0 == aggregateMemCmd_V_empty_n) & (ap_predicate_op11_read_state1 == 1'b1)) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((rdDataOut_V_V_1_ack_in == 1'b0) | (1'b1 == ap_block_state3_io)))) & (grp_fu_128_p2 == 1'd1) & (inputWord_rdOrWr_V == 1'd0) & (memState == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state1)))) begin
        memState <= 1'd0;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((1'b1 == ap_CS_iter1_fsm_state2) & (1'b1 == ap_block_state2_io)) | ((wrDataIn_V_V_TVALID == 1'b0) & (ap_predicate_op33_read_state1 == 1'b1)) | ((1'b0 == aggregateMemCmd_V_empty_n) & (ap_predicate_op11_read_state1 == 1'b1)) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((rdDataOut_V_V_1_ack_in == 1'b0) | (1'b1 == ap_block_state3_io)))) & (tmp_nbreadreq_fu_70_p3 == 1'd1) & (memState == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        memState <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((1'b1 == ap_CS_iter1_fsm_state2) & (1'b1 == ap_block_state2_io)) | ((wrDataIn_V_V_TVALID == 1'b0) & (ap_predicate_op33_read_state1 == 1'b1)) | ((1'b0 == aggregateMemCmd_V_empty_n) & (ap_predicate_op11_read_state1 == 1'b1)) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((rdDataOut_V_V_1_ack_in == 1'b0) | (1'b1 == ap_block_state3_io)))) & (tmp_nbreadreq_fu_70_p3 == 1'd1) & (memState == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        inputWord_rdOrWr_V <= aggregateMemCmd_V_dout[32'd20];
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((1'b1 == ap_CS_iter1_fsm_state2) & (1'b1 == ap_block_state2_io)) | ((wrDataIn_V_V_TVALID == 1'b0) & (ap_predicate_op33_read_state1 == 1'b1)) | ((1'b0 == aggregateMemCmd_V_empty_n) & (ap_predicate_op11_read_state1 == 1'b1)) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((rdDataOut_V_V_1_ack_in == 1'b0) | (1'b1 == ap_block_state3_io)))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        inputWord_rdOrWr_V_l_reg_240 <= inputWord_rdOrWr_V;
        memState_load_reg_236 <= memState;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state2_io) | (ap_done_reg == 1'b1) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((rdDataOut_V_V_1_ack_in == 1'b0) | (1'b1 == ap_block_state3_io)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        inputWord_rdOrWr_V_l_reg_240_pp0_iter1_reg <= inputWord_rdOrWr_V_l_reg_240;
        memState_load_reg_236_pp0_iter1_reg <= memState_load_reg_236;
    end
end

always @ (posedge ap_clk) begin
    if ((rdDataOut_V_V_1_load_A == 1'b1)) begin
        rdDataOut_V_V_1_payload_A <= memArray_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((rdDataOut_V_V_1_load_B == 1'b1)) begin
        rdDataOut_V_V_1_payload_B <= memArray_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((1'b1 == ap_CS_iter1_fsm_state2) & (1'b1 == ap_block_state2_io)) | ((wrDataIn_V_V_TVALID == 1'b0) & (ap_predicate_op33_read_state1 == 1'b1)) | ((1'b0 == aggregateMemCmd_V_empty_n) & (ap_predicate_op11_read_state1 == 1'b1)) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((rdDataOut_V_V_1_ack_in == 1'b0) | (1'b1 == ap_block_state3_io)))) & (inputWord_rdOrWr_V == 1'd1) & (memState == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        tmp_1_reg_257 <= wrDataIn_V_V_TVALID;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state1) & (ap_start == 1'b1) & (ap_predicate_op11_read_state1 == 1'b1))) begin
        aggregateMemCmd_V_blk_n = aggregateMemCmd_V_empty_n;
    end else begin
        aggregateMemCmd_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((1'b1 == ap_CS_iter1_fsm_state2) & (1'b1 == ap_block_state2_io)) | ((wrDataIn_V_V_TVALID == 1'b0) & (ap_predicate_op33_read_state1 == 1'b1)) | ((1'b0 == aggregateMemCmd_V_empty_n) & (ap_predicate_op11_read_state1 == 1'b1)) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((rdDataOut_V_V_1_ack_in == 1'b0) | (1'b1 == ap_block_state3_io)))) & (1'b1 == ap_CS_iter0_fsm_state1) & (ap_predicate_op11_read_state1 == 1'b1))) begin
        aggregateMemCmd_V_read = 1'b1;
    end else begin
        aggregateMemCmd_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((rdDataOut_V_V_1_ack_in == 1'b0) | (1'b1 == ap_block_state3_io) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_iter2_fsm_state3))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state0) & (1'b1 == ap_CS_iter1_fsm_state0) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((1'b1 == ap_CS_iter1_fsm_state2) & (1'b1 == ap_block_state2_io)) | ((wrDataIn_V_V_TVALID == 1'b0) & (ap_predicate_op33_read_state1 == 1'b1)) | ((1'b0 == aggregateMemCmd_V_empty_n) & (ap_predicate_op11_read_state1 == 1'b1)) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((rdDataOut_V_V_1_ack_in == 1'b0) | (1'b1 == ap_block_state3_io)))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_401)) begin
        if (((tmp_1_nbreadreq_fu_84_p3 == 1'd1) & (inputWord_rdOrWr_V == 1'd1))) begin
            memArray_V_address0 = tmp_9_i_fu_231_p1;
        end else if ((inputWord_rdOrWr_V == 1'd0)) begin
            memArray_V_address0 = tmp_6_i_fu_226_p1;
        end else begin
            memArray_V_address0 = 'bx;
        end
    end else begin
        memArray_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((~((1'b1 == ap_block_state2_io) | (ap_done_reg == 1'b1) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((rdDataOut_V_V_1_ack_in == 1'b0) | (1'b1 == ap_block_state3_io)))) & (1'b1 == ap_CS_iter1_fsm_state2)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((1'b1 == ap_CS_iter1_fsm_state2) & (1'b1 == ap_block_state2_io)) | ((wrDataIn_V_V_TVALID == 1'b0) & (ap_predicate_op33_read_state1 == 1'b1)) | ((1'b0 == aggregateMemCmd_V_empty_n) & (ap_predicate_op11_read_state1 == 1'b1)) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((rdDataOut_V_V_1_ack_in == 1'b0) | (1'b1 == ap_block_state3_io)))) & (tmp_1_nbreadreq_fu_84_p3 == 1'd1) & (inputWord_rdOrWr_V == 1'd1) & (memState == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state1)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((1'b1 == ap_CS_iter1_fsm_state2) & (1'b1 == ap_block_state2_io)) | ((wrDataIn_V_V_TVALID == 1'b0) & (ap_predicate_op33_read_state1 == 1'b1)) | ((1'b0 == aggregateMemCmd_V_empty_n) & (ap_predicate_op11_read_state1 == 1'b1)) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((rdDataOut_V_V_1_ack_in == 1'b0) | (1'b1 == ap_block_state3_io)))) & (inputWord_rdOrWr_V == 1'd0) & (memState == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state1)))) begin
        memArray_V_ce0 = 1'b1;
    end else begin
        memArray_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((1'b1 == ap_CS_iter1_fsm_state2) & (1'b1 == ap_block_state2_io)) | ((wrDataIn_V_V_TVALID == 1'b0) & (ap_predicate_op33_read_state1 == 1'b1)) | ((1'b0 == aggregateMemCmd_V_empty_n) & (ap_predicate_op11_read_state1 == 1'b1)) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((rdDataOut_V_V_1_ack_in == 1'b0) | (1'b1 == ap_block_state3_io)))) & (tmp_1_nbreadreq_fu_84_p3 == 1'd1) & (inputWord_rdOrWr_V == 1'd1) & (memState == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        memArray_V_we0 = 1'b1;
    end else begin
        memArray_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((rdDataOut_V_V_1_sel == 1'b1)) begin
        rdDataOut_V_V_1_data_out = rdDataOut_V_V_1_payload_B;
    end else begin
        rdDataOut_V_V_1_data_out = rdDataOut_V_V_1_payload_A;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state2_io) | (ap_done_reg == 1'b1) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((rdDataOut_V_V_1_ack_in == 1'b0) | (1'b1 == ap_block_state3_io)))) & (1'b1 == ap_CS_iter1_fsm_state2) & (ap_predicate_op44_write_state2 == 1'b1))) begin
        rdDataOut_V_V_1_vld_in = 1'b1;
    end else begin
        rdDataOut_V_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_iter1_fsm_state2) & (ap_predicate_op44_write_state2 == 1'b1)) | ((1'b1 == ap_CS_iter2_fsm_state3) & (ap_predicate_op53_write_state3 == 1'b1)))) begin
        rdDataOut_V_V_TDATA_blk_n = rdDataOut_V_V_1_state[1'd1];
    end else begin
        rdDataOut_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state1) & (ap_start == 1'b1) & (ap_predicate_op33_read_state1 == 1'b1))) begin
        wrDataIn_V_V_TDATA_blk_n = wrDataIn_V_V_TVALID;
    end else begin
        wrDataIn_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((1'b1 == ap_CS_iter1_fsm_state2) & (1'b1 == ap_block_state2_io)) | ((wrDataIn_V_V_TVALID == 1'b0) & (ap_predicate_op33_read_state1 == 1'b1)) | ((1'b0 == aggregateMemCmd_V_empty_n) & (ap_predicate_op11_read_state1 == 1'b1)) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((rdDataOut_V_V_1_ack_in == 1'b0) | (1'b1 == ap_block_state3_io)))) & (1'b1 == ap_CS_iter0_fsm_state1) & (ap_predicate_op33_read_state1 == 1'b1))) begin
        wrDataIn_V_V_TREADY = 1'b1;
    end else begin
        wrDataIn_V_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_iter0_fsm)
        ap_ST_iter0_fsm_state1 : begin
            ap_NS_iter0_fsm = ap_ST_iter0_fsm_state1;
        end
        default : begin
            ap_NS_iter0_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    case (ap_CS_iter1_fsm)
        ap_ST_iter1_fsm_state2 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((wrDataIn_V_V_TVALID == 1'b0) & (ap_predicate_op33_read_state1 == 1'b1)) | ((1'b0 == aggregateMemCmd_V_empty_n) & (ap_predicate_op11_read_state1 == 1'b1))) & ~((1'b1 == ap_block_state2_io) | (ap_done_reg == 1'b1) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((rdDataOut_V_V_1_ack_in == 1'b0) | (1'b1 == ap_block_state3_io)))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            end else if ((~((1'b1 == ap_block_state2_io) | (ap_done_reg == 1'b1) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((rdDataOut_V_V_1_ack_in == 1'b0) | (1'b1 == ap_block_state3_io)))) & ((1'b0 == ap_CS_iter0_fsm_state1) | ((1'b1 == ap_CS_iter0_fsm_state1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((wrDataIn_V_V_TVALID == 1'b0) & (ap_predicate_op33_read_state1 == 1'b1)) | ((1'b0 == aggregateMemCmd_V_empty_n) & (ap_predicate_op11_read_state1 == 1'b1))))))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state0;
            end else begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            end
        end
        ap_ST_iter1_fsm_state0 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((1'b1 == ap_CS_iter1_fsm_state2) & (1'b1 == ap_block_state2_io)) | ((wrDataIn_V_V_TVALID == 1'b0) & (ap_predicate_op33_read_state1 == 1'b1)) | ((1'b0 == aggregateMemCmd_V_empty_n) & (ap_predicate_op11_read_state1 == 1'b1)) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((rdDataOut_V_V_1_ack_in == 1'b0) | (1'b1 == ap_block_state3_io)))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            end else begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state0;
            end
        end
        default : begin
            ap_NS_iter1_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    case (ap_CS_iter2_fsm)
        ap_ST_iter2_fsm_state3 : begin
            if ((~((rdDataOut_V_V_1_ack_in == 1'b0) | (1'b1 == ap_block_state3_io) | (ap_done_reg == 1'b1)) & (1'b0 == ap_block_state2_io) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state3;
            end else if ((~((rdDataOut_V_V_1_ack_in == 1'b0) | (1'b1 == ap_block_state3_io) | (ap_done_reg == 1'b1)) & ((1'b0 == ap_CS_iter1_fsm_state2) | ((1'b1 == ap_CS_iter1_fsm_state2) & (1'b1 == ap_block_state2_io))))) begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state0;
            end else begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state3;
            end
        end
        ap_ST_iter2_fsm_state0 : begin
            if ((~((1'b1 == ap_block_state2_io) | (ap_done_reg == 1'b1) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((rdDataOut_V_V_1_ack_in == 1'b0) | (1'b1 == ap_block_state3_io)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state3;
            end else begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state0;
            end
        end
        default : begin
            ap_NS_iter2_fsm = 'bx;
        end
    endcase
end

assign ap_CS_iter0_fsm_state1 = ap_CS_iter0_fsm[32'd0];

assign ap_CS_iter1_fsm_state0 = ap_CS_iter1_fsm[32'd0];

assign ap_CS_iter1_fsm_state2 = ap_CS_iter1_fsm[32'd1];

assign ap_CS_iter2_fsm_state0 = ap_CS_iter2_fsm[32'd0];

assign ap_CS_iter2_fsm_state3 = ap_CS_iter2_fsm[32'd1];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_iter0_fsm_state1 == ap_CS_iter0_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((rdDataOut_V_V_1_ack_in == 1'b0) | (ap_start == 1'b0) | (1'b1 == ap_block_state2_io) | (1'b1 == ap_block_state3_io) | (ap_done_reg == 1'b1) | ((wrDataIn_V_V_TVALID == 1'b0) & (ap_predicate_op33_read_state1 == 1'b1)) | ((1'b0 == aggregateMemCmd_V_empty_n) & (ap_predicate_op11_read_state1 == 1'b1)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((wrDataIn_V_V_TVALID == 1'b0) & (ap_predicate_op33_read_state1 == 1'b1)) | ((1'b0 == aggregateMemCmd_V_empty_n) & (ap_predicate_op11_read_state1 == 1'b1)));
end

always @ (*) begin
    ap_block_state2_io = ((rdDataOut_V_V_1_ack_in == 1'b0) & (ap_predicate_op44_write_state2 == 1'b1));
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_io = ((rdDataOut_V_V_1_ack_in == 1'b0) & (ap_predicate_op53_write_state3 == 1'b1));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = (rdDataOut_V_V_1_ack_in == 1'b0);
end

always @ (*) begin
    ap_condition_401 = ((memState == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state1) & (ap_start == 1'b1));
end

always @ (*) begin
    ap_enable_operation_22 = (ap_predicate_op22_load_state1 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_35 = (ap_predicate_op35_store_state1 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_43 = (ap_predicate_op43_load_state2 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_45 = (ap_predicate_op45_store_state2 == 1'b1);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = 1'b0;

always @ (*) begin
    ap_enable_state1_pp0_iter0_stage0 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_iter0_fsm_state1));
end

always @ (*) begin
    ap_enable_state2_pp0_iter1_stage0 = ((1'b1 == ap_CS_iter1_fsm_state2) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_predicate_op11_read_state1 = ((tmp_nbreadreq_fu_70_p3 == 1'd1) & (memState == 1'd0));
end

always @ (*) begin
    ap_predicate_op22_load_state1 = ((inputWord_rdOrWr_V == 1'd0) & (memState == 1'd1));
end

always @ (*) begin
    ap_predicate_op33_read_state1 = ((tmp_1_nbreadreq_fu_84_p3 == 1'd1) & (inputWord_rdOrWr_V == 1'd1) & (memState == 1'd1));
end

always @ (*) begin
    ap_predicate_op35_store_state1 = ((tmp_1_nbreadreq_fu_84_p3 == 1'd1) & (inputWord_rdOrWr_V == 1'd1) & (memState == 1'd1));
end

always @ (*) begin
    ap_predicate_op43_load_state2 = ((memState_load_reg_236 == 1'd1) & (inputWord_rdOrWr_V_l_reg_240 == 1'd0));
end

always @ (*) begin
    ap_predicate_op44_write_state2 = ((memState_load_reg_236 == 1'd1) & (inputWord_rdOrWr_V_l_reg_240 == 1'd0));
end

always @ (*) begin
    ap_predicate_op45_store_state2 = ((inputWord_rdOrWr_V_l_reg_240 == 1'd1) & (memState_load_reg_236 == 1'd1) & (tmp_1_reg_257 == 1'd1));
end

always @ (*) begin
    ap_predicate_op53_write_state3 = ((memState_load_reg_236_pp0_iter1_reg == 1'd1) & (inputWord_rdOrWr_V_l_reg_240_pp0_iter1_reg == 1'd0));
end

assign grp_fu_128_p2 = ((inputWord_count_V == 8'd1) ? 1'b1 : 1'b0);

assign grp_fu_133_p2 = ($signed(inputWord_count_V) + $signed(8'd255));

assign grp_fu_144_p2 = (inputWord_address_V + 12'd1);

assign rdDataOut_V_V_1_ack_in = rdDataOut_V_V_1_state[1'd1];

assign rdDataOut_V_V_1_ack_out = rdDataOut_V_V_TREADY;

assign rdDataOut_V_V_1_load_A = (rdDataOut_V_V_1_state_cmp_full & ~rdDataOut_V_V_1_sel_wr);

assign rdDataOut_V_V_1_load_B = (rdDataOut_V_V_1_state_cmp_full & rdDataOut_V_V_1_sel_wr);

assign rdDataOut_V_V_1_sel = rdDataOut_V_V_1_sel_rd;

assign rdDataOut_V_V_1_state_cmp_full = ((rdDataOut_V_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign rdDataOut_V_V_1_vld_out = rdDataOut_V_V_1_state[1'd0];

assign rdDataOut_V_V_TDATA = rdDataOut_V_V_1_data_out;

assign rdDataOut_V_V_TVALID = rdDataOut_V_V_1_state[1'd0];

assign tmp_1_nbreadreq_fu_84_p3 = wrDataIn_V_V_TVALID;

assign tmp_3_fu_180_p1 = aggregateMemCmd_V_dout[11:0];

assign tmp_6_i_fu_226_p1 = inputWord_address_V;

assign tmp_9_i_fu_231_p1 = inputWord_address_V;

assign tmp_nbreadreq_fu_70_p3 = aggregateMemCmd_V_empty_n;

always @ (posedge ap_clk) begin
    ap_enable_reg_pp0_iter1 <= 1'b0;
    ap_enable_reg_pp0_iter2 <= 1'b0;
end

endmodule //memAccess

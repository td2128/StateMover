// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "dummyPCIeJoint.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic dummyPCIeJoint::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic dummyPCIeJoint::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<1> dummyPCIeJoint::ap_ST_fsm_pp0_stage0 = "1";
const bool dummyPCIeJoint::ap_const_boolean_1 = true;
const sc_lv<1> dummyPCIeJoint::ap_const_lv1_0 = "0";
const sc_lv<4> dummyPCIeJoint::ap_const_lv4_0 = "0000";
const sc_lv<6> dummyPCIeJoint::ap_const_lv6_0 = "000000";
const sc_lv<32> dummyPCIeJoint::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool dummyPCIeJoint::ap_const_boolean_0 = false;
const sc_lv<4> dummyPCIeJoint::ap_const_lv4_3 = "11";
const sc_lv<4> dummyPCIeJoint::ap_const_lv4_6 = "110";
const sc_lv<4> dummyPCIeJoint::ap_const_lv4_7 = "111";
const sc_lv<4> dummyPCIeJoint::ap_const_lv4_9 = "1001";
const sc_lv<1> dummyPCIeJoint::ap_const_lv1_1 = "1";
const sc_lv<4> dummyPCIeJoint::ap_const_lv4_8 = "1000";
const sc_lv<4> dummyPCIeJoint::ap_const_lv4_4 = "100";
const sc_lv<4> dummyPCIeJoint::ap_const_lv4_5 = "101";
const sc_lv<4> dummyPCIeJoint::ap_const_lv4_2 = "10";
const sc_lv<4> dummyPCIeJoint::ap_const_lv4_1 = "1";
const sc_lv<4> dummyPCIeJoint::ap_const_lv4_A = "1010";
const sc_lv<32> dummyPCIeJoint::ap_const_lv32_C = "1100";
const sc_lv<32> dummyPCIeJoint::ap_const_lv32_1F = "11111";
const sc_lv<20> dummyPCIeJoint::ap_const_lv20_0 = "00000000000000000000";
const sc_lv<32> dummyPCIeJoint::ap_const_lv32_5 = "101";
const sc_lv<6> dummyPCIeJoint::ap_const_lv6_1 = "1";
const sc_lv<7> dummyPCIeJoint::ap_const_lv7_0 = "0000000";
const sc_lv<18> dummyPCIeJoint::ap_const_lv18_1F06 = "1111100000110";
const sc_lv<18> dummyPCIeJoint::ap_const_lv18_1000 = "1000000000000";

dummyPCIeJoint::dummyPCIeJoint(sc_module_name name) : sc_module(name), mVcdFile(0) {
    dummyPCIeJoint_mac_muladd_6ns_14ns_14ns_18_1_1_U1 = new dummyPCIeJoint_mac_muladd_6ns_14ns_14ns_18_1_1<1,1,6,14,14,18>("dummyPCIeJoint_mac_muladd_6ns_14ns_14ns_18_1_1_U1");
    dummyPCIeJoint_mac_muladd_6ns_14ns_14ns_18_1_1_U1->din0(grp_fu_558_p0);
    dummyPCIeJoint_mac_muladd_6ns_14ns_14ns_18_1_1_U1->din1(grp_fu_558_p1);
    dummyPCIeJoint_mac_muladd_6ns_14ns_14ns_18_1_1_U1->din2(grp_fu_558_p2);
    dummyPCIeJoint_mac_muladd_6ns_14ns_14ns_18_1_1_U1->dout(grp_fu_558_p3);
    freeAddressArrayDram_1_fifo_U = new fifo_w32_d64_A("freeAddressArrayDram_1_fifo_U");
    freeAddressArrayDram_1_fifo_U->clk(ap_clk);
    freeAddressArrayDram_1_fifo_U->reset(ap_rst);
    freeAddressArrayDram_1_fifo_U->if_read_ce(ap_var_for_const0);
    freeAddressArrayDram_1_fifo_U->if_write_ce(ap_var_for_const0);
    freeAddressArrayDram_1_fifo_U->if_din(freeAddressArrayDram_1_din);
    freeAddressArrayDram_1_fifo_U->if_full_n(freeAddressArrayDram_1_full_n);
    freeAddressArrayDram_1_fifo_U->if_write(freeAddressArrayDram_1_write);
    freeAddressArrayDram_1_fifo_U->if_dout(freeAddressArrayDram_1_dout);
    freeAddressArrayDram_1_fifo_U->if_empty_n(freeAddressArrayDram_1_empty_n);
    freeAddressArrayDram_1_fifo_U->if_read(freeAddressArrayDram_1_read);
    freeAddressArrayFlas_1_fifo_U = new fifo_w32_d32_A("freeAddressArrayFlas_1_fifo_U");
    freeAddressArrayFlas_1_fifo_U->clk(ap_clk);
    freeAddressArrayFlas_1_fifo_U->reset(ap_rst);
    freeAddressArrayFlas_1_fifo_U->if_read_ce(ap_var_for_const0);
    freeAddressArrayFlas_1_fifo_U->if_write_ce(ap_var_for_const0);
    freeAddressArrayFlas_1_fifo_U->if_din(freeAddressArrayFlas_1_din);
    freeAddressArrayFlas_1_fifo_U->if_full_n(freeAddressArrayFlas_1_full_n);
    freeAddressArrayFlas_1_fifo_U->if_write(freeAddressArrayFlas_1_write);
    freeAddressArrayFlas_1_fifo_U->if_dout(freeAddressArrayFlas_1_dout);
    freeAddressArrayFlas_1_fifo_U->if_empty_n(freeAddressArrayFlas_1_empty_n);
    freeAddressArrayFlas_1_fifo_U->if_read(freeAddressArrayFlas_1_read);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( inData_V_V_empty_n );
    sensitive << ( outDataFlash_V_V_full_n );
    sensitive << ( outDataDram_V_V_full_n );
    sensitive << ( flushAck_V_1_ack_in );
    sensitive << ( pcieState );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( freeAddressArrayFlas_1_empty_n );
    sensitive << ( ap_predicate_op25_read_state2 );
    sensitive << ( freeAddressArrayDram_1_empty_n );
    sensitive << ( ap_predicate_op29_read_state2 );
    sensitive << ( freeAddressArrayFlas_1_full_n );
    sensitive << ( freeAddressArrayDram_1_full_n );
    sensitive << ( ap_predicate_op61_write_state2 );
    sensitive << ( ap_predicate_op77_write_state2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( inData_V_V_empty_n );
    sensitive << ( outDataFlash_V_V_full_n );
    sensitive << ( outDataDram_V_V_full_n );
    sensitive << ( flushAck_V_1_ack_in );
    sensitive << ( pcieState );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( freeAddressArrayFlas_1_empty_n );
    sensitive << ( ap_predicate_op25_read_state2 );
    sensitive << ( freeAddressArrayDram_1_empty_n );
    sensitive << ( ap_predicate_op29_read_state2 );
    sensitive << ( freeAddressArrayFlas_1_full_n );
    sensitive << ( freeAddressArrayDram_1_full_n );
    sensitive << ( ap_predicate_op61_write_state2 );
    sensitive << ( ap_predicate_op77_write_state2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( inData_V_V_empty_n );
    sensitive << ( outDataFlash_V_V_full_n );
    sensitive << ( outDataDram_V_V_full_n );
    sensitive << ( flushAck_V_1_ack_in );
    sensitive << ( pcieState );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( freeAddressArrayFlas_1_empty_n );
    sensitive << ( ap_predicate_op25_read_state2 );
    sensitive << ( freeAddressArrayDram_1_empty_n );
    sensitive << ( ap_predicate_op29_read_state2 );
    sensitive << ( freeAddressArrayFlas_1_full_n );
    sensitive << ( freeAddressArrayDram_1_full_n );
    sensitive << ( ap_predicate_op61_write_state2 );
    sensitive << ( ap_predicate_op77_write_state2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );

    SC_METHOD(thread_ap_block_state1_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter1);
    sensitive << ( inData_V_V_empty_n );
    sensitive << ( outDataFlash_V_V_full_n );
    sensitive << ( outDataDram_V_V_full_n );
    sensitive << ( pcieState );
    sensitive << ( freeAddressArrayFlas_1_empty_n );
    sensitive << ( ap_predicate_op25_read_state2 );
    sensitive << ( freeAddressArrayDram_1_empty_n );
    sensitive << ( ap_predicate_op29_read_state2 );
    sensitive << ( freeAddressArrayFlas_1_full_n );
    sensitive << ( freeAddressArrayDram_1_full_n );
    sensitive << ( ap_predicate_op61_write_state2 );
    sensitive << ( ap_predicate_op77_write_state2 );

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter3);
    sensitive << ( flushAck_V_1_ack_in );

    SC_METHOD(thread_ap_condition_235);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_condition_335);
    sensitive << ( pcieState );
    sensitive << ( tmp_2_fu_434_p3 );
    sensitive << ( flushFlag_load_load_fu_360_p1 );

    SC_METHOD(thread_ap_condition_353);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_ap_condition_523);
    sensitive << ( pcieState );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_2_fu_434_p3 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_ap_phi_mux_storemerge_phi_fu_324_p4);
    sensitive << ( ap_phi_reg_pp0_iter1_storemerge_reg_321 );
    sensitive << ( flushFlag_load_load_fu_360_p1 );
    sensitive << ( ap_condition_523 );

    SC_METHOD(thread_ap_phi_reg_pp0_iter1_storemerge_reg_321);

    SC_METHOD(thread_ap_predicate_op25_read_state2);
    sensitive << ( pcieState );
    sensitive << ( grp_nbreadreq_fu_210_p3 );

    SC_METHOD(thread_ap_predicate_op29_read_state2);
    sensitive << ( pcieState );
    sensitive << ( grp_nbreadreq_fu_224_p3 );

    SC_METHOD(thread_ap_predicate_op61_write_state2);
    sensitive << ( pcieState );
    sensitive << ( tmp_2_fu_434_p3 );

    SC_METHOD(thread_ap_predicate_op77_write_state2);
    sensitive << ( pcieState );
    sensitive << ( tmp_1_fu_486_p3 );

    SC_METHOD(thread_ap_reset_idle_pp0);

    SC_METHOD(thread_flushAck_V);
    sensitive << ( flushAck_V_1_data_reg );

    SC_METHOD(thread_flushAck_V_1_ack_in);
    sensitive << ( flushAck_V_1_vld_reg );

    SC_METHOD(thread_flushAck_V_1_vld_in);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_flushDone_V_0_ack_out);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_flushFlag_load_load_fu_360_p1);
    sensitive << ( flushFlag );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_flushReq_V_0_ack_out);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_freeAddressArrayDram_1_din);
    sensitive << ( pcieState );
    sensitive << ( inputAddress_V );
    sensitive << ( ap_predicate_op77_write_state2 );
    sensitive << ( tmp_V_5_fu_506_p1 );
    sensitive << ( ap_condition_353 );

    SC_METHOD(thread_freeAddressArrayDram_1_read);
    sensitive << ( pcieState );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_predicate_op29_read_state2 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_freeAddressArrayDram_1_write);
    sensitive << ( pcieState );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_predicate_op77_write_state2 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_freeAddressArrayFlas_1_din);
    sensitive << ( pcieState );
    sensitive << ( inputAddress_V );
    sensitive << ( ap_predicate_op61_write_state2 );
    sensitive << ( tmp_V_7_fu_446_p1 );
    sensitive << ( ap_condition_353 );

    SC_METHOD(thread_freeAddressArrayFlas_1_read);
    sensitive << ( pcieState );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_predicate_op25_read_state2 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_freeAddressArrayFlas_1_write);
    sensitive << ( pcieState );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_predicate_op61_write_state2 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_558_p0);
    sensitive << ( pcieState );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_2_fu_434_p3 );
    sensitive << ( grp_fu_558_p00 );

    SC_METHOD(thread_grp_fu_558_p00);
    sensitive << ( elementCounterFlash_s );

    SC_METHOD(thread_grp_fu_558_p1);
    sensitive << ( pcieState );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_2_fu_434_p3 );

    SC_METHOD(thread_grp_fu_558_p2);
    sensitive << ( pcieState );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_2_fu_434_p3 );

    SC_METHOD(thread_grp_nbreadreq_fu_210_p3);
    sensitive << ( freeAddressArrayFlas_1_empty_n );

    SC_METHOD(thread_grp_nbreadreq_fu_224_p3);
    sensitive << ( freeAddressArrayDram_1_empty_n );

    SC_METHOD(thread_grp_read_fu_198_p2);
    sensitive << ( flushDone_V_0_data_reg );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_read_fu_204_p2);
    sensitive << ( flushReq_V_0_data_reg );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_icmp_fu_416_p2);
    sensitive << ( pcieState );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_4_fu_406_p4 );

    SC_METHOD(thread_inData_V_V_blk_n);
    sensitive << ( inData_V_V_empty_n );
    sensitive << ( pcieState );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_inData_V_V_read);
    sensitive << ( pcieState );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_outDataDram_V_V_blk_n);
    sensitive << ( outDataDram_V_V_full_n );
    sensitive << ( pcieState );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_outDataDram_V_V_din);
    sensitive << ( pcieState );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( freeAddressArrayDram_1_dout );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_outDataDram_V_V_write);
    sensitive << ( pcieState );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_outDataFlash_V_V_blk_n);
    sensitive << ( outDataFlash_V_V_full_n );
    sensitive << ( pcieState );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_outDataFlash_V_V_din);
    sensitive << ( pcieState );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( freeAddressArrayFlas_1_dout );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_outDataFlash_V_V_write);
    sensitive << ( pcieState );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_pcieState_load_load_fu_344_p1);
    sensitive << ( pcieState );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_streamInitializedFla_1_load_fu_348_p1);
    sensitive << ( streamInitializedFla );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_tmp_10_fu_494_p1);
    sensitive << ( elementCounterDram_V );

    SC_METHOD(thread_tmp_11_nbwritereq_fu_290_p3);
    sensitive << ( outDataFlash_V_V_full_n );

    SC_METHOD(thread_tmp_13_nbwritereq_fu_298_p3);
    sensitive << ( outDataDram_V_V_full_n );

    SC_METHOD(thread_tmp_15_nbreadreq_fu_306_p3);
    sensitive << ( inData_V_V_empty_n );

    SC_METHOD(thread_tmp_1_fu_486_p3);
    sensitive << ( elementCounterDram_V );

    SC_METHOD(thread_tmp_2_fu_434_p3);
    sensitive << ( elementCounterFlash_s );

    SC_METHOD(thread_tmp_4_fu_406_p4);
    sensitive << ( inData_V_V_dout );

    SC_METHOD(thread_tmp_5_nbwritereq_fu_274_p3);
    sensitive << ( freeAddressArrayDram_1_full_n );

    SC_METHOD(thread_tmp_6_fu_450_p2);
    sensitive << ( elementCounterFlash_s );

    SC_METHOD(thread_tmp_7_fu_511_p2);
    sensitive << ( elementCounterDram_V );

    SC_METHOD(thread_tmp_8_nbwritereq_fu_282_p3);
    sensitive << ( freeAddressArrayFlas_1_full_n );

    SC_METHOD(thread_tmp_V_4_fu_498_p3);
    sensitive << ( tmp_10_fu_494_p1 );

    SC_METHOD(thread_tmp_V_5_fu_506_p1);
    sensitive << ( tmp_V_4_fu_498_p3 );

    SC_METHOD(thread_tmp_V_7_fu_446_p1);
    sensitive << ( grp_fu_558_p3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_reset_idle_pp0 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    flushReq_V_0_data_reg = "0";
    flushReq_V_0_vld_reg = SC_LOGIC_0;
    flushAck_V_1_data_reg = "0";
    flushAck_V_1_vld_reg = SC_LOGIC_0;
    flushDone_V_0_data_reg = "0";
    flushDone_V_0_vld_reg = SC_LOGIC_0;
    pcieState = "0000";
    streamInitializedFla = "0";
    elementCounterDram_V = "000000";
    elementCounterFlash_s = "000000";
    flushFlag = "0";
    inputAddress_V = "00000000000000000000000000000000";
    pcie_flushAck_V = "0";
    ap_CS_fsm = "1";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "dummyPCIeJoint_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, inData_V_V_dout, "(port)inData_V_V_dout");
    sc_trace(mVcdFile, inData_V_V_empty_n, "(port)inData_V_V_empty_n");
    sc_trace(mVcdFile, inData_V_V_read, "(port)inData_V_V_read");
    sc_trace(mVcdFile, outDataFlash_V_V_din, "(port)outDataFlash_V_V_din");
    sc_trace(mVcdFile, outDataFlash_V_V_full_n, "(port)outDataFlash_V_V_full_n");
    sc_trace(mVcdFile, outDataFlash_V_V_write, "(port)outDataFlash_V_V_write");
    sc_trace(mVcdFile, outDataDram_V_V_din, "(port)outDataDram_V_V_din");
    sc_trace(mVcdFile, outDataDram_V_V_full_n, "(port)outDataDram_V_V_full_n");
    sc_trace(mVcdFile, outDataDram_V_V_write, "(port)outDataDram_V_V_write");
    sc_trace(mVcdFile, flushReq_V, "(port)flushReq_V");
    sc_trace(mVcdFile, flushAck_V, "(port)flushAck_V");
    sc_trace(mVcdFile, flushDone_V, "(port)flushDone_V");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, flushReq_V_0_data_reg, "flushReq_V_0_data_reg");
    sc_trace(mVcdFile, flushReq_V_0_vld_reg, "flushReq_V_0_vld_reg");
    sc_trace(mVcdFile, flushReq_V_0_ack_out, "flushReq_V_0_ack_out");
    sc_trace(mVcdFile, flushAck_V_1_data_reg, "flushAck_V_1_data_reg");
    sc_trace(mVcdFile, flushAck_V_1_vld_reg, "flushAck_V_1_vld_reg");
    sc_trace(mVcdFile, flushAck_V_1_vld_in, "flushAck_V_1_vld_in");
    sc_trace(mVcdFile, flushAck_V_1_ack_in, "flushAck_V_1_ack_in");
    sc_trace(mVcdFile, flushDone_V_0_data_reg, "flushDone_V_0_data_reg");
    sc_trace(mVcdFile, flushDone_V_0_vld_reg, "flushDone_V_0_vld_reg");
    sc_trace(mVcdFile, flushDone_V_0_ack_out, "flushDone_V_0_ack_out");
    sc_trace(mVcdFile, pcieState, "pcieState");
    sc_trace(mVcdFile, streamInitializedFla, "streamInitializedFla");
    sc_trace(mVcdFile, elementCounterDram_V, "elementCounterDram_V");
    sc_trace(mVcdFile, elementCounterFlash_s, "elementCounterFlash_s");
    sc_trace(mVcdFile, flushFlag, "flushFlag");
    sc_trace(mVcdFile, inputAddress_V, "inputAddress_V");
    sc_trace(mVcdFile, pcie_flushAck_V, "pcie_flushAck_V");
    sc_trace(mVcdFile, inData_V_V_blk_n, "inData_V_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, pcieState_load_load_fu_344_p1, "pcieState_load_load_fu_344_p1");
    sc_trace(mVcdFile, outDataFlash_V_V_blk_n, "outDataFlash_V_V_blk_n");
    sc_trace(mVcdFile, outDataDram_V_V_blk_n, "outDataDram_V_V_blk_n");
    sc_trace(mVcdFile, grp_read_fu_198_p2, "grp_read_fu_198_p2");
    sc_trace(mVcdFile, ap_block_state1_pp0_stage0_iter0, "ap_block_state1_pp0_stage0_iter0");
    sc_trace(mVcdFile, freeAddressArrayFlas_1_dout, "freeAddressArrayFlas_1_dout");
    sc_trace(mVcdFile, freeAddressArrayFlas_1_empty_n, "freeAddressArrayFlas_1_empty_n");
    sc_trace(mVcdFile, freeAddressArrayFlas_1_read, "freeAddressArrayFlas_1_read");
    sc_trace(mVcdFile, grp_nbreadreq_fu_210_p3, "grp_nbreadreq_fu_210_p3");
    sc_trace(mVcdFile, ap_predicate_op25_read_state2, "ap_predicate_op25_read_state2");
    sc_trace(mVcdFile, freeAddressArrayDram_1_dout, "freeAddressArrayDram_1_dout");
    sc_trace(mVcdFile, freeAddressArrayDram_1_empty_n, "freeAddressArrayDram_1_empty_n");
    sc_trace(mVcdFile, freeAddressArrayDram_1_read, "freeAddressArrayDram_1_read");
    sc_trace(mVcdFile, grp_nbreadreq_fu_224_p3, "grp_nbreadreq_fu_224_p3");
    sc_trace(mVcdFile, ap_predicate_op29_read_state2, "ap_predicate_op29_read_state2");
    sc_trace(mVcdFile, freeAddressArrayFlas_1_din, "freeAddressArrayFlas_1_din");
    sc_trace(mVcdFile, freeAddressArrayFlas_1_full_n, "freeAddressArrayFlas_1_full_n");
    sc_trace(mVcdFile, freeAddressArrayFlas_1_write, "freeAddressArrayFlas_1_write");
    sc_trace(mVcdFile, freeAddressArrayDram_1_din, "freeAddressArrayDram_1_din");
    sc_trace(mVcdFile, freeAddressArrayDram_1_full_n, "freeAddressArrayDram_1_full_n");
    sc_trace(mVcdFile, freeAddressArrayDram_1_write, "freeAddressArrayDram_1_write");
    sc_trace(mVcdFile, tmp_2_fu_434_p3, "tmp_2_fu_434_p3");
    sc_trace(mVcdFile, ap_predicate_op61_write_state2, "ap_predicate_op61_write_state2");
    sc_trace(mVcdFile, tmp_1_fu_486_p3, "tmp_1_fu_486_p3");
    sc_trace(mVcdFile, ap_predicate_op77_write_state2, "ap_predicate_op77_write_state2");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter1, "ap_block_state2_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter2, "ap_block_state3_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter3, "ap_block_state4_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, grp_read_fu_204_p2, "grp_read_fu_204_p2");
    sc_trace(mVcdFile, streamInitializedFla_1_load_fu_348_p1, "streamInitializedFla_1_load_fu_348_p1");
    sc_trace(mVcdFile, icmp_fu_416_p2, "icmp_fu_416_p2");
    sc_trace(mVcdFile, tmp_5_nbwritereq_fu_274_p3, "tmp_5_nbwritereq_fu_274_p3");
    sc_trace(mVcdFile, tmp_8_nbwritereq_fu_282_p3, "tmp_8_nbwritereq_fu_282_p3");
    sc_trace(mVcdFile, tmp_11_nbwritereq_fu_290_p3, "tmp_11_nbwritereq_fu_290_p3");
    sc_trace(mVcdFile, tmp_13_nbwritereq_fu_298_p3, "tmp_13_nbwritereq_fu_298_p3");
    sc_trace(mVcdFile, tmp_15_nbreadreq_fu_306_p3, "tmp_15_nbreadreq_fu_306_p3");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_phi_mux_storemerge_phi_fu_324_p4, "ap_phi_mux_storemerge_phi_fu_324_p4");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter1_storemerge_reg_321, "ap_phi_reg_pp0_iter1_storemerge_reg_321");
    sc_trace(mVcdFile, flushFlag_load_load_fu_360_p1, "flushFlag_load_load_fu_360_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, tmp_V_7_fu_446_p1, "tmp_V_7_fu_446_p1");
    sc_trace(mVcdFile, tmp_V_5_fu_506_p1, "tmp_V_5_fu_506_p1");
    sc_trace(mVcdFile, tmp_7_fu_511_p2, "tmp_7_fu_511_p2");
    sc_trace(mVcdFile, tmp_6_fu_450_p2, "tmp_6_fu_450_p2");
    sc_trace(mVcdFile, tmp_4_fu_406_p4, "tmp_4_fu_406_p4");
    sc_trace(mVcdFile, grp_fu_558_p3, "grp_fu_558_p3");
    sc_trace(mVcdFile, tmp_10_fu_494_p1, "tmp_10_fu_494_p1");
    sc_trace(mVcdFile, tmp_V_4_fu_498_p3, "tmp_V_4_fu_498_p3");
    sc_trace(mVcdFile, grp_fu_558_p0, "grp_fu_558_p0");
    sc_trace(mVcdFile, grp_fu_558_p1, "grp_fu_558_p1");
    sc_trace(mVcdFile, grp_fu_558_p2, "grp_fu_558_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_reset_idle_pp0, "ap_reset_idle_pp0");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, grp_fu_558_p00, "grp_fu_558_p00");
    sc_trace(mVcdFile, ap_condition_523, "ap_condition_523");
    sc_trace(mVcdFile, ap_condition_235, "ap_condition_235");
    sc_trace(mVcdFile, ap_condition_335, "ap_condition_335");
    sc_trace(mVcdFile, ap_condition_353, "ap_condition_353");
#endif

    }
    mHdltvinHandle.open("dummyPCIeJoint.hdltvin.dat");
    mHdltvoutHandle.open("dummyPCIeJoint.hdltvout.dat");
}

dummyPCIeJoint::~dummyPCIeJoint() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete dummyPCIeJoint_mac_muladd_6ns_14ns_14ns_18_1_1_U1;
    delete freeAddressArrayDram_1_fifo_U;
    delete freeAddressArrayFlas_1_fifo_U;
}

void dummyPCIeJoint::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void dummyPCIeJoint::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_pp0_stage0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_condition_235.read(), ap_const_boolean_1)) {
        if ((esl_seteq<1,4,4>(pcieState.read(), ap_const_lv4_1) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_fu_486_p3.read()))) {
            elementCounterDram_V = tmp_7_fu_511_p2.read();
        } else if ((esl_seteq<1,4,4>(pcieState.read(), ap_const_lv4_9) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, grp_nbreadreq_fu_210_p3.read()))) {
            elementCounterDram_V = ap_const_lv6_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_condition_235.read(), ap_const_boolean_1)) {
        if ((esl_seteq<1,4,4>(pcieState.read(), ap_const_lv4_2) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_fu_434_p3.read()))) {
            elementCounterFlash_s = tmp_6_fu_450_p2.read();
        } else if ((esl_seteq<1,4,4>(pcieState.read(), ap_const_lv4_9) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, grp_nbreadreq_fu_210_p3.read()))) {
            elementCounterFlash_s = ap_const_lv6_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_condition_235.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_condition_335.read(), ap_const_boolean_1)) {
            flushFlag = ap_const_lv1_0;
        } else if ((esl_seteq<1,4,4>(pcieState.read(), ap_const_lv4_9) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, grp_nbreadreq_fu_210_p3.read()))) {
            flushFlag = ap_const_lv1_1;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,4,4>(ap_const_lv4_0, pcieState_load_load_fu_344_p1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, streamInitializedFla_1_load_fu_348_p1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, grp_read_fu_204_p2.read()))) {
        pcieState = ap_const_lv4_8;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(grp_nbreadreq_fu_210_p3.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,4,4>(ap_const_lv4_0, pcieState_load_load_fu_344_p1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, streamInitializedFla_1_load_fu_348_p1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, grp_read_fu_204_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_11_nbwritereq_fu_290_p3.read()))) {
        pcieState = ap_const_lv4_6;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                ((esl_seteq<1,1,1>(ap_const_lv1_1, grp_nbreadreq_fu_224_p3.read()) && 
                  esl_seteq<1,4,4>(ap_const_lv4_0, pcieState_load_load_fu_344_p1.read()) && 
                  esl_seteq<1,1,1>(ap_const_lv1_1, streamInitializedFla_1_load_fu_348_p1.read()) && 
                  esl_seteq<1,1,1>(ap_const_lv1_0, grp_read_fu_204_p2.read()) && 
                  esl_seteq<1,1,1>(ap_const_lv1_0, grp_nbreadreq_fu_210_p3.read()) && 
                  esl_seteq<1,1,1>(ap_const_lv1_1, tmp_13_nbwritereq_fu_298_p3.read())) || 
                 (esl_seteq<1,1,1>(ap_const_lv1_1, grp_nbreadreq_fu_224_p3.read()) && 
                  esl_seteq<1,4,4>(ap_const_lv4_0, pcieState_load_load_fu_344_p1.read()) && 
                  esl_seteq<1,1,1>(ap_const_lv1_1, streamInitializedFla_1_load_fu_348_p1.read()) && 
                  esl_seteq<1,1,1>(ap_const_lv1_0, grp_read_fu_204_p2.read()) && 
                  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_11_nbwritereq_fu_290_p3.read()) && 
                  esl_seteq<1,1,1>(ap_const_lv1_1, tmp_13_nbwritereq_fu_298_p3.read()))))) {
        pcieState = ap_const_lv4_7;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                ((((esl_seteq<1,4,4>(ap_const_lv4_0, pcieState_load_load_fu_344_p1.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_1, streamInitializedFla_1_load_fu_348_p1.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, grp_read_fu_204_p2.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, grp_nbreadreq_fu_210_p3.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, grp_nbreadreq_fu_224_p3.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_1, tmp_15_nbreadreq_fu_306_p3.read())) || 
                   (esl_seteq<1,4,4>(ap_const_lv4_0, pcieState_load_load_fu_344_p1.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_1, streamInitializedFla_1_load_fu_348_p1.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, grp_read_fu_204_p2.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, grp_nbreadreq_fu_210_p3.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, tmp_13_nbwritereq_fu_298_p3.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_1, tmp_15_nbreadreq_fu_306_p3.read()))) || 
                  (esl_seteq<1,4,4>(ap_const_lv4_0, pcieState_load_load_fu_344_p1.read()) && 
                   esl_seteq<1,1,1>(ap_const_lv1_1, streamInitializedFla_1_load_fu_348_p1.read()) && 
                   esl_seteq<1,1,1>(ap_const_lv1_0, grp_read_fu_204_p2.read()) && 
                   esl_seteq<1,1,1>(ap_const_lv1_0, tmp_11_nbwritereq_fu_290_p3.read()) && 
                   esl_seteq<1,1,1>(ap_const_lv1_0, grp_nbreadreq_fu_224_p3.read()) && 
                   esl_seteq<1,1,1>(ap_const_lv1_1, tmp_15_nbreadreq_fu_306_p3.read()))) || 
                 (esl_seteq<1,4,4>(ap_const_lv4_0, pcieState_load_load_fu_344_p1.read()) && 
                  esl_seteq<1,1,1>(ap_const_lv1_1, streamInitializedFla_1_load_fu_348_p1.read()) && 
                  esl_seteq<1,1,1>(ap_const_lv1_0, grp_read_fu_204_p2.read()) && 
                  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_11_nbwritereq_fu_290_p3.read()) && 
                  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_13_nbwritereq_fu_298_p3.read()) && 
                  esl_seteq<1,1,1>(ap_const_lv1_1, tmp_15_nbreadreq_fu_306_p3.read()))))) {
        pcieState = ap_const_lv4_3;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,4,4>(pcieState.read(), ap_const_lv4_1) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_fu_486_p3.read()))) {
        pcieState = ap_const_lv4_2;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,4,4>(pcieState.read(), ap_const_lv4_2) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_fu_434_p3.read()))) {
        pcieState = ap_phi_mux_storemerge_phi_fu_324_p4.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,4,4>(pcieState.read(), ap_const_lv4_3) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_fu_416_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_5_nbwritereq_fu_274_p3.read()))) {
        pcieState = ap_const_lv4_5;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                ((esl_seteq<1,4,4>(pcieState.read(), ap_const_lv4_3) && 
                  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_nbwritereq_fu_274_p3.read()) && 
                  esl_seteq<1,1,1>(ap_const_lv1_1, tmp_8_nbwritereq_fu_282_p3.read())) || 
                 (esl_seteq<1,4,4>(pcieState.read(), ap_const_lv4_3) && 
                  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_fu_416_p2.read()) && 
                  esl_seteq<1,1,1>(ap_const_lv1_1, tmp_8_nbwritereq_fu_282_p3.read()))))) {
        pcieState = ap_const_lv4_4;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,4,4>(pcieState.read(), ap_const_lv4_8) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, grp_nbreadreq_fu_224_p3.read()))) {
        pcieState = ap_const_lv4_9;
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                 esl_seteq<1,4,4>(pcieState.read(), ap_const_lv4_9) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, grp_nbreadreq_fu_210_p3.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                 esl_seteq<1,4,4>(ap_const_lv4_0, pcieState_load_load_fu_344_p1.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, streamInitializedFla_1_load_fu_348_p1.read())))) {
        pcieState = ap_const_lv4_1;
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                 esl_seteq<1,4,4>(pcieState.read(), ap_const_lv4_6) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                 esl_seteq<1,4,4>(pcieState.read(), ap_const_lv4_7) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                 esl_seteq<1,4,4>(pcieState.read(), ap_const_lv4_4) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                 esl_seteq<1,4,4>(pcieState.read(), ap_const_lv4_5) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                 esl_seteq<1,4,4>(pcieState_load_load_fu_344_p1.read(), ap_const_lv4_A) && 
                 esl_seteq<1,1,1>(grp_read_fu_198_p2.read(), ap_const_lv1_1)))) {
        pcieState = ap_const_lv4_0;
    }
    if (esl_seteq<1,1,1>(ap_condition_235.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,4,4>(pcieState.read(), ap_const_lv4_1)) {
            pcie_flushAck_V = ap_const_lv1_0;
        } else if ((esl_seteq<1,4,4>(pcieState.read(), ap_const_lv4_9) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, grp_nbreadreq_fu_210_p3.read()))) {
            pcie_flushAck_V = ap_const_lv1_1;
        }
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, flushAck_V_1_vld_in.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, flushAck_V_1_vld_reg.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, flushAck_V_1_vld_in.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, flushAck_V_1_vld_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1)))) {
        flushAck_V_1_data_reg = pcie_flushAck_V.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, flushDone_V_0_vld_reg.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, flushDone_V_0_vld_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, flushDone_V_0_ack_out.read())))) {
        flushDone_V_0_data_reg = flushDone_V.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, flushReq_V_0_vld_reg.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, flushReq_V_0_vld_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, flushReq_V_0_ack_out.read())))) {
        flushReq_V_0_data_reg = flushReq_V.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,4,4>(pcieState.read(), ap_const_lv4_3) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        inputAddress_V = inData_V_V_dout.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,4,4>(pcieState.read(), ap_const_lv4_2) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_fu_434_p3.read()))) {
        streamInitializedFla = ap_const_lv1_1;
    }
}

void dummyPCIeJoint::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[0];
}

void dummyPCIeJoint::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dummyPCIeJoint::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  ((esl_seteq<1,1,1>(ap_const_logic_0, freeAddressArrayFlas_1_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op25_read_state2.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, freeAddressArrayDram_1_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op29_read_state2.read())) || 
   (esl_seteq<1,4,4>(pcieState.read(), ap_const_lv4_7) && 
    esl_seteq<1,1,1>(ap_const_logic_0, freeAddressArrayDram_1_empty_n.read())) || 
   (esl_seteq<1,4,4>(pcieState.read(), ap_const_lv4_7) && 
    esl_seteq<1,1,1>(ap_const_logic_0, outDataDram_V_V_full_n.read())) || 
   (esl_seteq<1,4,4>(pcieState.read(), ap_const_lv4_6) && 
    esl_seteq<1,1,1>(ap_const_logic_0, freeAddressArrayFlas_1_empty_n.read())) || 
   (esl_seteq<1,4,4>(pcieState.read(), ap_const_lv4_6) && 
    esl_seteq<1,1,1>(ap_const_logic_0, outDataFlash_V_V_full_n.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, freeAddressArrayFlas_1_full_n.read()) && 
    esl_seteq<1,4,4>(pcieState.read(), ap_const_lv4_4)) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, freeAddressArrayDram_1_full_n.read()) && 
    esl_seteq<1,4,4>(pcieState.read(), ap_const_lv4_5)) || 
   (esl_seteq<1,4,4>(pcieState.read(), ap_const_lv4_3) && 
    esl_seteq<1,1,1>(ap_const_logic_0, inData_V_V_empty_n.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, freeAddressArrayFlas_1_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op61_write_state2.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, freeAddressArrayDram_1_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op77_write_state2.read())))) || (esl_seteq<1,1,1>(ap_const_logic_0, flushAck_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read())));
}

void dummyPCIeJoint::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  ((esl_seteq<1,1,1>(ap_const_logic_0, freeAddressArrayFlas_1_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op25_read_state2.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, freeAddressArrayDram_1_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op29_read_state2.read())) || 
   (esl_seteq<1,4,4>(pcieState.read(), ap_const_lv4_7) && 
    esl_seteq<1,1,1>(ap_const_logic_0, freeAddressArrayDram_1_empty_n.read())) || 
   (esl_seteq<1,4,4>(pcieState.read(), ap_const_lv4_7) && 
    esl_seteq<1,1,1>(ap_const_logic_0, outDataDram_V_V_full_n.read())) || 
   (esl_seteq<1,4,4>(pcieState.read(), ap_const_lv4_6) && 
    esl_seteq<1,1,1>(ap_const_logic_0, freeAddressArrayFlas_1_empty_n.read())) || 
   (esl_seteq<1,4,4>(pcieState.read(), ap_const_lv4_6) && 
    esl_seteq<1,1,1>(ap_const_logic_0, outDataFlash_V_V_full_n.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, freeAddressArrayFlas_1_full_n.read()) && 
    esl_seteq<1,4,4>(pcieState.read(), ap_const_lv4_4)) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, freeAddressArrayDram_1_full_n.read()) && 
    esl_seteq<1,4,4>(pcieState.read(), ap_const_lv4_5)) || 
   (esl_seteq<1,4,4>(pcieState.read(), ap_const_lv4_3) && 
    esl_seteq<1,1,1>(ap_const_logic_0, inData_V_V_empty_n.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, freeAddressArrayFlas_1_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op61_write_state2.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, freeAddressArrayDram_1_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op77_write_state2.read())))) || (esl_seteq<1,1,1>(ap_const_logic_0, flushAck_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read())));
}

void dummyPCIeJoint::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  ((esl_seteq<1,1,1>(ap_const_logic_0, freeAddressArrayFlas_1_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op25_read_state2.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, freeAddressArrayDram_1_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op29_read_state2.read())) || 
   (esl_seteq<1,4,4>(pcieState.read(), ap_const_lv4_7) && 
    esl_seteq<1,1,1>(ap_const_logic_0, freeAddressArrayDram_1_empty_n.read())) || 
   (esl_seteq<1,4,4>(pcieState.read(), ap_const_lv4_7) && 
    esl_seteq<1,1,1>(ap_const_logic_0, outDataDram_V_V_full_n.read())) || 
   (esl_seteq<1,4,4>(pcieState.read(), ap_const_lv4_6) && 
    esl_seteq<1,1,1>(ap_const_logic_0, freeAddressArrayFlas_1_empty_n.read())) || 
   (esl_seteq<1,4,4>(pcieState.read(), ap_const_lv4_6) && 
    esl_seteq<1,1,1>(ap_const_logic_0, outDataFlash_V_V_full_n.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, freeAddressArrayFlas_1_full_n.read()) && 
    esl_seteq<1,4,4>(pcieState.read(), ap_const_lv4_4)) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, freeAddressArrayDram_1_full_n.read()) && 
    esl_seteq<1,4,4>(pcieState.read(), ap_const_lv4_5)) || 
   (esl_seteq<1,4,4>(pcieState.read(), ap_const_lv4_3) && 
    esl_seteq<1,1,1>(ap_const_logic_0, inData_V_V_empty_n.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, freeAddressArrayFlas_1_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op61_write_state2.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, freeAddressArrayDram_1_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op77_write_state2.read())))) || (esl_seteq<1,1,1>(ap_const_logic_0, flushAck_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read())));
}

void dummyPCIeJoint::thread_ap_block_state1_pp0_stage0_iter0() {
    ap_block_state1_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dummyPCIeJoint::thread_ap_block_state2_pp0_stage0_iter1() {
    ap_block_state2_pp0_stage0_iter1 = ((esl_seteq<1,1,1>(ap_const_logic_0, freeAddressArrayFlas_1_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op25_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, freeAddressArrayDram_1_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op29_read_state2.read())) || (esl_seteq<1,4,4>(pcieState.read(), ap_const_lv4_7) && 
  esl_seteq<1,1,1>(ap_const_logic_0, freeAddressArrayDram_1_empty_n.read())) || (esl_seteq<1,4,4>(pcieState.read(), ap_const_lv4_7) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outDataDram_V_V_full_n.read())) || (esl_seteq<1,4,4>(pcieState.read(), ap_const_lv4_6) && 
  esl_seteq<1,1,1>(ap_const_logic_0, freeAddressArrayFlas_1_empty_n.read())) || (esl_seteq<1,4,4>(pcieState.read(), ap_const_lv4_6) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outDataFlash_V_V_full_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, freeAddressArrayFlas_1_full_n.read()) && 
  esl_seteq<1,4,4>(pcieState.read(), ap_const_lv4_4)) || (esl_seteq<1,1,1>(ap_const_logic_0, freeAddressArrayDram_1_full_n.read()) && 
  esl_seteq<1,4,4>(pcieState.read(), ap_const_lv4_5)) || (esl_seteq<1,4,4>(pcieState.read(), ap_const_lv4_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, inData_V_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, freeAddressArrayFlas_1_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op61_write_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, freeAddressArrayDram_1_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op77_write_state2.read())));
}

void dummyPCIeJoint::thread_ap_block_state3_pp0_stage0_iter2() {
    ap_block_state3_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dummyPCIeJoint::thread_ap_block_state4_pp0_stage0_iter3() {
    ap_block_state4_pp0_stage0_iter3 = esl_seteq<1,1,1>(ap_const_logic_0, flushAck_V_1_ack_in.read());
}

void dummyPCIeJoint::thread_ap_condition_235() {
    ap_condition_235 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0));
}

void dummyPCIeJoint::thread_ap_condition_335() {
    ap_condition_335 = (esl_seteq<1,4,4>(pcieState.read(), ap_const_lv4_2) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_fu_434_p3.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, flushFlag_load_load_fu_360_p1.read()));
}

void dummyPCIeJoint::thread_ap_condition_353() {
    ap_condition_353 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0));
}

void dummyPCIeJoint::thread_ap_condition_523() {
    ap_condition_523 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && esl_seteq<1,4,4>(pcieState.read(), ap_const_lv4_2) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_fu_434_p3.read()));
}

void dummyPCIeJoint::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void dummyPCIeJoint::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void dummyPCIeJoint::thread_ap_phi_mux_storemerge_phi_fu_324_p4() {
    if (esl_seteq<1,1,1>(ap_condition_523.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_lv1_0, flushFlag_load_load_fu_360_p1.read())) {
            ap_phi_mux_storemerge_phi_fu_324_p4 = ap_const_lv4_0;
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, flushFlag_load_load_fu_360_p1.read())) {
            ap_phi_mux_storemerge_phi_fu_324_p4 = ap_const_lv4_A;
        } else {
            ap_phi_mux_storemerge_phi_fu_324_p4 = ap_phi_reg_pp0_iter1_storemerge_reg_321.read();
        }
    } else {
        ap_phi_mux_storemerge_phi_fu_324_p4 = ap_phi_reg_pp0_iter1_storemerge_reg_321.read();
    }
}

void dummyPCIeJoint::thread_ap_phi_reg_pp0_iter1_storemerge_reg_321() {
    ap_phi_reg_pp0_iter1_storemerge_reg_321 =  (sc_lv<4>) ("XXXX");
}

void dummyPCIeJoint::thread_ap_predicate_op25_read_state2() {
    ap_predicate_op25_read_state2 = (esl_seteq<1,4,4>(pcieState.read(), ap_const_lv4_9) && esl_seteq<1,1,1>(grp_nbreadreq_fu_210_p3.read(), ap_const_lv1_1));
}

void dummyPCIeJoint::thread_ap_predicate_op29_read_state2() {
    ap_predicate_op29_read_state2 = (esl_seteq<1,4,4>(pcieState.read(), ap_const_lv4_8) && esl_seteq<1,1,1>(ap_const_lv1_1, grp_nbreadreq_fu_224_p3.read()));
}

void dummyPCIeJoint::thread_ap_predicate_op61_write_state2() {
    ap_predicate_op61_write_state2 = (esl_seteq<1,4,4>(pcieState.read(), ap_const_lv4_2) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_fu_434_p3.read()));
}

void dummyPCIeJoint::thread_ap_predicate_op77_write_state2() {
    ap_predicate_op77_write_state2 = (esl_seteq<1,4,4>(pcieState.read(), ap_const_lv4_1) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_fu_486_p3.read()));
}

void dummyPCIeJoint::thread_ap_reset_idle_pp0() {
    if (!esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        ap_reset_idle_pp0 = ap_const_logic_1;
    } else {
        ap_reset_idle_pp0 = ap_const_logic_0;
    }
}

void dummyPCIeJoint::thread_flushAck_V() {
    flushAck_V = flushAck_V_1_data_reg.read();
}

void dummyPCIeJoint::thread_flushAck_V_1_ack_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, flushAck_V_1_vld_reg.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, flushAck_V_1_vld_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1)))) {
        flushAck_V_1_ack_in = ap_const_logic_1;
    } else {
        flushAck_V_1_ack_in = ap_const_logic_0;
    }
}

void dummyPCIeJoint::thread_flushAck_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        flushAck_V_1_vld_in = ap_const_logic_1;
    } else {
        flushAck_V_1_vld_in = ap_const_logic_0;
    }
}

void dummyPCIeJoint::thread_flushDone_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1))) {
        flushDone_V_0_ack_out = ap_const_logic_1;
    } else {
        flushDone_V_0_ack_out = ap_const_logic_0;
    }
}

void dummyPCIeJoint::thread_flushFlag_load_load_fu_360_p1() {
    flushFlag_load_load_fu_360_p1 = flushFlag.read();
}

void dummyPCIeJoint::thread_flushReq_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1))) {
        flushReq_V_0_ack_out = ap_const_logic_1;
    } else {
        flushReq_V_0_ack_out = ap_const_logic_0;
    }
}

void dummyPCIeJoint::thread_freeAddressArrayDram_1_din() {
    if (esl_seteq<1,1,1>(ap_condition_353.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op77_write_state2.read())) {
            freeAddressArrayDram_1_din = tmp_V_5_fu_506_p1.read();
        } else if (esl_seteq<1,4,4>(pcieState.read(), ap_const_lv4_5)) {
            freeAddressArrayDram_1_din = inputAddress_V.read();
        } else {
            freeAddressArrayDram_1_din = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        freeAddressArrayDram_1_din = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void dummyPCIeJoint::thread_freeAddressArrayDram_1_read() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op29_read_state2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,4,4>(pcieState.read(), ap_const_lv4_7) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        freeAddressArrayDram_1_read = ap_const_logic_1;
    } else {
        freeAddressArrayDram_1_read = ap_const_logic_0;
    }
}

void dummyPCIeJoint::thread_freeAddressArrayDram_1_write() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,4,4>(pcieState.read(), ap_const_lv4_5) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op77_write_state2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        freeAddressArrayDram_1_write = ap_const_logic_1;
    } else {
        freeAddressArrayDram_1_write = ap_const_logic_0;
    }
}

void dummyPCIeJoint::thread_freeAddressArrayFlas_1_din() {
    if (esl_seteq<1,1,1>(ap_condition_353.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op61_write_state2.read())) {
            freeAddressArrayFlas_1_din = tmp_V_7_fu_446_p1.read();
        } else if (esl_seteq<1,4,4>(pcieState.read(), ap_const_lv4_4)) {
            freeAddressArrayFlas_1_din = inputAddress_V.read();
        } else {
            freeAddressArrayFlas_1_din = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        freeAddressArrayFlas_1_din = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void dummyPCIeJoint::thread_freeAddressArrayFlas_1_read() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op25_read_state2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,4,4>(pcieState.read(), ap_const_lv4_6) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        freeAddressArrayFlas_1_read = ap_const_logic_1;
    } else {
        freeAddressArrayFlas_1_read = ap_const_logic_0;
    }
}

void dummyPCIeJoint::thread_freeAddressArrayFlas_1_write() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,4,4>(pcieState.read(), ap_const_lv4_4) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op61_write_state2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        freeAddressArrayFlas_1_write = ap_const_logic_1;
    } else {
        freeAddressArrayFlas_1_write = ap_const_logic_0;
    }
}

void dummyPCIeJoint::thread_grp_fu_558_p0() {
    grp_fu_558_p0 =  (sc_lv<6>) (grp_fu_558_p00.read());
}

void dummyPCIeJoint::thread_grp_fu_558_p00() {
    grp_fu_558_p00 = esl_zext<18,6>(elementCounterFlash_s.read());
}

void dummyPCIeJoint::thread_grp_fu_558_p1() {
    grp_fu_558_p1 =  (sc_lv<14>) (ap_const_lv18_1F06);
}

void dummyPCIeJoint::thread_grp_fu_558_p2() {
    grp_fu_558_p2 =  (sc_lv<14>) (ap_const_lv18_1000);
}

void dummyPCIeJoint::thread_grp_nbreadreq_fu_210_p3() {
    grp_nbreadreq_fu_210_p3 =  (sc_lv<1>) (freeAddressArrayFlas_1_empty_n.read());
}

void dummyPCIeJoint::thread_grp_nbreadreq_fu_224_p3() {
    grp_nbreadreq_fu_224_p3 =  (sc_lv<1>) (freeAddressArrayDram_1_empty_n.read());
}

void dummyPCIeJoint::thread_grp_read_fu_198_p2() {
    grp_read_fu_198_p2 = flushDone_V_0_data_reg.read();
}

void dummyPCIeJoint::thread_grp_read_fu_204_p2() {
    grp_read_fu_204_p2 = flushReq_V_0_data_reg.read();
}

void dummyPCIeJoint::thread_icmp_fu_416_p2() {
    icmp_fu_416_p2 = (!tmp_4_fu_406_p4.read().is_01() || !ap_const_lv20_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_4_fu_406_p4.read() == ap_const_lv20_0);
}

void dummyPCIeJoint::thread_inData_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,4,4>(pcieState.read(), ap_const_lv4_3))) {
        inData_V_V_blk_n = inData_V_V_empty_n.read();
    } else {
        inData_V_V_blk_n = ap_const_logic_1;
    }
}

void dummyPCIeJoint::thread_inData_V_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,4,4>(pcieState.read(), ap_const_lv4_3) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        inData_V_V_read = ap_const_logic_1;
    } else {
        inData_V_V_read = ap_const_logic_0;
    }
}

void dummyPCIeJoint::thread_outDataDram_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,4,4>(pcieState.read(), ap_const_lv4_7))) {
        outDataDram_V_V_blk_n = outDataDram_V_V_full_n.read();
    } else {
        outDataDram_V_V_blk_n = ap_const_logic_1;
    }
}

void dummyPCIeJoint::thread_outDataDram_V_V_din() {
    outDataDram_V_V_din = freeAddressArrayDram_1_dout.read();
}

void dummyPCIeJoint::thread_outDataDram_V_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,4,4>(pcieState.read(), ap_const_lv4_7) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        outDataDram_V_V_write = ap_const_logic_1;
    } else {
        outDataDram_V_V_write = ap_const_logic_0;
    }
}

void dummyPCIeJoint::thread_outDataFlash_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,4,4>(pcieState.read(), ap_const_lv4_6))) {
        outDataFlash_V_V_blk_n = outDataFlash_V_V_full_n.read();
    } else {
        outDataFlash_V_V_blk_n = ap_const_logic_1;
    }
}

void dummyPCIeJoint::thread_outDataFlash_V_V_din() {
    outDataFlash_V_V_din = freeAddressArrayFlas_1_dout.read();
}

void dummyPCIeJoint::thread_outDataFlash_V_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,4,4>(pcieState.read(), ap_const_lv4_6) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        outDataFlash_V_V_write = ap_const_logic_1;
    } else {
        outDataFlash_V_V_write = ap_const_logic_0;
    }
}

void dummyPCIeJoint::thread_pcieState_load_load_fu_344_p1() {
    pcieState_load_load_fu_344_p1 = pcieState.read();
}

void dummyPCIeJoint::thread_streamInitializedFla_1_load_fu_348_p1() {
    streamInitializedFla_1_load_fu_348_p1 = streamInitializedFla.read();
}

void dummyPCIeJoint::thread_tmp_10_fu_494_p1() {
    tmp_10_fu_494_p1 = elementCounterDram_V.read().range(5-1, 0);
}

void dummyPCIeJoint::thread_tmp_11_nbwritereq_fu_290_p3() {
    tmp_11_nbwritereq_fu_290_p3 =  (sc_lv<1>) (outDataFlash_V_V_full_n.read());
}

void dummyPCIeJoint::thread_tmp_13_nbwritereq_fu_298_p3() {
    tmp_13_nbwritereq_fu_298_p3 =  (sc_lv<1>) (outDataDram_V_V_full_n.read());
}

void dummyPCIeJoint::thread_tmp_15_nbreadreq_fu_306_p3() {
    tmp_15_nbreadreq_fu_306_p3 =  (sc_lv<1>) (inData_V_V_empty_n.read());
}

void dummyPCIeJoint::thread_tmp_1_fu_486_p3() {
    tmp_1_fu_486_p3 = elementCounterDram_V.read().range(5, 5);
}

void dummyPCIeJoint::thread_tmp_2_fu_434_p3() {
    tmp_2_fu_434_p3 = elementCounterFlash_s.read().range(5, 5);
}

void dummyPCIeJoint::thread_tmp_4_fu_406_p4() {
    tmp_4_fu_406_p4 = inData_V_V_dout.read().range(31, 12);
}

void dummyPCIeJoint::thread_tmp_5_nbwritereq_fu_274_p3() {
    tmp_5_nbwritereq_fu_274_p3 =  (sc_lv<1>) (freeAddressArrayDram_1_full_n.read());
}

void dummyPCIeJoint::thread_tmp_6_fu_450_p2() {
    tmp_6_fu_450_p2 = (!elementCounterFlash_s.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(elementCounterFlash_s.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void dummyPCIeJoint::thread_tmp_7_fu_511_p2() {
    tmp_7_fu_511_p2 = (!ap_const_lv6_1.is_01() || !elementCounterDram_V.read().is_01())? sc_lv<6>(): (sc_biguint<6>(ap_const_lv6_1) + sc_biguint<6>(elementCounterDram_V.read()));
}

void dummyPCIeJoint::thread_tmp_8_nbwritereq_fu_282_p3() {
    tmp_8_nbwritereq_fu_282_p3 =  (sc_lv<1>) (freeAddressArrayFlas_1_full_n.read());
}

void dummyPCIeJoint::thread_tmp_V_4_fu_498_p3() {
    tmp_V_4_fu_498_p3 = esl_concat<5,7>(tmp_10_fu_494_p1.read(), ap_const_lv7_0);
}

void dummyPCIeJoint::thread_tmp_V_5_fu_506_p1() {
    tmp_V_5_fu_506_p1 = esl_zext<32,12>(tmp_V_4_fu_498_p3.read());
}

void dummyPCIeJoint::thread_tmp_V_7_fu_446_p1() {
    tmp_V_7_fu_446_p1 = esl_zext<32,18>(grp_fu_558_p3.read());
}

void dummyPCIeJoint::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
break;
        default : 
            ap_NS_fsm =  (sc_lv<1>) ("X");
            break;
    }
}

void dummyPCIeJoint::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inData_V_V_dout\" :  \"" << inData_V_V_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inData_V_V_empty_n\" :  \"" << inData_V_V_empty_n.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"inData_V_V_read\" :  \"" << inData_V_V_read.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outDataFlash_V_V_din\" :  \"" << outDataFlash_V_V_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"outDataFlash_V_V_full_n\" :  \"" << outDataFlash_V_V_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outDataFlash_V_V_write\" :  \"" << outDataFlash_V_V_write.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outDataDram_V_V_din\" :  \"" << outDataDram_V_V_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"outDataDram_V_V_full_n\" :  \"" << outDataDram_V_V_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outDataDram_V_V_write\" :  \"" << outDataDram_V_V_write.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"flushReq_V\" :  \"" << flushReq_V.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"flushAck_V\" :  \"" << flushAck_V.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"flushDone_V\" :  \"" << flushDone_V.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}


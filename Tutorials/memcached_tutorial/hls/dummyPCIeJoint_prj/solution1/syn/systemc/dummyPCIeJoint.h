// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _dummyPCIeJoint_HH_
#define _dummyPCIeJoint_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "dummyPCIeJoint_mac_muladd_6ns_14ns_14ns_18_1_1.h"
#include "fifo_w32_d64_A.h"
#include "fifo_w32_d32_A.h"

namespace ap_rtl {

struct dummyPCIeJoint : public sc_module {
    // Port declarations 14
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_lv<32> > inData_V_V_dout;
    sc_in< sc_logic > inData_V_V_empty_n;
    sc_out< sc_logic > inData_V_V_read;
    sc_out< sc_lv<32> > outDataFlash_V_V_din;
    sc_in< sc_logic > outDataFlash_V_V_full_n;
    sc_out< sc_logic > outDataFlash_V_V_write;
    sc_out< sc_lv<32> > outDataDram_V_V_din;
    sc_in< sc_logic > outDataDram_V_V_full_n;
    sc_out< sc_logic > outDataDram_V_V_write;
    sc_in< sc_lv<1> > flushReq_V;
    sc_out< sc_lv<1> > flushAck_V;
    sc_in< sc_lv<1> > flushDone_V;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    dummyPCIeJoint(sc_module_name name);
    SC_HAS_PROCESS(dummyPCIeJoint);

    ~dummyPCIeJoint();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    dummyPCIeJoint_mac_muladd_6ns_14ns_14ns_18_1_1<1,1,6,14,14,18>* dummyPCIeJoint_mac_muladd_6ns_14ns_14ns_18_1_1_U1;
    fifo_w32_d64_A* freeAddressArrayDram_1_fifo_U;
    fifo_w32_d32_A* freeAddressArrayFlas_1_fifo_U;
    sc_signal< sc_lv<1> > flushReq_V_0_data_reg;
    sc_signal< sc_logic > flushReq_V_0_vld_reg;
    sc_signal< sc_logic > flushReq_V_0_ack_out;
    sc_signal< sc_lv<1> > flushAck_V_1_data_reg;
    sc_signal< sc_logic > flushAck_V_1_vld_reg;
    sc_signal< sc_logic > flushAck_V_1_vld_in;
    sc_signal< sc_logic > flushAck_V_1_ack_in;
    sc_signal< sc_lv<1> > flushDone_V_0_data_reg;
    sc_signal< sc_logic > flushDone_V_0_vld_reg;
    sc_signal< sc_logic > flushDone_V_0_ack_out;
    sc_signal< sc_lv<4> > pcieState;
    sc_signal< sc_lv<1> > streamInitializedFla;
    sc_signal< sc_lv<6> > elementCounterDram_V;
    sc_signal< sc_lv<6> > elementCounterFlash_s;
    sc_signal< sc_lv<1> > flushFlag;
    sc_signal< sc_lv<32> > inputAddress_V;
    sc_signal< sc_lv<1> > pcie_flushAck_V;
    sc_signal< sc_logic > inData_V_V_blk_n;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<4> > pcieState_load_load_fu_344_p1;
    sc_signal< sc_logic > outDataFlash_V_V_blk_n;
    sc_signal< sc_logic > outDataDram_V_V_blk_n;
    sc_signal< sc_lv<1> > grp_read_fu_198_p2;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0;
    sc_signal< sc_lv<32> > freeAddressArrayFlas_1_dout;
    sc_signal< sc_logic > freeAddressArrayFlas_1_empty_n;
    sc_signal< sc_logic > freeAddressArrayFlas_1_read;
    sc_signal< sc_lv<1> > grp_nbreadreq_fu_210_p3;
    sc_signal< bool > ap_predicate_op25_read_state2;
    sc_signal< sc_lv<32> > freeAddressArrayDram_1_dout;
    sc_signal< sc_logic > freeAddressArrayDram_1_empty_n;
    sc_signal< sc_logic > freeAddressArrayDram_1_read;
    sc_signal< sc_lv<1> > grp_nbreadreq_fu_224_p3;
    sc_signal< bool > ap_predicate_op29_read_state2;
    sc_signal< sc_lv<32> > freeAddressArrayFlas_1_din;
    sc_signal< sc_logic > freeAddressArrayFlas_1_full_n;
    sc_signal< sc_logic > freeAddressArrayFlas_1_write;
    sc_signal< sc_lv<32> > freeAddressArrayDram_1_din;
    sc_signal< sc_logic > freeAddressArrayDram_1_full_n;
    sc_signal< sc_logic > freeAddressArrayDram_1_write;
    sc_signal< sc_lv<1> > tmp_2_fu_434_p3;
    sc_signal< bool > ap_predicate_op61_write_state2;
    sc_signal< sc_lv<1> > tmp_1_fu_486_p3;
    sc_signal< bool > ap_predicate_op77_write_state2;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > grp_read_fu_204_p2;
    sc_signal< sc_lv<1> > streamInitializedFla_1_load_fu_348_p1;
    sc_signal< sc_lv<1> > icmp_fu_416_p2;
    sc_signal< sc_lv<1> > tmp_5_nbwritereq_fu_274_p3;
    sc_signal< sc_lv<1> > tmp_8_nbwritereq_fu_282_p3;
    sc_signal< sc_lv<1> > tmp_11_nbwritereq_fu_290_p3;
    sc_signal< sc_lv<1> > tmp_13_nbwritereq_fu_298_p3;
    sc_signal< sc_lv<1> > tmp_15_nbreadreq_fu_306_p3;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_lv<4> > ap_phi_mux_storemerge_phi_fu_324_p4;
    sc_signal< sc_lv<4> > ap_phi_reg_pp0_iter1_storemerge_reg_321;
    sc_signal< sc_lv<1> > flushFlag_load_load_fu_360_p1;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<32> > tmp_V_7_fu_446_p1;
    sc_signal< sc_lv<32> > tmp_V_5_fu_506_p1;
    sc_signal< sc_lv<6> > tmp_7_fu_511_p2;
    sc_signal< sc_lv<6> > tmp_6_fu_450_p2;
    sc_signal< sc_lv<20> > tmp_4_fu_406_p4;
    sc_signal< sc_lv<18> > grp_fu_558_p3;
    sc_signal< sc_lv<5> > tmp_10_fu_494_p1;
    sc_signal< sc_lv<12> > tmp_V_4_fu_498_p3;
    sc_signal< sc_lv<6> > grp_fu_558_p0;
    sc_signal< sc_lv<14> > grp_fu_558_p1;
    sc_signal< sc_lv<14> > grp_fu_558_p2;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    sc_signal< sc_logic > ap_reset_idle_pp0;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<18> > grp_fu_558_p00;
    sc_signal< bool > ap_condition_523;
    sc_signal< bool > ap_condition_235;
    sc_signal< bool > ap_condition_335;
    sc_signal< bool > ap_condition_353;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_fsm_pp0_stage0;
    static const bool ap_const_boolean_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_0;
    static const sc_lv<4> ap_const_lv4_3;
    static const sc_lv<4> ap_const_lv4_6;
    static const sc_lv<4> ap_const_lv4_7;
    static const sc_lv<4> ap_const_lv4_9;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<4> ap_const_lv4_4;
    static const sc_lv<4> ap_const_lv4_5;
    static const sc_lv<4> ap_const_lv4_2;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<4> ap_const_lv4_A;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<20> ap_const_lv20_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<18> ap_const_lv18_1F06;
    static const sc_lv<18> ap_const_lv18_1000;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1_pp0_stage0_iter0();
    void thread_ap_block_state2_pp0_stage0_iter1();
    void thread_ap_block_state3_pp0_stage0_iter2();
    void thread_ap_block_state4_pp0_stage0_iter3();
    void thread_ap_condition_235();
    void thread_ap_condition_335();
    void thread_ap_condition_353();
    void thread_ap_condition_523();
    void thread_ap_enable_pp0();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_storemerge_phi_fu_324_p4();
    void thread_ap_phi_reg_pp0_iter1_storemerge_reg_321();
    void thread_ap_predicate_op25_read_state2();
    void thread_ap_predicate_op29_read_state2();
    void thread_ap_predicate_op61_write_state2();
    void thread_ap_predicate_op77_write_state2();
    void thread_ap_reset_idle_pp0();
    void thread_flushAck_V();
    void thread_flushAck_V_1_ack_in();
    void thread_flushAck_V_1_vld_in();
    void thread_flushDone_V_0_ack_out();
    void thread_flushFlag_load_load_fu_360_p1();
    void thread_flushReq_V_0_ack_out();
    void thread_freeAddressArrayDram_1_din();
    void thread_freeAddressArrayDram_1_read();
    void thread_freeAddressArrayDram_1_write();
    void thread_freeAddressArrayFlas_1_din();
    void thread_freeAddressArrayFlas_1_read();
    void thread_freeAddressArrayFlas_1_write();
    void thread_grp_fu_558_p0();
    void thread_grp_fu_558_p00();
    void thread_grp_fu_558_p1();
    void thread_grp_fu_558_p2();
    void thread_grp_nbreadreq_fu_210_p3();
    void thread_grp_nbreadreq_fu_224_p3();
    void thread_grp_read_fu_198_p2();
    void thread_grp_read_fu_204_p2();
    void thread_icmp_fu_416_p2();
    void thread_inData_V_V_blk_n();
    void thread_inData_V_V_read();
    void thread_outDataDram_V_V_blk_n();
    void thread_outDataDram_V_V_din();
    void thread_outDataDram_V_V_write();
    void thread_outDataFlash_V_V_blk_n();
    void thread_outDataFlash_V_V_din();
    void thread_outDataFlash_V_V_write();
    void thread_pcieState_load_load_fu_344_p1();
    void thread_streamInitializedFla_1_load_fu_348_p1();
    void thread_tmp_10_fu_494_p1();
    void thread_tmp_11_nbwritereq_fu_290_p3();
    void thread_tmp_13_nbwritereq_fu_298_p3();
    void thread_tmp_15_nbreadreq_fu_306_p3();
    void thread_tmp_1_fu_486_p3();
    void thread_tmp_2_fu_434_p3();
    void thread_tmp_4_fu_406_p4();
    void thread_tmp_5_nbwritereq_fu_274_p3();
    void thread_tmp_6_fu_450_p2();
    void thread_tmp_7_fu_511_p2();
    void thread_tmp_8_nbwritereq_fu_282_p3();
    void thread_tmp_V_4_fu_498_p3();
    void thread_tmp_V_5_fu_506_p1();
    void thread_tmp_V_7_fu_446_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
